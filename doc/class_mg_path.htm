<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: MgPath类 参考</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">类</a> &#124;
<a href="#pub-methods">Public 成员函数</a> &#124;
<a href="#pri-attribs">Private 属性</a> &#124;
<a href="class_mg_path-members.htm">所有成员列表</a>  </div>
  <div class="headertitle">
<div class="title">MgPath类 参考<div class="ingroups"><a class="el" href="group___g_r_a_p_h___i_n_t_e_r_f_a_c_e.htm">图形接口类</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>矢量路径类  
 <a href="class_mg_path.htm#details">更多...</a></p>

<p><code>#include &lt;mgpath.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
类</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mg_path_1_1_mg_segment_callback.htm">MgSegmentCallback</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">遍历路径段的回调接口  <a href="struct_mg_path_1_1_mg_segment_callback.htm#details">更多...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public 成员函数</h2></td></tr>
<tr class="memitem:a4d473138eb81ce181f89b7537640dc17"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a4d473138eb81ce181f89b7537640dc17.htm#a4d473138eb81ce181f89b7537640dc17">MgPath</a> ()</td></tr>
<tr class="memdesc:a4d473138eb81ce181f89b7537640dc17"><td class="mdescLeft">&#160;</td><td class="mdescRight">默认构造函数  <a href="class_mg_path_a4d473138eb81ce181f89b7537640dc17.htm#a4d473138eb81ce181f89b7537640dc17">更多...</a><br /></td></tr>
<tr class="separator:a4d473138eb81ce181f89b7537640dc17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a6d1b321bdbf07eca852f733d2498ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a0a6d1b321bdbf07eca852f733d2498ae.htm#a0a6d1b321bdbf07eca852f733d2498ae">MgPath</a> (const <a class="el" href="class_mg_path.htm">MgPath</a> &amp;src)</td></tr>
<tr class="memdesc:a0a6d1b321bdbf07eca852f733d2498ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">拷贝构造函数  <a href="class_mg_path_a0a6d1b321bdbf07eca852f733d2498ae.htm#a0a6d1b321bdbf07eca852f733d2498ae">更多...</a><br /></td></tr>
<tr class="separator:a0a6d1b321bdbf07eca852f733d2498ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c0f0a80009bddc70d30e9df89006793"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a8c0f0a80009bddc70d30e9df89006793.htm#a8c0f0a80009bddc70d30e9df89006793">MgPath</a> (int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, const char *<a class="el" href="gigraph_8cpp_a09859336bed349b8ec7c8f5fc32ad7ee.htm#a09859336bed349b8ec7c8f5fc32ad7ee">types</a>)</td></tr>
<tr class="memdesc:a8c0f0a80009bddc70d30e9df89006793"><td class="mdescLeft">&#160;</td><td class="mdescRight">构造函数，指定节点数据  <a href="class_mg_path_a8c0f0a80009bddc70d30e9df89006793.htm#a8c0f0a80009bddc70d30e9df89006793">更多...</a><br /></td></tr>
<tr class="separator:a8c0f0a80009bddc70d30e9df89006793"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe080e1dc16feec5829b0fcf693467e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_afe080e1dc16feec5829b0fcf693467e4.htm#afe080e1dc16feec5829b0fcf693467e4">MgPath</a> (const char *svgd)</td></tr>
<tr class="memdesc:afe080e1dc16feec5829b0fcf693467e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">给定SVG的路径d串构造  <a href="class_mg_path_afe080e1dc16feec5829b0fcf693467e4.htm#afe080e1dc16feec5829b0fcf693467e4">更多...</a><br /></td></tr>
<tr class="separator:afe080e1dc16feec5829b0fcf693467e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0aa04e129f584ee95677961d193f2631"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a0aa04e129f584ee95677961d193f2631.htm#a0aa04e129f584ee95677961d193f2631">~MgPath</a> ()</td></tr>
<tr class="memdesc:a0aa04e129f584ee95677961d193f2631"><td class="mdescLeft">&#160;</td><td class="mdescRight">析构函数  <a href="class_mg_path_a0aa04e129f584ee95677961d193f2631.htm#a0aa04e129f584ee95677961d193f2631">更多...</a><br /></td></tr>
<tr class="separator:a0aa04e129f584ee95677961d193f2631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3259155fcf31610e3073c51513a4104"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_path.htm">MgPath</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ab3259155fcf31610e3073c51513a4104.htm#ab3259155fcf31610e3073c51513a4104">copy</a> (const <a class="el" href="class_mg_path.htm">MgPath</a> &amp;src)</td></tr>
<tr class="memdesc:ab3259155fcf31610e3073c51513a4104"><td class="mdescLeft">&#160;</td><td class="mdescRight">赋值函数  <a href="class_mg_path_ab3259155fcf31610e3073c51513a4104.htm#ab3259155fcf31610e3073c51513a4104">更多...</a><br /></td></tr>
<tr class="separator:ab3259155fcf31610e3073c51513a4104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcb500ed0966b8291fc70a97ee34348f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_path.htm">MgPath</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_afcb500ed0966b8291fc70a97ee34348f.htm#afcb500ed0966b8291fc70a97ee34348f">append</a> (const <a class="el" href="class_mg_path.htm">MgPath</a> &amp;src)</td></tr>
<tr class="memdesc:afcb500ed0966b8291fc70a97ee34348f"><td class="mdescLeft">&#160;</td><td class="mdescRight">追加路径  <a href="class_mg_path_afcb500ed0966b8291fc70a97ee34348f.htm#afcb500ed0966b8291fc70a97ee34348f">更多...</a><br /></td></tr>
<tr class="separator:afcb500ed0966b8291fc70a97ee34348f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a870c055bcf53932b21def47c442a3ea8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_path.htm">MgPath</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a870c055bcf53932b21def47c442a3ea8.htm#a870c055bcf53932b21def47c442a3ea8">addSVGPath</a> (const char *s)</td></tr>
<tr class="memdesc:a870c055bcf53932b21def47c442a3ea8"><td class="mdescLeft">&#160;</td><td class="mdescRight">从SVG的路径d串解析  <a href="class_mg_path_a870c055bcf53932b21def47c442a3ea8.htm#a870c055bcf53932b21def47c442a3ea8">更多...</a><br /></td></tr>
<tr class="separator:a870c055bcf53932b21def47c442a3ea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a358de9e9ed52487418fb97e915293889"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_path.htm">MgPath</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a358de9e9ed52487418fb97e915293889.htm#a358de9e9ed52487418fb97e915293889">reverse</a> ()</td></tr>
<tr class="memdesc:a358de9e9ed52487418fb97e915293889"><td class="mdescLeft">&#160;</td><td class="mdescRight">路径反向  <a href="class_mg_path_a358de9e9ed52487418fb97e915293889.htm#a358de9e9ed52487418fb97e915293889">更多...</a><br /></td></tr>
<tr class="separator:a358de9e9ed52487418fb97e915293889"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b14ecbe0539513839687212cf9e220"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a71b14ecbe0539513839687212cf9e220.htm#a71b14ecbe0539513839687212cf9e220">genericRoundLines</a> (int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, float radius, bool closed=false)</td></tr>
<tr class="memdesc:a71b14ecbe0539513839687212cf9e220"><td class="mdescLeft">&#160;</td><td class="mdescRight">折线拐角圆角化  <a href="class_mg_path_a71b14ecbe0539513839687212cf9e220.htm#a71b14ecbe0539513839687212cf9e220">更多...</a><br /></td></tr>
<tr class="separator:a71b14ecbe0539513839687212cf9e220"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a180d830efaa74ae6f5a3fdda0d7a55de"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a180d830efaa74ae6f5a3fdda0d7a55de.htm#a180d830efaa74ae6f5a3fdda0d7a55de">getCount</a> () const</td></tr>
<tr class="memdesc:a180d830efaa74ae6f5a3fdda0d7a55de"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回节点个数  <a href="class_mg_path_a180d830efaa74ae6f5a3fdda0d7a55de.htm#a180d830efaa74ae6f5a3fdda0d7a55de">更多...</a><br /></td></tr>
<tr class="separator:a180d830efaa74ae6f5a3fdda0d7a55de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab81c20c7ab5af4b06a8b6a6a5819af0b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ab81c20c7ab5af4b06a8b6a6a5819af0b.htm#ab81c20c7ab5af4b06a8b6a6a5819af0b">getSubPathCount</a> () const</td></tr>
<tr class="memdesc:ab81c20c7ab5af4b06a8b6a6a5819af0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回子路径(MoveTo)的个数  <a href="class_mg_path_ab81c20c7ab5af4b06a8b6a6a5819af0b.htm#ab81c20c7ab5af4b06a8b6a6a5819af0b">更多...</a><br /></td></tr>
<tr class="separator:ab81c20c7ab5af4b06a8b6a6a5819af0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab90fcb7cbf65d5dcf61304c54f5adf5b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_point2d.htm">Point2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ab90fcb7cbf65d5dcf61304c54f5adf5b.htm#ab90fcb7cbf65d5dcf61304c54f5adf5b">getStartPoint</a> () const</td></tr>
<tr class="memdesc:ab90fcb7cbf65d5dcf61304c54f5adf5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回起始点  <a href="class_mg_path_ab90fcb7cbf65d5dcf61304c54f5adf5b.htm#ab90fcb7cbf65d5dcf61304c54f5adf5b">更多...</a><br /></td></tr>
<tr class="separator:ab90fcb7cbf65d5dcf61304c54f5adf5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76f9c82dc1db39dbd6949a4036dc03f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_vector2d.htm">Vector2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a76f9c82dc1db39dbd6949a4036dc03f6.htm#a76f9c82dc1db39dbd6949a4036dc03f6">getStartTangent</a> () const</td></tr>
<tr class="memdesc:a76f9c82dc1db39dbd6949a4036dc03f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回起始切线矢量  <a href="class_mg_path_a76f9c82dc1db39dbd6949a4036dc03f6.htm#a76f9c82dc1db39dbd6949a4036dc03f6">更多...</a><br /></td></tr>
<tr class="separator:a76f9c82dc1db39dbd6949a4036dc03f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9e2d140328797e70536ce8476d6569e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_point2d.htm">Point2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_af9e2d140328797e70536ce8476d6569e.htm#af9e2d140328797e70536ce8476d6569e">getEndPoint</a> () const</td></tr>
<tr class="memdesc:af9e2d140328797e70536ce8476d6569e"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回最末点  <a href="class_mg_path_af9e2d140328797e70536ce8476d6569e.htm#af9e2d140328797e70536ce8476d6569e">更多...</a><br /></td></tr>
<tr class="separator:af9e2d140328797e70536ce8476d6569e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f411edab4eb93bd03f2be8118d8cf58"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_vector2d.htm">Vector2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a1f411edab4eb93bd03f2be8118d8cf58.htm#a1f411edab4eb93bd03f2be8118d8cf58">getEndTangent</a> () const</td></tr>
<tr class="memdesc:a1f411edab4eb93bd03f2be8118d8cf58"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回终止切线矢量  <a href="class_mg_path_a1f411edab4eb93bd03f2be8118d8cf58.htm#a1f411edab4eb93bd03f2be8118d8cf58">更多...</a><br /></td></tr>
<tr class="separator:a1f411edab4eb93bd03f2be8118d8cf58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c5b100d77a7acb8f0e1d8ded63e8354"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a6c5b100d77a7acb8f0e1d8ded63e8354.htm#a6c5b100d77a7acb8f0e1d8ded63e8354">isLine</a> () const</td></tr>
<tr class="memdesc:a6c5b100d77a7acb8f0e1d8ded63e8354"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否为线段  <a href="class_mg_path_a6c5b100d77a7acb8f0e1d8ded63e8354.htm#a6c5b100d77a7acb8f0e1d8ded63e8354">更多...</a><br /></td></tr>
<tr class="separator:a6c5b100d77a7acb8f0e1d8ded63e8354"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3c28ee2f94620569d7e831de78a7b7d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ad3c28ee2f94620569d7e831de78a7b7d.htm#ad3c28ee2f94620569d7e831de78a7b7d">isLines</a> () const</td></tr>
<tr class="memdesc:ad3c28ee2f94620569d7e831de78a7b7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否为线段、折线或多边形  <a href="class_mg_path_ad3c28ee2f94620569d7e831de78a7b7d.htm#ad3c28ee2f94620569d7e831de78a7b7d">更多...</a><br /></td></tr>
<tr class="separator:ad3c28ee2f94620569d7e831de78a7b7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0d524921ba4e3e3b92c6f8952efc3e6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ae0d524921ba4e3e3b92c6f8952efc3e6.htm#ae0d524921ba4e3e3b92c6f8952efc3e6">isCurve</a> () const</td></tr>
<tr class="memdesc:ae0d524921ba4e3e3b92c6f8952efc3e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否每段都为曲线段  <a href="class_mg_path_ae0d524921ba4e3e3b92c6f8952efc3e6.htm#ae0d524921ba4e3e3b92c6f8952efc3e6">更多...</a><br /></td></tr>
<tr class="separator:ae0d524921ba4e3e3b92c6f8952efc3e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af19ed101e27d0b99863f0916d668340e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_af19ed101e27d0b99863f0916d668340e.htm#af19ed101e27d0b99863f0916d668340e">isClosed</a> () const</td></tr>
<tr class="memdesc:af19ed101e27d0b99863f0916d668340e"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否为闭合图形  <a href="class_mg_path_af19ed101e27d0b99863f0916d668340e.htm#af19ed101e27d0b99863f0916d668340e">更多...</a><br /></td></tr>
<tr class="separator:af19ed101e27d0b99863f0916d668340e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a471c4d79a64fcc2c6eb0226b850d3b0f"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a471c4d79a64fcc2c6eb0226b850d3b0f.htm#a471c4d79a64fcc2c6eb0226b850d3b0f">getLength</a> () const</td></tr>
<tr class="memdesc:a471c4d79a64fcc2c6eb0226b850d3b0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回路径长度  <a href="class_mg_path_a471c4d79a64fcc2c6eb0226b850d3b0f.htm#a471c4d79a64fcc2c6eb0226b850d3b0f">更多...</a><br /></td></tr>
<tr class="separator:a471c4d79a64fcc2c6eb0226b850d3b0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cb0451b07d2edcf879a6b12638f1aab"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_point2d.htm">Point2d</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a4cb0451b07d2edcf879a6b12638f1aab.htm#a4cb0451b07d2edcf879a6b12638f1aab">getPoints</a> () const</td></tr>
<tr class="memdesc:a4cb0451b07d2edcf879a6b12638f1aab"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回节点坐标数组  <a href="class_mg_path_a4cb0451b07d2edcf879a6b12638f1aab.htm#a4cb0451b07d2edcf879a6b12638f1aab">更多...</a><br /></td></tr>
<tr class="separator:a4cb0451b07d2edcf879a6b12638f1aab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc8be43a8956d5a14810c4c1f0c2acbb"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_afc8be43a8956d5a14810c4c1f0c2acbb.htm#afc8be43a8956d5a14810c4c1f0c2acbb">getTypes</a> () const</td></tr>
<tr class="memdesc:afc8be43a8956d5a14810c4c1f0c2acbb"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回节点类型数组，由 MgPathNode 值组成  <a href="class_mg_path_afc8be43a8956d5a14810c4c1f0c2acbb.htm#afc8be43a8956d5a14810c4c1f0c2acbb">更多...</a><br /></td></tr>
<tr class="separator:afc8be43a8956d5a14810c4c1f0c2acbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435268b852cc86e289c2ae71e4c3a34f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a435268b852cc86e289c2ae71e4c3a34f.htm#a435268b852cc86e289c2ae71e4c3a34f">setPath</a> (int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, const char *<a class="el" href="gigraph_8cpp_a09859336bed349b8ec7c8f5fc32ad7ee.htm#a09859336bed349b8ec7c8f5fc32ad7ee">types</a>)</td></tr>
<tr class="memdesc:a435268b852cc86e289c2ae71e4c3a34f"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置节点数据，types的每个字符由 MgPathNode 值组成或为 mlcqLCQ 之一  <a href="class_mg_path_a435268b852cc86e289c2ae71e4c3a34f.htm#a435268b852cc86e289c2ae71e4c3a34f">更多...</a><br /></td></tr>
<tr class="separator:a435268b852cc86e289c2ae71e4c3a34f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a712297e7abe2b1b32cd689b80dd2d5ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a712297e7abe2b1b32cd689b80dd2d5ab.htm#a712297e7abe2b1b32cd689b80dd2d5ab">setPath</a> (int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, const int *<a class="el" href="gigraph_8cpp_a09859336bed349b8ec7c8f5fc32ad7ee.htm#a09859336bed349b8ec7c8f5fc32ad7ee">types</a>)</td></tr>
<tr class="separator:a712297e7abe2b1b32cd689b80dd2d5ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d88f817a1bd8596f4cd85f4c81342d3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a3d88f817a1bd8596f4cd85f4c81342d3.htm#a3d88f817a1bd8596f4cd85f4c81342d3">scanSegments</a> (<a class="el" href="struct_mg_path_1_1_mg_segment_callback.htm">MgSegmentCallback</a> &amp;c) const</td></tr>
<tr class="memdesc:a3d88f817a1bd8596f4cd85f4c81342d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">遍历路径段  <a href="class_mg_path_a3d88f817a1bd8596f4cd85f4c81342d3.htm#a3d88f817a1bd8596f4cd85f4c81342d3">更多...</a><br /></td></tr>
<tr class="separator:a3d88f817a1bd8596f4cd85f4c81342d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a273797cfafd9ba962a7b9d6b7aae56c8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a273797cfafd9ba962a7b9d6b7aae56c8.htm#a273797cfafd9ba962a7b9d6b7aae56c8">getNodeType</a> (int index) const</td></tr>
<tr class="memdesc:a273797cfafd9ba962a7b9d6b7aae56c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回节点类型，由 MgPathNode 值组成  <a href="class_mg_path_a273797cfafd9ba962a7b9d6b7aae56c8.htm#a273797cfafd9ba962a7b9d6b7aae56c8">更多...</a><br /></td></tr>
<tr class="separator:a273797cfafd9ba962a7b9d6b7aae56c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a934e40f0aa45949b0ffc78d268326140"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_point2d.htm">Point2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a934e40f0aa45949b0ffc78d268326140.htm#a934e40f0aa45949b0ffc78d268326140">getPoint</a> (int index) const</td></tr>
<tr class="memdesc:a934e40f0aa45949b0ffc78d268326140"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到节点坐标，超过点数则取余数  <a href="class_mg_path_a934e40f0aa45949b0ffc78d268326140.htm#a934e40f0aa45949b0ffc78d268326140">更多...</a><br /></td></tr>
<tr class="separator:a934e40f0aa45949b0ffc78d268326140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84bfacaf8272a32b3f212e3498ac59b0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a84bfacaf8272a32b3f212e3498ac59b0.htm#a84bfacaf8272a32b3f212e3498ac59b0">setPoint</a> (int index, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt)</td></tr>
<tr class="memdesc:a84bfacaf8272a32b3f212e3498ac59b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置节点坐标  <a href="class_mg_path_a84bfacaf8272a32b3f212e3498ac59b0.htm#a84bfacaf8272a32b3f212e3498ac59b0">更多...</a><br /></td></tr>
<tr class="separator:a84bfacaf8272a32b3f212e3498ac59b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a610e1e5b2dba8bde051a452196aa28d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a610e1e5b2dba8bde051a452196aa28d3.htm#a610e1e5b2dba8bde051a452196aa28d3">clear</a> ()</td></tr>
<tr class="memdesc:a610e1e5b2dba8bde051a452196aa28d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">清除所有节点  <a href="class_mg_path_a610e1e5b2dba8bde051a452196aa28d3.htm#a610e1e5b2dba8bde051a452196aa28d3">更多...</a><br /></td></tr>
<tr class="separator:a610e1e5b2dba8bde051a452196aa28d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac513c0fd9b3abaadd60c241217dfa6c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ac513c0fd9b3abaadd60c241217dfa6c2.htm#ac513c0fd9b3abaadd60c241217dfa6c2">transform</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;mat)</td></tr>
<tr class="memdesc:ac513c0fd9b3abaadd60c241217dfa6c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">对所有节点坐标进行坐标变换  <a href="class_mg_path_ac513c0fd9b3abaadd60c241217dfa6c2.htm#ac513c0fd9b3abaadd60c241217dfa6c2">更多...</a><br /></td></tr>
<tr class="separator:ac513c0fd9b3abaadd60c241217dfa6c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2930a4aa1068bdd2e8b9505644871fba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a2930a4aa1068bdd2e8b9505644871fba.htm#a2930a4aa1068bdd2e8b9505644871fba">startFigure</a> ()</td></tr>
<tr class="memdesc:a2930a4aa1068bdd2e8b9505644871fba"><td class="mdescLeft">&#160;</td><td class="mdescRight">开始新的一个图元  <a href="class_mg_path_a2930a4aa1068bdd2e8b9505644871fba.htm#a2930a4aa1068bdd2e8b9505644871fba">更多...</a><br /></td></tr>
<tr class="separator:a2930a4aa1068bdd2e8b9505644871fba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a6fd40a18c111b6595804a9d96dd737"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a7a6fd40a18c111b6595804a9d96dd737.htm#a7a6fd40a18c111b6595804a9d96dd737">moveTo</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;point, bool rel=false)</td></tr>
<tr class="memdesc:a7a6fd40a18c111b6595804a9d96dd737"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加移动到新位置的指令节点  <a href="class_mg_path_a7a6fd40a18c111b6595804a9d96dd737.htm#a7a6fd40a18c111b6595804a9d96dd737">更多...</a><br /></td></tr>
<tr class="separator:a7a6fd40a18c111b6595804a9d96dd737"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70bfea26a8c205ed33f1b5383f412b21"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a70bfea26a8c205ed33f1b5383f412b21.htm#a70bfea26a8c205ed33f1b5383f412b21">lineTo</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;point, bool rel=false)</td></tr>
<tr class="memdesc:a70bfea26a8c205ed33f1b5383f412b21"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制直线段到新位置的指令节点  <a href="class_mg_path_a70bfea26a8c205ed33f1b5383f412b21.htm#a70bfea26a8c205ed33f1b5383f412b21">更多...</a><br /></td></tr>
<tr class="separator:a70bfea26a8c205ed33f1b5383f412b21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afccc82896dd4d9fe28fab0cb2b510464"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_afccc82896dd4d9fe28fab0cb2b510464.htm#afccc82896dd4d9fe28fab0cb2b510464">horzTo</a> (float x, bool rel=false)</td></tr>
<tr class="memdesc:afccc82896dd4d9fe28fab0cb2b510464"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制水平线段到新位置的指令节点  <a href="class_mg_path_afccc82896dd4d9fe28fab0cb2b510464.htm#afccc82896dd4d9fe28fab0cb2b510464">更多...</a><br /></td></tr>
<tr class="separator:afccc82896dd4d9fe28fab0cb2b510464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc42a0ebac1016d621a89c62563cdf48"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_acc42a0ebac1016d621a89c62563cdf48.htm#acc42a0ebac1016d621a89c62563cdf48">vertTo</a> (float y, bool rel=false)</td></tr>
<tr class="memdesc:acc42a0ebac1016d621a89c62563cdf48"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制垂直线段到新位置的指令节点  <a href="class_mg_path_acc42a0ebac1016d621a89c62563cdf48.htm#acc42a0ebac1016d621a89c62563cdf48">更多...</a><br /></td></tr>
<tr class="separator:acc42a0ebac1016d621a89c62563cdf48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a115cd6daae8a82fd182c4b916381a690"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a115cd6daae8a82fd182c4b916381a690.htm#a115cd6daae8a82fd182c4b916381a690">linesTo</a> (int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool rel=false)</td></tr>
<tr class="memdesc:a115cd6daae8a82fd182c4b916381a690"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制折线到新位置的指令节点  <a href="class_mg_path_a115cd6daae8a82fd182c4b916381a690.htm#a115cd6daae8a82fd182c4b916381a690">更多...</a><br /></td></tr>
<tr class="separator:a115cd6daae8a82fd182c4b916381a690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cae96b98ddbca5d9972778c6abdfa49"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a9cae96b98ddbca5d9972778c6abdfa49.htm#a9cae96b98ddbca5d9972778c6abdfa49">beziersTo</a> (int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool <a class="el" href="class_mg_path_a358de9e9ed52487418fb97e915293889.htm#a358de9e9ed52487418fb97e915293889">reverse</a>=false, bool rel=false)</td></tr>
<tr class="memdesc:a9cae96b98ddbca5d9972778c6abdfa49"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制三次贝塞尔曲线到新位置的指令节点  <a href="class_mg_path_a9cae96b98ddbca5d9972778c6abdfa49.htm#a9cae96b98ddbca5d9972778c6abdfa49">更多...</a><br /></td></tr>
<tr class="separator:a9cae96b98ddbca5d9972778c6abdfa49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65a1b4a9ce52802050c283fc982685f9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a65a1b4a9ce52802050c283fc982685f9.htm#a65a1b4a9ce52802050c283fc982685f9">bezierTo</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;cp1, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;cp2, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;end, bool rel=false)</td></tr>
<tr class="memdesc:a65a1b4a9ce52802050c283fc982685f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制三次贝塞尔曲线到新位置的指令节点  <a href="class_mg_path_a65a1b4a9ce52802050c283fc982685f9.htm#a65a1b4a9ce52802050c283fc982685f9">更多...</a><br /></td></tr>
<tr class="separator:a65a1b4a9ce52802050c283fc982685f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b3fc2e968112251656bd727f69b73ed"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a6b3fc2e968112251656bd727f69b73ed.htm#a6b3fc2e968112251656bd727f69b73ed">smoothBezierTo</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;cp2, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;end, bool rel=false)</td></tr>
<tr class="memdesc:a6b3fc2e968112251656bd727f69b73ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制光滑三次贝塞尔曲线到新位置的指令节点  <a href="class_mg_path_a6b3fc2e968112251656bd727f69b73ed.htm#a6b3fc2e968112251656bd727f69b73ed">更多...</a><br /></td></tr>
<tr class="separator:a6b3fc2e968112251656bd727f69b73ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe861d8662e8963d621d04a9f98fefd5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_afe861d8662e8963d621d04a9f98fefd5.htm#afe861d8662e8963d621d04a9f98fefd5">quadsTo</a> (int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool rel=false)</td></tr>
<tr class="memdesc:afe861d8662e8963d621d04a9f98fefd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制二次贝塞尔曲线到新位置的指令节点  <a href="class_mg_path_afe861d8662e8963d621d04a9f98fefd5.htm#afe861d8662e8963d621d04a9f98fefd5">更多...</a><br /></td></tr>
<tr class="separator:afe861d8662e8963d621d04a9f98fefd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3318a642e544d43b0c1ff58dcbc559c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ad3318a642e544d43b0c1ff58dcbc559c.htm#ad3318a642e544d43b0c1ff58dcbc559c">quadTo</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;cp, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;end, bool rel=false)</td></tr>
<tr class="memdesc:ad3318a642e544d43b0c1ff58dcbc559c"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制二次贝塞尔曲线到新位置的指令节点  <a href="class_mg_path_ad3318a642e544d43b0c1ff58dcbc559c.htm#ad3318a642e544d43b0c1ff58dcbc559c">更多...</a><br /></td></tr>
<tr class="separator:ad3318a642e544d43b0c1ff58dcbc559c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6748c0caff963f0b156bb42c6622e5e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ad6748c0caff963f0b156bb42c6622e5e.htm#ad6748c0caff963f0b156bb42c6622e5e">smoothQuadTo</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;end, bool rel=false)</td></tr>
<tr class="memdesc:ad6748c0caff963f0b156bb42c6622e5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制光滑二次贝塞尔曲线到新位置的指令节点  <a href="class_mg_path_ad6748c0caff963f0b156bb42c6622e5e.htm#ad6748c0caff963f0b156bb42c6622e5e">更多...</a><br /></td></tr>
<tr class="separator:ad6748c0caff963f0b156bb42c6622e5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9816d7ab8b1bb07c81699ddb08dfafe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ab9816d7ab8b1bb07c81699ddb08dfafe.htm#ab9816d7ab8b1bb07c81699ddb08dfafe">arcTo</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;point, bool rel=false)</td></tr>
<tr class="memdesc:ab9816d7ab8b1bb07c81699ddb08dfafe"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制切线圆弧到新位置的指令节点  <a href="class_mg_path_ab9816d7ab8b1bb07c81699ddb08dfafe.htm#ab9816d7ab8b1bb07c81699ddb08dfafe">更多...</a><br /></td></tr>
<tr class="separator:ab9816d7ab8b1bb07c81699ddb08dfafe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96149850b501bfe38e159a7f068d872e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a96149850b501bfe38e159a7f068d872e.htm#a96149850b501bfe38e159a7f068d872e">arcTo</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;point, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;end, bool rel=false)</td></tr>
<tr class="memdesc:a96149850b501bfe38e159a7f068d872e"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加绘制三点圆弧到新位置的指令节点  <a href="class_mg_path_a96149850b501bfe38e159a7f068d872e.htm#a96149850b501bfe38e159a7f068d872e">更多...</a><br /></td></tr>
<tr class="separator:a96149850b501bfe38e159a7f068d872e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9017f7f2a52b862e924bc351d5186d72"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a9017f7f2a52b862e924bc351d5186d72.htm#a9017f7f2a52b862e924bc351d5186d72">closeFigure</a> ()</td></tr>
<tr class="memdesc:a9017f7f2a52b862e924bc351d5186d72"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加闭合当前图元的指令节点  <a href="class_mg_path_a9017f7f2a52b862e924bc351d5186d72.htm#a9017f7f2a52b862e924bc351d5186d72">更多...</a><br /></td></tr>
<tr class="separator:a9017f7f2a52b862e924bc351d5186d72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5942e10d5b66a49f411e5f4fdd7d6717"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_a5942e10d5b66a49f411e5f4fdd7d6717.htm#a5942e10d5b66a49f411e5f4fdd7d6717">trimStart</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt, float dist)</td></tr>
<tr class="memdesc:a5942e10d5b66a49f411e5f4fdd7d6717"><td class="mdescLeft">&#160;</td><td class="mdescRight">从起始方向去掉给定距离的段，即最终路径的起点与原起点的距离为dist  <a href="class_mg_path_a5942e10d5b66a49f411e5f4fdd7d6717.htm#a5942e10d5b66a49f411e5f4fdd7d6717">更多...</a><br /></td></tr>
<tr class="separator:a5942e10d5b66a49f411e5f4fdd7d6717"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f2f7b92fd2be9ee924d67f7105dc40"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ad9f2f7b92fd2be9ee924d67f7105dc40.htm#ad9f2f7b92fd2be9ee924d67f7105dc40">crossWithPath</a> (const <a class="el" href="class_mg_path.htm">MgPath</a> &amp;path, const <a class="el" href="class_box2d.htm">Box2d</a> &amp;box, <a class="el" href="class_point2d.htm">Point2d</a> &amp;ptCross) const</td></tr>
<tr class="memdesc:ad9f2f7b92fd2be9ee924d67f7105dc40"><td class="mdescLeft">&#160;</td><td class="mdescRight">求两个路径的交点  <a href="class_mg_path_ad9f2f7b92fd2be9ee924d67f7105dc40.htm#ad9f2f7b92fd2be9ee924d67f7105dc40">更多...</a><br /></td></tr>
<tr class="separator:ad9f2f7b92fd2be9ee924d67f7105dc40"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private 属性</h2></td></tr>
<tr class="memitem:ae425ed7a713d875d3e2ab01355b2e381"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_mg_path_impl.htm">MgPathImpl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_path_ae425ed7a713d875d3e2ab01355b2e381.htm#ae425ed7a713d875d3e2ab01355b2e381">m_data</a></td></tr>
<tr class="separator:ae425ed7a713d875d3e2ab01355b2e381"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">详细描述</h2>
<div class="textblock"><p>矢量路径类 </p>
<dl class="section see"><dt>参见</dt><dd><a class="el" href="class_gi_graphics.htm" title="图形系统类 ">GiGraphics</a>, <a class="el" href="mgpath_8h_a6fa04db433568bb90f124ffa2db13d4e.htm#a6fa04db433568bb90f124ffa2db13d4e" title="矢量路径节点类型 ">MgPathNode</a> </dd></dl>
</div><hr/>该类的文档由以下文件生成:<ul>
<li><a class="el" href="mgpath_8h.htm">mgpath.h</a></li>
<li><a class="el" href="mgpath_8cpp.htm">mgpath.cpp</a></li>
<li><a class="el" href="nanosvg_8cpp.htm">nanosvg.cpp</a></li>
</ul>
</div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>