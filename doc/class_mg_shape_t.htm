<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: MgShapeT&lt; ShapeT, ContextT &gt; 模板类 参考</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public 成员函数</a> &#124;
<a href="#pub-static-methods">静态 Public 成员函数</a> &#124;
<a href="#pub-attribs">Public 属性</a> &#124;
<a href="#pri-types">Private 类型</a> &#124;
<a href="class_mg_shape_t-members.htm">所有成员列表</a>  </div>
  <div class="headertitle">
<div class="title">MgShapeT&lt; ShapeT, ContextT &gt; 模板类 参考<div class="ingroups"><a class="el" href="group___c_o_r_e___s_h_a_p_e.htm">图形实体类</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>矢量图形模板类  
 <a href="class_mg_shape_t.htm#details">更多...</a></p>

<p><code>#include &lt;mgshapet.h&gt;</code></p>
<div class="dynheader">
类 MgShapeT&lt; ShapeT, ContextT &gt; 继承关系图:</div>
<div class="dyncontent">
<div class="center"><img src="class_mg_shape_t__inherit__graph.png" border="0" usemap="#_mg_shape_t_3_01_shape_t_00_01_context_t_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="_mg_shape_t_3_01_shape_t_00_01_context_t_01_4_inherit__map" id="_mg_shape_t_3_01_shape_t_00_01_context_t_01_4_inherit__map">
<area shape="rect" id="node2" href="class_mg_shape.htm" title="矢量图形接口 " alt="" coords="57,273,169,552"/>
<area shape="rect" id="node3" href="class_mg_object.htm" title="图形对象基类 " alt="" coords="47,5,180,225"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public 成员函数</h2></td></tr>
<tr class="memitem:a24a3dc388677986f442d773d32666fe2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a24a3dc388677986f442d773d32666fe2.htm#a24a3dc388677986f442d773d32666fe2">MgShapeT</a> ()</td></tr>
<tr class="separator:a24a3dc388677986f442d773d32666fe2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c2851094454a447786450f9251bd90b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a2c2851094454a447786450f9251bd90b.htm#a2c2851094454a447786450f9251bd90b">MgShapeT</a> (const ContextT &amp;ctx)</td></tr>
<tr class="separator:a2c2851094454a447786450f9251bd90b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcaaef502c3d63f1e78ef7e788ed49fc"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_adcaaef502c3d63f1e78ef7e788ed49fc.htm#adcaaef502c3d63f1e78ef7e788ed49fc">~MgShapeT</a> ()</td></tr>
<tr class="separator:adcaaef502c3d63f1e78ef7e788ed49fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15792426a84bef0843d24278bcfe7ce6"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_gi_context.htm">GiContext</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a15792426a84bef0843d24278bcfe7ce6.htm#a15792426a84bef0843d24278bcfe7ce6">context</a> () const</td></tr>
<tr class="memdesc:a15792426a84bef0843d24278bcfe7ce6"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回显示属性  <a href="class_mg_shape_t_a15792426a84bef0843d24278bcfe7ce6.htm#a15792426a84bef0843d24278bcfe7ce6">更多...</a><br /></td></tr>
<tr class="separator:a15792426a84bef0843d24278bcfe7ce6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f4c001c55de80472842450b6ccd0da4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a6f4c001c55de80472842450b6ccd0da4.htm#a6f4c001c55de80472842450b6ccd0da4">setContext</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> &amp;ctx, int mask)</td></tr>
<tr class="memdesc:a6f4c001c55de80472842450b6ccd0da4"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置显示属性  <a href="class_mg_shape_t_a6f4c001c55de80472842450b6ccd0da4.htm#a6f4c001c55de80472842450b6ccd0da4">更多...</a><br /></td></tr>
<tr class="separator:a6f4c001c55de80472842450b6ccd0da4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a487bc5e672db3d07d7f486ec690447f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_base_shape.htm">MgBaseShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a487bc5e672db3d07d7f486ec690447f7.htm#a487bc5e672db3d07d7f486ec690447f7">shape</a> ()</td></tr>
<tr class="memdesc:a487bc5e672db3d07d7f486ec690447f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回几何图形对象  <a href="class_mg_shape_t_a487bc5e672db3d07d7f486ec690447f7.htm#a487bc5e672db3d07d7f486ec690447f7">更多...</a><br /></td></tr>
<tr class="separator:a487bc5e672db3d07d7f486ec690447f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47064b74024ce2629278572abb1d99f5"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_base_shape.htm">MgBaseShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a47064b74024ce2629278572abb1d99f5.htm#a47064b74024ce2629278572abb1d99f5">shapec</a> () const</td></tr>
<tr class="memdesc:a47064b74024ce2629278572abb1d99f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回几何图形对象(const)  <a href="class_mg_shape_t_a47064b74024ce2629278572abb1d99f5.htm#a47064b74024ce2629278572abb1d99f5">更多...</a><br /></td></tr>
<tr class="separator:a47064b74024ce2629278572abb1d99f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a2492cfdeedddf37d20d4a3c232b62d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a5a2492cfdeedddf37d20d4a3c232b62d.htm#a5a2492cfdeedddf37d20d4a3c232b62d">getType</a> () const</td></tr>
<tr class="memdesc:a5a2492cfdeedddf37d20d4a3c232b62d"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回对象类型  <a href="class_mg_shape_t_a5a2492cfdeedddf37d20d4a3c232b62d.htm#a5a2492cfdeedddf37d20d4a3c232b62d">更多...</a><br /></td></tr>
<tr class="separator:a5a2492cfdeedddf37d20d4a3c232b62d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a11fde99b35fcae63d0d064a79ab8f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a8a11fde99b35fcae63d0d064a79ab8f5.htm#a8a11fde99b35fcae63d0d064a79ab8f5">release</a> ()</td></tr>
<tr class="memdesc:a8a11fde99b35fcae63d0d064a79ab8f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">释放引用计数，为0时销毁对象  <a href="class_mg_shape_t_a8a11fde99b35fcae63d0d064a79ab8f5.htm#a8a11fde99b35fcae63d0d064a79ab8f5">更多...</a><br /></td></tr>
<tr class="separator:a8a11fde99b35fcae63d0d064a79ab8f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a476242dce3d10c1ac3ec9f7b281460b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a476242dce3d10c1ac3ec9f7b281460b7.htm#a476242dce3d10c1ac3ec9f7b281460b7">addRef</a> ()</td></tr>
<tr class="memdesc:a476242dce3d10c1ac3ec9f7b281460b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加引用计数  <a href="class_mg_shape_t_a476242dce3d10c1ac3ec9f7b281460b7.htm#a476242dce3d10c1ac3ec9f7b281460b7">更多...</a><br /></td></tr>
<tr class="separator:a476242dce3d10c1ac3ec9f7b281460b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac104653d1ab0e5e3149506e9d7f6d29c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_object.htm">MgObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_ac104653d1ab0e5e3149506e9d7f6d29c.htm#ac104653d1ab0e5e3149506e9d7f6d29c">clone</a> () const</td></tr>
<tr class="memdesc:ac104653d1ab0e5e3149506e9d7f6d29c"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制出一个新对象  <a href="class_mg_shape_t_ac104653d1ab0e5e3149506e9d7f6d29c.htm#ac104653d1ab0e5e3149506e9d7f6d29c">更多...</a><br /></td></tr>
<tr class="separator:ac104653d1ab0e5e3149506e9d7f6d29c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31797dd30386f64394249148bb297125"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a31797dd30386f64394249148bb297125.htm#a31797dd30386f64394249148bb297125">getID</a> () const</td></tr>
<tr class="memdesc:a31797dd30386f64394249148bb297125"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回图形编号  <a href="class_mg_shape_t_a31797dd30386f64394249148bb297125.htm#a31797dd30386f64394249148bb297125">更多...</a><br /></td></tr>
<tr class="separator:a31797dd30386f64394249148bb297125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668668ffd86f7c0f8de2f656fa240a0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_shapes.htm">MgShapes</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a668668ffd86f7c0f8de2f656fa240a0e.htm#a668668ffd86f7c0f8de2f656fa240a0e">getParent</a> () const</td></tr>
<tr class="memdesc:a668668ffd86f7c0f8de2f656fa240a0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到上一级图形列表  <a href="class_mg_shape_t_a668668ffd86f7c0f8de2f656fa240a0e.htm#a668668ffd86f7c0f8de2f656fa240a0e">更多...</a><br /></td></tr>
<tr class="separator:a668668ffd86f7c0f8de2f656fa240a0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef90c0c87882257e3f4a51a06a4bf458"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_aef90c0c87882257e3f4a51a06a4bf458.htm#aef90c0c87882257e3f4a51a06a4bf458">setParent</a> (<a class="el" href="class_mg_shapes.htm">MgShapes</a> *p, int sid)</td></tr>
<tr class="memdesc:aef90c0c87882257e3f4a51a06a4bf458"><td class="mdescLeft">&#160;</td><td class="mdescRight">由图形列表设置拥有者和编号  <a href="class_mg_shape_t_aef90c0c87882257e3f4a51a06a4bf458.htm#aef90c0c87882257e3f4a51a06a4bf458">更多...</a><br /></td></tr>
<tr class="separator:aef90c0c87882257e3f4a51a06a4bf458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57d4012be1af1238f0318fd87176c639"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a57d4012be1af1238f0318fd87176c639.htm#a57d4012be1af1238f0318fd87176c639">getTag</a> () const</td></tr>
<tr class="memdesc:a57d4012be1af1238f0318fd87176c639"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回应用程序自定义标记  <a href="class_mg_shape_t_a57d4012be1af1238f0318fd87176c639.htm#a57d4012be1af1238f0318fd87176c639">更多...</a><br /></td></tr>
<tr class="separator:a57d4012be1af1238f0318fd87176c639"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a754e0b2de7619b701f09c72b3ce41c26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a754e0b2de7619b701f09c72b3ce41c26.htm#a754e0b2de7619b701f09c72b3ce41c26">setTag</a> (int tag)</td></tr>
<tr class="memdesc:a754e0b2de7619b701f09c72b3ce41c26"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置应用程序自定义标记，可由此扩展数据  <a href="class_mg_shape_t_a754e0b2de7619b701f09c72b3ce41c26.htm#a754e0b2de7619b701f09c72b3ce41c26">更多...</a><br /></td></tr>
<tr class="separator:a754e0b2de7619b701f09c72b3ce41c26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_mg_shape"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_mg_shape')"><img src="closed.png" alt="-"/>&#160;Public 成员函数 继承自 <a class="el" href="class_mg_shape.htm">MgShape</a></td></tr>
<tr class="memitem:a65676d4753bb8e3e39bf9b58fdbcf3da inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_a65676d4753bb8e3e39bf9b58fdbcf3da.htm#a65676d4753bb8e3e39bf9b58fdbcf3da">toHandle</a> () const</td></tr>
<tr class="memdesc:a65676d4753bb8e3e39bf9b58fdbcf3da inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到句柄，用于跨库转换  <a href="class_mg_shape_a65676d4753bb8e3e39bf9b58fdbcf3da.htm#a65676d4753bb8e3e39bf9b58fdbcf3da">更多...</a><br /></td></tr>
<tr class="separator:a65676d4753bb8e3e39bf9b58fdbcf3da inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77041a5e6ea456b8a8249899b0e0a971 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_a77041a5e6ea456b8a8249899b0e0a971.htm#a77041a5e6ea456b8a8249899b0e0a971">cloneShape</a> () const</td></tr>
<tr class="memdesc:a77041a5e6ea456b8a8249899b0e0a971 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制出一个新图形对象  <a href="class_mg_shape_a77041a5e6ea456b8a8249899b0e0a971.htm#a77041a5e6ea456b8a8249899b0e0a971">更多...</a><br /></td></tr>
<tr class="separator:a77041a5e6ea456b8a8249899b0e0a971 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae03e40be1039fbafd4d7efaead4a6b75 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_ae03e40be1039fbafd4d7efaead4a6b75.htm#ae03e40be1039fbafd4d7efaead4a6b75">setContext</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> &amp;ctx)</td></tr>
<tr class="separator:ae03e40be1039fbafd4d7efaead4a6b75 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae12083d6d50bf5c07abfb09d9c5b4dae inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_ae12083d6d50bf5c07abfb09d9c5b4dae.htm#ae12083d6d50bf5c07abfb09d9c5b4dae">hasFillColor</a> () const</td></tr>
<tr class="memdesc:ae12083d6d50bf5c07abfb09d9c5b4dae inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否为闭合填充图形  <a href="class_mg_shape_ae12083d6d50bf5c07abfb09d9c5b4dae.htm#ae12083d6d50bf5c07abfb09d9c5b4dae">更多...</a><br /></td></tr>
<tr class="separator:ae12083d6d50bf5c07abfb09d9c5b4dae inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5354322cac91597f0a42350966fc0848 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_a5354322cac91597f0a42350966fc0848.htm#a5354322cac91597f0a42350966fc0848">draw</a> (int mode, <a class="el" href="class_gi_graphics.htm">GiGraphics</a> &amp;gs, const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int segment) const</td></tr>
<tr class="memdesc:a5354322cac91597f0a42350966fc0848 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">显示图形  <a href="class_mg_shape_a5354322cac91597f0a42350966fc0848.htm#a5354322cac91597f0a42350966fc0848">更多...</a><br /></td></tr>
<tr class="separator:a5354322cac91597f0a42350966fc0848 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab54479a5b83cbb0db4f7cec908193057 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_ab54479a5b83cbb0db4f7cec908193057.htm#ab54479a5b83cbb0db4f7cec908193057">save</a> (MgStorage *s) const</td></tr>
<tr class="memdesc:ab54479a5b83cbb0db4f7cec908193057 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">保存图形到指定的序列化对象  <a href="class_mg_shape_ab54479a5b83cbb0db4f7cec908193057.htm#ab54479a5b83cbb0db4f7cec908193057">更多...</a><br /></td></tr>
<tr class="separator:ab54479a5b83cbb0db4f7cec908193057 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a338720ce5f644d8776cb66af2e21c6a3 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_a338720ce5f644d8776cb66af2e21c6a3.htm#a338720ce5f644d8776cb66af2e21c6a3">load</a> (MgShapeFactory *factory, MgStorage *s)</td></tr>
<tr class="memdesc:a338720ce5f644d8776cb66af2e21c6a3 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">从指定的序列化对象加载图形  <a href="class_mg_shape_a338720ce5f644d8776cb66af2e21c6a3.htm#a338720ce5f644d8776cb66af2e21c6a3">更多...</a><br /></td></tr>
<tr class="separator:a338720ce5f644d8776cb66af2e21c6a3 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae48a6ebd38f28609f4e7f2419e00a8d5 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_ae48a6ebd38f28609f4e7f2419e00a8d5.htm#ae48a6ebd38f28609f4e7f2419e00a8d5">copy</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src)</td></tr>
<tr class="memdesc:ae48a6ebd38f28609f4e7f2419e00a8d5 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制对象数据  <a href="class_mg_shape_ae48a6ebd38f28609f4e7f2419e00a8d5.htm#ae48a6ebd38f28609f4e7f2419e00a8d5">更多...</a><br /></td></tr>
<tr class="separator:ae48a6ebd38f28609f4e7f2419e00a8d5 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0137a97dd5e0da882e78b8509fd151d inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_ac0137a97dd5e0da882e78b8509fd151d.htm#ac0137a97dd5e0da882e78b8509fd151d">equals</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src) const</td></tr>
<tr class="memdesc:ac0137a97dd5e0da882e78b8509fd151d inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">比较与另一同类对象是否相同  <a href="class_mg_shape_ac0137a97dd5e0da882e78b8509fd151d.htm#ac0137a97dd5e0da882e78b8509fd151d">更多...</a><br /></td></tr>
<tr class="separator:ac0137a97dd5e0da882e78b8509fd151d inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3564cc54a6600e688d9f8cc024e2018 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_ae3564cc54a6600e688d9f8cc024e2018.htm#ae3564cc54a6600e688d9f8cc024e2018">isKindOf</a> (int type) const</td></tr>
<tr class="memdesc:ae3564cc54a6600e688d9f8cc024e2018 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否能转化为指定类型的对象，即本类为指定类或其派生类  <a href="class_mg_shape_ae3564cc54a6600e688d9f8cc024e2018.htm#ae3564cc54a6600e688d9f8cc024e2018">更多...</a><br /></td></tr>
<tr class="separator:ae3564cc54a6600e688d9f8cc024e2018 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3134c367773181061e4c399694bc7433 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_a3134c367773181061e4c399694bc7433.htm#a3134c367773181061e4c399694bc7433">getPointCount</a> () const</td></tr>
<tr class="memdesc:a3134c367773181061e4c399694bc7433 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回顶点个数  <a href="class_mg_shape_a3134c367773181061e4c399694bc7433.htm#a3134c367773181061e4c399694bc7433">更多...</a><br /></td></tr>
<tr class="separator:a3134c367773181061e4c399694bc7433 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7860c0df2054d38fa781997ece5e0a52 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_point2d.htm">Point2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_a7860c0df2054d38fa781997ece5e0a52.htm#a7860c0df2054d38fa781997ece5e0a52">getPoint</a> (int index) const</td></tr>
<tr class="memdesc:a7860c0df2054d38fa781997ece5e0a52 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回指定序号的顶点  <a href="class_mg_shape_a7860c0df2054d38fa781997ece5e0a52.htm#a7860c0df2054d38fa781997ece5e0a52">更多...</a><br /></td></tr>
<tr class="separator:a7860c0df2054d38fa781997ece5e0a52 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa78a71a51a3830a12242084596e1bbd0 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_aa78a71a51a3830a12242084596e1bbd0.htm#aa78a71a51a3830a12242084596e1bbd0">getHandleCount</a> () const</td></tr>
<tr class="memdesc:aa78a71a51a3830a12242084596e1bbd0 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回控制点个数  <a href="class_mg_shape_aa78a71a51a3830a12242084596e1bbd0.htm#aa78a71a51a3830a12242084596e1bbd0">更多...</a><br /></td></tr>
<tr class="separator:aa78a71a51a3830a12242084596e1bbd0 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb74e4511dad86c9a0b80c5ae92bb0e3 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_point2d.htm">Point2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_acb74e4511dad86c9a0b80c5ae92bb0e3.htm#acb74e4511dad86c9a0b80c5ae92bb0e3">getHandlePoint</a> (int index) const</td></tr>
<tr class="memdesc:acb74e4511dad86c9a0b80c5ae92bb0e3 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回指定序号的控制点坐标  <a href="class_mg_shape_acb74e4511dad86c9a0b80c5ae92bb0e3.htm#acb74e4511dad86c9a0b80c5ae92bb0e3">更多...</a><br /></td></tr>
<tr class="separator:acb74e4511dad86c9a0b80c5ae92bb0e3 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ddd98a227d472c0c4aa75936aa8a667 inherit pub_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_a9ddd98a227d472c0c4aa75936aa8a667.htm#a9ddd98a227d472c0c4aa75936aa8a667">getHandleType</a> (int index) const</td></tr>
<tr class="memdesc:a9ddd98a227d472c0c4aa75936aa8a667 inherit pub_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回指定序号的控制点类型(MgHandleType)  <a href="class_mg_shape_a9ddd98a227d472c0c4aa75936aa8a667.htm#a9ddd98a227d472c0c4aa75936aa8a667">更多...</a><br /></td></tr>
<tr class="separator:a9ddd98a227d472c0c4aa75936aa8a667 inherit pub_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_mg_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_mg_object')"><img src="closed.png" alt="-"/>&#160;Public 成员函数 继承自 <a class="el" href="class_mg_object.htm">MgObject</a></td></tr>
<tr class="memitem:a488ef143ee9edfd5daef6a7fe2d72179 inherit pub_methods_class_mg_object"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_object.htm">MgObject</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_object_a488ef143ee9edfd5daef6a7fe2d72179.htm#a488ef143ee9edfd5daef6a7fe2d72179">operator=</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src)</td></tr>
<tr class="separator:a488ef143ee9edfd5daef6a7fe2d72179 inherit pub_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39beb9ae60c954540c67580e17816618 inherit pub_methods_class_mg_object"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_object_a39beb9ae60c954540c67580e17816618.htm#a39beb9ae60c954540c67580e17816618">operator==</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src) const</td></tr>
<tr class="separator:a39beb9ae60c954540c67580e17816618 inherit pub_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7275ce22b52bab62a7331471e2ab0a0d inherit pub_methods_class_mg_object"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_object_a7275ce22b52bab62a7331471e2ab0a0d.htm#a7275ce22b52bab62a7331471e2ab0a0d">operator!=</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src) const</td></tr>
<tr class="separator:a7275ce22b52bab62a7331471e2ab0a0d inherit pub_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
静态 Public 成员函数</h2></td></tr>
<tr class="memitem:a8551f26d76aae062ffbc623bf338af66"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a8551f26d76aae062ffbc623bf338af66.htm#a8551f26d76aae062ffbc623bf338af66">registerCreator</a> (MgShapeFactory *factory)</td></tr>
<tr class="memdesc:a8551f26d76aae062ffbc623bf338af66"><td class="mdescLeft">&#160;</td><td class="mdescRight">登记类型号对应的图形创建函数  <a href="class_mg_shape_t_a8551f26d76aae062ffbc623bf338af66.htm#a8551f26d76aae062ffbc623bf338af66">更多...</a><br /></td></tr>
<tr class="separator:a8551f26d76aae062ffbc623bf338af66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80ca8ac9514f56a5944d84cab50eba98"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a80ca8ac9514f56a5944d84cab50eba98.htm#a80ca8ac9514f56a5944d84cab50eba98">create</a> ()</td></tr>
<tr class="separator:a80ca8ac9514f56a5944d84cab50eba98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a009086fce128a830636dcee23088cf87"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a009086fce128a830636dcee23088cf87.htm#a009086fce128a830636dcee23088cf87">Type</a> ()</td></tr>
<tr class="memdesc:a009086fce128a830636dcee23088cf87"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回本对象的类型  <a href="class_mg_shape_t_a009086fce128a830636dcee23088cf87.htm#a009086fce128a830636dcee23088cf87">更多...</a><br /></td></tr>
<tr class="separator:a009086fce128a830636dcee23088cf87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_mg_shape"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_class_mg_shape')"><img src="closed.png" alt="-"/>&#160;静态 Public 成员函数 继承自 <a class="el" href="class_mg_shape.htm">MgShape</a></td></tr>
<tr class="memitem:aea6a2e87bd2683d500436cc1505af82e inherit pub_static_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_aea6a2e87bd2683d500436cc1505af82e.htm#aea6a2e87bd2683d500436cc1505af82e">Null</a> ()</td></tr>
<tr class="memdesc:aea6a2e87bd2683d500436cc1505af82e inherit pub_static_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">零指针  <a href="class_mg_shape_aea6a2e87bd2683d500436cc1505af82e.htm#aea6a2e87bd2683d500436cc1505af82e">更多...</a><br /></td></tr>
<tr class="separator:aea6a2e87bd2683d500436cc1505af82e inherit pub_static_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad209b9908c81be57107c58d3c768e3fd inherit pub_static_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_ad209b9908c81be57107c58d3c768e3fd.htm#ad209b9908c81be57107c58d3c768e3fd">fromHandle</a> (long h)</td></tr>
<tr class="memdesc:ad209b9908c81be57107c58d3c768e3fd inherit pub_static_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">转为对象  <a href="class_mg_shape_ad209b9908c81be57107c58d3c768e3fd.htm#ad209b9908c81be57107c58d3c768e3fd">更多...</a><br /></td></tr>
<tr class="separator:ad209b9908c81be57107c58d3c768e3fd inherit pub_static_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeabf32f9121350d7ef1ccf06a7d104ce inherit pub_static_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_aeabf32f9121350d7ef1ccf06a7d104ce.htm#aeabf32f9121350d7ef1ccf06a7d104ce">drawShape</a> (const <a class="el" href="class_mg_shapes.htm">MgShapes</a> *shapes, const <a class="el" href="class_mg_base_shape.htm">MgBaseShape</a> &amp;sp, int mode, <a class="el" href="class_gi_graphics.htm">GiGraphics</a> &amp;gs, const <a class="el" href="class_gi_context.htm">GiContext</a> &amp;ctx, int segment)</td></tr>
<tr class="memdesc:aeabf32f9121350d7ef1ccf06a7d104ce inherit pub_static_methods_class_mg_shape"><td class="mdescLeft">&#160;</td><td class="mdescRight">显示内部图形  <a href="class_mg_shape_aeabf32f9121350d7ef1ccf06a7d104ce.htm#aeabf32f9121350d7ef1ccf06a7d104ce">更多...</a><br /></td></tr>
<tr class="separator:aeabf32f9121350d7ef1ccf06a7d104ce inherit pub_static_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_mg_object"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_class_mg_object')"><img src="closed.png" alt="-"/>&#160;静态 Public 成员函数 继承自 <a class="el" href="class_mg_object.htm">MgObject</a></td></tr>
<tr class="memitem:acdb0a8b9516dda55cfb5e458bf8bb04c inherit pub_static_methods_class_mg_object"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:acdb0a8b9516dda55cfb5e458bf8bb04c inherit pub_static_methods_class_mg_object"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_mg_object_acdb0a8b9516dda55cfb5e458bf8bb04c.htm#acdb0a8b9516dda55cfb5e458bf8bb04c">release_pointer</a> (T *&amp;p)</td></tr>
<tr class="separator:acdb0a8b9516dda55cfb5e458bf8bb04c inherit pub_static_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public 属性</h2></td></tr>
<tr class="memitem:a1fa2498da253c325973ba498959310c9"><td class="memItemLeft" align="right" valign="top">ShapeT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a1fa2498da253c325973ba498959310c9.htm#a1fa2498da253c325973ba498959310c9">_shape</a></td></tr>
<tr class="separator:a1fa2498da253c325973ba498959310c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fc66deadfa8b2aa1642426191ddeaeb"><td class="memItemLeft" align="right" valign="top">ContextT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a0fc66deadfa8b2aa1642426191ddeaeb.htm#a0fc66deadfa8b2aa1642426191ddeaeb">_context</a></td></tr>
<tr class="separator:a0fc66deadfa8b2aa1642426191ddeaeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08a3bf12a579a1b29aa34ce496073b3a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a08a3bf12a579a1b29aa34ce496073b3a.htm#a08a3bf12a579a1b29aa34ce496073b3a">_id</a></td></tr>
<tr class="separator:a08a3bf12a579a1b29aa34ce496073b3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8111fba4f7712d93d2bb1dde44c7f84e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_shapes.htm">MgShapes</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a8111fba4f7712d93d2bb1dde44c7f84e.htm#a8111fba4f7712d93d2bb1dde44c7f84e">_parent</a></td></tr>
<tr class="separator:a8111fba4f7712d93d2bb1dde44c7f84e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71444727402f2536cccf223a213cd42b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a71444727402f2536cccf223a213cd42b.htm#a71444727402f2536cccf223a213cd42b">_tag</a></td></tr>
<tr class="separator:a71444727402f2536cccf223a213cd42b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b2114cc04c376f75d87a0fe5fe68d04"><td class="memItemLeft" align="right" valign="top">volatile long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_a0b2114cc04c376f75d87a0fe5fe68d04.htm#a0b2114cc04c376f75d87a0fe5fe68d04">_refcount</a></td></tr>
<tr class="separator:a0b2114cc04c376f75d87a0fe5fe68d04"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-types"></a>
Private 类型</h2></td></tr>
<tr class="memitem:ae9804c68de0218a102ee70ad785d7d6b"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="class_mg_shape_t.htm">MgShapeT</a>&lt; ShapeT, ContextT &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_t_ae9804c68de0218a102ee70ad785d7d6b.htm#ae9804c68de0218a102ee70ad785d7d6b">ThisClass</a></td></tr>
<tr class="separator:ae9804c68de0218a102ee70ad785d7d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
额外继承的成员函数</h2></td></tr>
<tr class="inherit_header pro_methods_class_mg_shape"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_mg_shape')"><img src="closed.png" alt="-"/>&#160;Protected 成员函数 继承自 <a class="el" href="class_mg_shape.htm">MgShape</a></td></tr>
<tr class="memitem:ad29d0a74d0f1880a6234b303ca1395e1 inherit pro_methods_class_mg_shape"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shape_ad29d0a74d0f1880a6234b303ca1395e1.htm#ad29d0a74d0f1880a6234b303ca1395e1">~MgShape</a> ()</td></tr>
<tr class="separator:ad29d0a74d0f1880a6234b303ca1395e1 inherit pro_methods_class_mg_shape"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_class_mg_object"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_mg_object')"><img src="closed.png" alt="-"/>&#160;Protected 成员函数 继承自 <a class="el" href="class_mg_object.htm">MgObject</a></td></tr>
<tr class="memitem:a9318d93043fc20f4233cc4eb9f7fe38b inherit pro_methods_class_mg_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_object_a9318d93043fc20f4233cc4eb9f7fe38b.htm#a9318d93043fc20f4233cc4eb9f7fe38b">~MgObject</a> ()</td></tr>
<tr class="separator:a9318d93043fc20f4233cc4eb9f7fe38b inherit pro_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">详细描述</h2>
<div class="textblock"><h3>template&lt;class ShapeT, class ContextT = GiContext&gt;<br />
class MgShapeT&lt; ShapeT, ContextT &gt;</h3>

<p>矢量图形模板类 </p>
<p>使用 <a class="el" href="class_mg_shape_t_a8551f26d76aae062ffbc623bf338af66.htm#a8551f26d76aae062ffbc623bf338af66" title="登记类型号对应的图形创建函数 ">MgShapeT&lt;ShapeClass&gt;::registerCreator()</a> 登记图形种类; </p>
</div><hr/>该类的文档由以下文件生成:<ul>
<li><a class="el" href="mgshapet_8h.htm">mgshapet.h</a></li>
</ul>
</div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>