<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: mgnear结构体 参考</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">静态 Public 成员函数</a> &#124;
<a href="structmgnear-members.htm">所有成员列表</a>  </div>
  <div class="headertitle">
<div class="title">mgnear结构体 参考<div class="ingroups"><a class="el" href="group___g_e_o_m_a_p_i.htm">几何计算函数</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>求曲线上最近点的函数  
 <a href="structmgnear.htm#details">更多...</a></p>

<p><code>#include &lt;mgnear.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
静态 Public 成员函数</h2></td></tr>
<tr class="memitem:a063720b5b54d903d035ef302a07d6544"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_a063720b5b54d903d035ef302a07d6544.htm#a063720b5b54d903d035ef302a07d6544">nearestOnBezier</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt, const <a class="el" href="class_point2d.htm">Point2d</a> *pts, <a class="el" href="class_point2d.htm">Point2d</a> &amp;nearpt)</td></tr>
<tr class="memdesc:a063720b5b54d903d035ef302a07d6544"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算一点到三次贝塞尔曲线段上的最近点  <a href="structmgnear_a063720b5b54d903d035ef302a07d6544.htm#a063720b5b54d903d035ef302a07d6544">更多...</a><br /></td></tr>
<tr class="separator:a063720b5b54d903d035ef302a07d6544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a2331922fd918ef245ae7c44fb52945"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_box2d.htm">Box2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_a8a2331922fd918ef245ae7c44fb52945.htm#a8a2331922fd918ef245ae7c44fb52945">bezierBox1</a> (const <a class="el" href="class_point2d.htm">Point2d</a> points[4])</td></tr>
<tr class="memdesc:a8a2331922fd918ef245ae7c44fb52945"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算贝塞尔曲线段的绑定框  <a href="structmgnear_a8a2331922fd918ef245ae7c44fb52945.htm#a8a2331922fd918ef245ae7c44fb52945">更多...</a><br /></td></tr>
<tr class="separator:a8a2331922fd918ef245ae7c44fb52945"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa176c3f7eb9be11282858ac49c472b27"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_box2d.htm">Box2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_aa176c3f7eb9be11282858ac49c472b27.htm#aa176c3f7eb9be11282858ac49c472b27">bezierBox4</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;p1, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;p2, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;p3, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;p4)</td></tr>
<tr class="memdesc:aa176c3f7eb9be11282858ac49c472b27"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算贝塞尔曲线段的绑定框  <a href="structmgnear_aa176c3f7eb9be11282858ac49c472b27.htm#aa176c3f7eb9be11282858ac49c472b27">更多...</a><br /></td></tr>
<tr class="separator:aa176c3f7eb9be11282858ac49c472b27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43c92f589baab9434d04d2ce97bbd961"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_a43c92f589baab9434d04d2ce97bbd961.htm#a43c92f589baab9434d04d2ce97bbd961">beziersBox</a> (<a class="el" href="class_box2d.htm">Box2d</a> &amp;box, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool closed=false)</td></tr>
<tr class="memdesc:a43c92f589baab9434d04d2ce97bbd961"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算贝塞尔曲线的绑定框  <a href="structmgnear_a43c92f589baab9434d04d2ce97bbd961.htm#a43c92f589baab9434d04d2ce97bbd961">更多...</a><br /></td></tr>
<tr class="separator:a43c92f589baab9434d04d2ce97bbd961"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1e75144e2a53fd3f777ec5442f6cda3"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_ac1e75144e2a53fd3f777ec5442f6cda3.htm#ac1e75144e2a53fd3f777ec5442f6cda3">beziersIntersectBox</a> (const <a class="el" href="class_box2d.htm">Box2d</a> &amp;box, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool closed=false)</td></tr>
<tr class="memdesc:ac1e75144e2a53fd3f777ec5442f6cda3"><td class="mdescLeft">&#160;</td><td class="mdescRight">判断贝塞尔曲线是否与矩形相交  <a href="structmgnear_ac1e75144e2a53fd3f777ec5442f6cda3.htm#ac1e75144e2a53fd3f777ec5442f6cda3">更多...</a><br /></td></tr>
<tr class="separator:ac1e75144e2a53fd3f777ec5442f6cda3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b42c1d71fa5790cb4766e798147ba61"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_a6b42c1d71fa5790cb4766e798147ba61.htm#a6b42c1d71fa5790cb4766e798147ba61">cubicSplinesBox</a> (<a class="el" href="class_box2d.htm">Box2d</a> &amp;box, int n, const <a class="el" href="class_point2d.htm">Point2d</a> *knots, const <a class="el" href="class_vector2d.htm">Vector2d</a> *knotvs, bool closed=false, bool hermite=true)</td></tr>
<tr class="memdesc:a6b42c1d71fa5790cb4766e798147ba61"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算三次样条曲线的绑定框  <a href="structmgnear_a6b42c1d71fa5790cb4766e798147ba61.htm#a6b42c1d71fa5790cb4766e798147ba61">更多...</a><br /></td></tr>
<tr class="separator:a6b42c1d71fa5790cb4766e798147ba61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac446c6364f67c8edffa89aa2cc09123c"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_ac446c6364f67c8edffa89aa2cc09123c.htm#ac446c6364f67c8edffa89aa2cc09123c">cubicSplinesIntersectBox</a> (const <a class="el" href="class_box2d.htm">Box2d</a> &amp;box, int n, const <a class="el" href="class_point2d.htm">Point2d</a> *knots, const <a class="el" href="class_vector2d.htm">Vector2d</a> *knotvs, bool closed=false, bool hermite=true)</td></tr>
<tr class="memdesc:ac446c6364f67c8edffa89aa2cc09123c"><td class="mdescLeft">&#160;</td><td class="mdescRight">判断三次样条曲线是否与矩形相交  <a href="structmgnear_ac446c6364f67c8edffa89aa2cc09123c.htm#ac446c6364f67c8edffa89aa2cc09123c">更多...</a><br /></td></tr>
<tr class="separator:ac446c6364f67c8edffa89aa2cc09123c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9d41da0f5e67d16d5d047441410e665"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_ae9d41da0f5e67d16d5d047441410e665.htm#ae9d41da0f5e67d16d5d047441410e665">cubicSplinesHit</a> (int n, const <a class="el" href="class_point2d.htm">Point2d</a> *knots, const <a class="el" href="class_vector2d.htm">Vector2d</a> *knotvs, bool closed, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt, float tol, <a class="el" href="class_point2d.htm">Point2d</a> &amp;nearpt, int &amp;segment, bool hermite=true)</td></tr>
<tr class="memdesc:ae9d41da0f5e67d16d5d047441410e665"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算点到三次样条曲线的最近距离  <a href="structmgnear_ae9d41da0f5e67d16d5d047441410e665.htm#ae9d41da0f5e67d16d5d047441410e665">更多...</a><br /></td></tr>
<tr class="separator:ae9d41da0f5e67d16d5d047441410e665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc241fb3df42038161dd5f4b1642083c"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_adc241fb3df42038161dd5f4b1642083c.htm#adc241fb3df42038161dd5f4b1642083c">quadSplinesHit</a> (int n, const <a class="el" href="class_point2d.htm">Point2d</a> *knots, bool closed, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt, float tol, <a class="el" href="class_point2d.htm">Point2d</a> &amp;nearpt, int &amp;segment)</td></tr>
<tr class="memdesc:adc241fb3df42038161dd5f4b1642083c"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算点到二次样条曲线的最近距离  <a href="structmgnear_adc241fb3df42038161dd5f4b1642083c.htm#adc241fb3df42038161dd5f4b1642083c">更多...</a><br /></td></tr>
<tr class="separator:adc241fb3df42038161dd5f4b1642083c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a518269121b0a0f22c1e69f3af773e4c6"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_a518269121b0a0f22c1e69f3af773e4c6.htm#a518269121b0a0f22c1e69f3af773e4c6">linesHit</a> (int n, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool closed, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt, float tol, <a class="el" href="class_point2d.htm">Point2d</a> &amp;nearpt, int &amp;segment, bool *inside=(bool *) 0, int *hitType=(int *) 0, int flags=-1, int ignoreVertex=-1)</td></tr>
<tr class="memdesc:a518269121b0a0f22c1e69f3af773e4c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算点到折线或多边形的最近距离  <a href="structmgnear_a518269121b0a0f22c1e69f3af773e4c6.htm#a518269121b0a0f22c1e69f3af773e4c6">更多...</a><br /></td></tr>
<tr class="separator:a518269121b0a0f22c1e69f3af773e4c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac95e225ae58aba33d5d5dac3a858ea7"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_aac95e225ae58aba33d5d5dac3a858ea7.htm#aac95e225ae58aba33d5d5dac3a858ea7">roundRectHit</a> (const <a class="el" href="class_box2d.htm">Box2d</a> &amp;rect, float rx, float ry, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt, float tol, <a class="el" href="class_point2d.htm">Point2d</a> &amp;nearpt, int &amp;segment)</td></tr>
<tr class="memdesc:aac95e225ae58aba33d5d5dac3a858ea7"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算点到圆角矩形的最近距离  <a href="structmgnear_aac95e225ae58aba33d5d5dac3a858ea7.htm#aac95e225ae58aba33d5d5dac3a858ea7">更多...</a><br /></td></tr>
<tr class="separator:aac95e225ae58aba33d5d5dac3a858ea7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabb0a1074ab6f52fffadc540c2fd90ba"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_aabb0a1074ab6f52fffadc540c2fd90ba.htm#aabb0a1074ab6f52fffadc540c2fd90ba">getRectHandle</a> (const <a class="el" href="class_box2d.htm">Box2d</a> &amp;rect, int index, <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt)</td></tr>
<tr class="memdesc:aabb0a1074ab6f52fffadc540c2fd90ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到矩形的8个控制手柄坐标  <a href="structmgnear_aabb0a1074ab6f52fffadc540c2fd90ba.htm#aabb0a1074ab6f52fffadc540c2fd90ba">更多...</a><br /></td></tr>
<tr class="separator:aabb0a1074ab6f52fffadc540c2fd90ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61807c3a11d8bba8ac6ffed80fc97640"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmgnear_a61807c3a11d8bba8ac6ffed80fc97640.htm#a61807c3a11d8bba8ac6ffed80fc97640">moveRectHandle</a> (<a class="el" href="class_box2d.htm">Box2d</a> &amp;rect, int index, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pt, bool lockCornerScale=true)</td></tr>
<tr class="memdesc:a61807c3a11d8bba8ac6ffed80fc97640"><td class="mdescLeft">&#160;</td><td class="mdescRight">移动矩形的一个控制手柄  <a href="structmgnear_a61807c3a11d8bba8ac6ffed80fc97640.htm#a61807c3a11d8bba8ac6ffed80fc97640">更多...</a><br /></td></tr>
<tr class="separator:a61807c3a11d8bba8ac6ffed80fc97640"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">详细描述</h2>
<div class="textblock"><p>求曲线上最近点的函数 </p>
</div><hr/>该结构体的文档由以下文件生成:<ul>
<li><a class="el" href="mgnear_8h.htm">mgnear.h</a></li>
<li><a class="el" href="mgnear_8cpp.htm">mgnear.cpp</a></li>
<li><a class="el" href="mgnearbz_8cpp.htm">mgnearbz.cpp</a></li>
</ul>
</div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>