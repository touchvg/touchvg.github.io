<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: Matrix2d类 参考</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public 成员函数</a> &#124;
<a href="#pub-static-methods">静态 Public 成员函数</a> &#124;
<a href="#pub-attribs">Public 属性</a> &#124;
<a href="#friends">友元</a> &#124;
<a href="class_matrix2d-members.htm">所有成员列表</a>  </div>
  <div class="headertitle">
<div class="title">Matrix2d类 参考<div class="ingroups"><a class="el" href="group___g_e_o_m___c_l_a_s_s.htm">几何对象类</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>二维齐次变换矩阵类  
 <a href="class_matrix2d.htm#details">更多...</a></p>

<p><code>#include &lt;mgmat.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public 成员函数</h2></td></tr>
<tr class="memitem:afc20156a13c27007e9dba2c651103468"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_afc20156a13c27007e9dba2c651103468.htm#afc20156a13c27007e9dba2c651103468">Matrix2d</a> ()</td></tr>
<tr class="memdesc:afc20156a13c27007e9dba2c651103468"><td class="mdescLeft">&#160;</td><td class="mdescRight">构造为单位矩阵  <a href="class_matrix2d_afc20156a13c27007e9dba2c651103468.htm#afc20156a13c27007e9dba2c651103468">更多...</a><br /></td></tr>
<tr class="separator:afc20156a13c27007e9dba2c651103468"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61915e461d4dc5a8cb1a3d75fd226d09"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a61915e461d4dc5a8cb1a3d75fd226d09.htm#a61915e461d4dc5a8cb1a3d75fd226d09">Matrix2d</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;src)</td></tr>
<tr class="memdesc:a61915e461d4dc5a8cb1a3d75fd226d09"><td class="mdescLeft">&#160;</td><td class="mdescRight">拷贝构造函数  <a href="class_matrix2d_a61915e461d4dc5a8cb1a3d75fd226d09.htm#a61915e461d4dc5a8cb1a3d75fd226d09">更多...</a><br /></td></tr>
<tr class="separator:a61915e461d4dc5a8cb1a3d75fd226d09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a047fba5d248ec353d4c7455215231bef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a047fba5d248ec353d4c7455215231bef.htm#a047fba5d248ec353d4c7455215231bef">Matrix2d</a> (float _m11, float _m12, float _m21, float _m22, float _dx, float _dy)</td></tr>
<tr class="memdesc:a047fba5d248ec353d4c7455215231bef"><td class="mdescLeft">&#160;</td><td class="mdescRight">给定元素构造  <a href="class_matrix2d_a047fba5d248ec353d4c7455215231bef.htm#a047fba5d248ec353d4c7455215231bef">更多...</a><br /></td></tr>
<tr class="separator:a047fba5d248ec353d4c7455215231bef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9f436c6cc6e48f90415cee611b9ca5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ab9f436c6cc6e48f90415cee611b9ca5d.htm#ab9f436c6cc6e48f90415cee611b9ca5d">Matrix2d</a> (const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;e0, const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;e1, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;origin)</td></tr>
<tr class="memdesc:ab9f436c6cc6e48f90415cee611b9ca5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">给定两坐标轴矢量和原点构造  <a href="class_matrix2d_ab9f436c6cc6e48f90415cee611b9ca5d.htm#ab9f436c6cc6e48f90415cee611b9ca5d">更多...</a><br /></td></tr>
<tr class="separator:ab9f436c6cc6e48f90415cee611b9ca5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34215e04d45436ebe51a20854639ae0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ad34215e04d45436ebe51a20854639ae0.htm#ad34215e04d45436ebe51a20854639ae0">operator*</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;mat) const</td></tr>
<tr class="memdesc:ad34215e04d45436ebe51a20854639ae0"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵乘法  <a href="class_matrix2d_ad34215e04d45436ebe51a20854639ae0.htm#ad34215e04d45436ebe51a20854639ae0">更多...</a><br /></td></tr>
<tr class="separator:ad34215e04d45436ebe51a20854639ae0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3862c257478764ae6d152f43b5ca5b22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a3862c257478764ae6d152f43b5ca5b22.htm#a3862c257478764ae6d152f43b5ca5b22">operator*=</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;mat)</td></tr>
<tr class="memdesc:a3862c257478764ae6d152f43b5ca5b22"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵乘法  <a href="class_matrix2d_a3862c257478764ae6d152f43b5ca5b22.htm#a3862c257478764ae6d152f43b5ca5b22">更多...</a><br /></td></tr>
<tr class="separator:a3862c257478764ae6d152f43b5ca5b22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6e39008a5dc920edda8fcbda8ac0d5c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ae6e39008a5dc920edda8fcbda8ac0d5c.htm#ae6e39008a5dc920edda8fcbda8ac0d5c">operator*</a> (float s) const</td></tr>
<tr class="memdesc:ae6e39008a5dc920edda8fcbda8ac0d5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵的数乘, 矩阵 * 数  <a href="class_matrix2d_ae6e39008a5dc920edda8fcbda8ac0d5c.htm#ae6e39008a5dc920edda8fcbda8ac0d5c">更多...</a><br /></td></tr>
<tr class="separator:ae6e39008a5dc920edda8fcbda8ac0d5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ccae4d316acca4f43ebf8f92e525121"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a8ccae4d316acca4f43ebf8f92e525121.htm#a8ccae4d316acca4f43ebf8f92e525121">operator*=</a> (float s)</td></tr>
<tr class="memdesc:a8ccae4d316acca4f43ebf8f92e525121"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵的数乘, 矩阵 *= 数  <a href="class_matrix2d_a8ccae4d316acca4f43ebf8f92e525121.htm#a8ccae4d316acca4f43ebf8f92e525121">更多...</a><br /></td></tr>
<tr class="separator:a8ccae4d316acca4f43ebf8f92e525121"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5d24a38b310280698b5cccb292c20df"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_aa5d24a38b310280698b5cccb292c20df.htm#aa5d24a38b310280698b5cccb292c20df">operator/</a> (float s) const</td></tr>
<tr class="memdesc:aa5d24a38b310280698b5cccb292c20df"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵的数乘, 矩阵 / 数  <a href="class_matrix2d_aa5d24a38b310280698b5cccb292c20df.htm#aa5d24a38b310280698b5cccb292c20df">更多...</a><br /></td></tr>
<tr class="separator:aa5d24a38b310280698b5cccb292c20df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6f862a0be29cfe675d1bb10724702bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_aa6f862a0be29cfe675d1bb10724702bd.htm#aa6f862a0be29cfe675d1bb10724702bd">operator/=</a> (float s)</td></tr>
<tr class="memdesc:aa6f862a0be29cfe675d1bb10724702bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵的数乘, 矩阵 /= 数  <a href="class_matrix2d_aa6f862a0be29cfe675d1bb10724702bd.htm#aa6f862a0be29cfe675d1bb10724702bd">更多...</a><br /></td></tr>
<tr class="separator:aa6f862a0be29cfe675d1bb10724702bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c96a7534715b9096bd78629e7871f05"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a5c96a7534715b9096bd78629e7871f05.htm#a5c96a7534715b9096bd78629e7871f05">scaleBy</a> (float sx, float sy)</td></tr>
<tr class="memdesc:a5c96a7534715b9096bd78629e7871f05"><td class="mdescLeft">&#160;</td><td class="mdescRight">比例放缩  <a href="class_matrix2d_a5c96a7534715b9096bd78629e7871f05.htm#a5c96a7534715b9096bd78629e7871f05">更多...</a><br /></td></tr>
<tr class="separator:a5c96a7534715b9096bd78629e7871f05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a390c58fb400c53dcff8f1f48de1cfc55"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a390c58fb400c53dcff8f1f48de1cfc55.htm#a390c58fb400c53dcff8f1f48de1cfc55">scaleBy</a> (float s)</td></tr>
<tr class="memdesc:a390c58fb400c53dcff8f1f48de1cfc55"><td class="mdescLeft">&#160;</td><td class="mdescRight">比例放缩、矩阵的数乘  <a href="class_matrix2d_a390c58fb400c53dcff8f1f48de1cfc55.htm#a390c58fb400c53dcff8f1f48de1cfc55">更多...</a><br /></td></tr>
<tr class="separator:a390c58fb400c53dcff8f1f48de1cfc55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affdce42116f1a41b6ca8f5ce69e0451d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_affdce42116f1a41b6ca8f5ce69e0451d.htm#affdce42116f1a41b6ca8f5ce69e0451d">preMultBy</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;leftSide)</td></tr>
<tr class="memdesc:affdce42116f1a41b6ca8f5ce69e0451d"><td class="mdescLeft">&#160;</td><td class="mdescRight">左乘一个矩阵，leftSide * (*this)  <a href="class_matrix2d_affdce42116f1a41b6ca8f5ce69e0451d.htm#affdce42116f1a41b6ca8f5ce69e0451d">更多...</a><br /></td></tr>
<tr class="separator:affdce42116f1a41b6ca8f5ce69e0451d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d474816e98f6cc3fad89937aa20dec9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a9d474816e98f6cc3fad89937aa20dec9.htm#a9d474816e98f6cc3fad89937aa20dec9">postMultBy</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;rightSide)</td></tr>
<tr class="memdesc:a9d474816e98f6cc3fad89937aa20dec9"><td class="mdescLeft">&#160;</td><td class="mdescRight">右乘一个矩阵，(*this) * rightSide  <a href="class_matrix2d_a9d474816e98f6cc3fad89937aa20dec9.htm#a9d474816e98f6cc3fad89937aa20dec9">更多...</a><br /></td></tr>
<tr class="separator:a9d474816e98f6cc3fad89937aa20dec9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58776e1426c22d34407e8539dbafddf8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a58776e1426c22d34407e8539dbafddf8.htm#a58776e1426c22d34407e8539dbafddf8">setToProduct</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;m1, const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;m2)</td></tr>
<tr class="memdesc:a58776e1426c22d34407e8539dbafddf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为两个矩阵的乘积 (m1 * m2)  <a href="class_matrix2d_a58776e1426c22d34407e8539dbafddf8.htm#a58776e1426c22d34407e8539dbafddf8">更多...</a><br /></td></tr>
<tr class="separator:a58776e1426c22d34407e8539dbafddf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96c72c4d80965dd81586e1d09c0fd878"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a96c72c4d80965dd81586e1d09c0fd878.htm#a96c72c4d80965dd81586e1d09c0fd878">transformPoints</a> (int count, <a class="el" href="class_point2d.htm">Point2d</a> *points) const</td></tr>
<tr class="memdesc:a96c72c4d80965dd81586e1d09c0fd878"><td class="mdescLeft">&#160;</td><td class="mdescRight">对多个点进行矩阵变换  <a href="class_matrix2d_a96c72c4d80965dd81586e1d09c0fd878.htm#a96c72c4d80965dd81586e1d09c0fd878">更多...</a><br /></td></tr>
<tr class="separator:a96c72c4d80965dd81586e1d09c0fd878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4e7e084707c6c573696274b5163b291"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ae4e7e084707c6c573696274b5163b291.htm#ae4e7e084707c6c573696274b5163b291">transformVectors</a> (int count, <a class="el" href="class_vector2d.htm">Vector2d</a> *vectors) const</td></tr>
<tr class="memdesc:ae4e7e084707c6c573696274b5163b291"><td class="mdescLeft">&#160;</td><td class="mdescRight">对多个矢量进行矩阵变换  <a href="class_matrix2d_ae4e7e084707c6c573696274b5163b291.htm#ae4e7e084707c6c573696274b5163b291">更多...</a><br /></td></tr>
<tr class="separator:ae4e7e084707c6c573696274b5163b291"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a628fd0942503ab74a8334e0236c09b78"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a628fd0942503ab74a8334e0236c09b78.htm#a628fd0942503ab74a8334e0236c09b78">det</a> () const</td></tr>
<tr class="memdesc:a628fd0942503ab74a8334e0236c09b78"><td class="mdescLeft">&#160;</td><td class="mdescRight">行列式值  <a href="class_matrix2d_a628fd0942503ab74a8334e0236c09b78.htm#a628fd0942503ab74a8334e0236c09b78">更多...</a><br /></td></tr>
<tr class="separator:a628fd0942503ab74a8334e0236c09b78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3be603af5bd36120b8338e2d25db45f3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a3be603af5bd36120b8338e2d25db45f3.htm#a3be603af5bd36120b8338e2d25db45f3">invert</a> ()</td></tr>
<tr class="memdesc:a3be603af5bd36120b8338e2d25db45f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为逆矩阵  <a href="class_matrix2d_a3be603af5bd36120b8338e2d25db45f3.htm#a3be603af5bd36120b8338e2d25db45f3">更多...</a><br /></td></tr>
<tr class="separator:a3be603af5bd36120b8338e2d25db45f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a123b56e6a001c9d127741b4a5c2a51c5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a123b56e6a001c9d127741b4a5c2a51c5.htm#a123b56e6a001c9d127741b4a5c2a51c5">inverse</a> () const</td></tr>
<tr class="memdesc:a123b56e6a001c9d127741b4a5c2a51c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回逆矩阵  <a href="class_matrix2d_a123b56e6a001c9d127741b4a5c2a51c5.htm#a123b56e6a001c9d127741b4a5c2a51c5">更多...</a><br /></td></tr>
<tr class="separator:a123b56e6a001c9d127741b4a5c2a51c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9addf3d8952150440b48b602bc713a7c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a9addf3d8952150440b48b602bc713a7c.htm#a9addf3d8952150440b48b602bc713a7c">isInvertible</a> () const</td></tr>
<tr class="memdesc:a9addf3d8952150440b48b602bc713a7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">判断矩阵是否可逆  <a href="class_matrix2d_a9addf3d8952150440b48b602bc713a7c.htm#a9addf3d8952150440b48b602bc713a7c">更多...</a><br /></td></tr>
<tr class="separator:a9addf3d8952150440b48b602bc713a7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d23f5c8b5920772a1a3fff4ecc22f04"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a5d23f5c8b5920772a1a3fff4ecc22f04.htm#a5d23f5c8b5920772a1a3fff4ecc22f04">scale</a> () const</td></tr>
<tr class="memdesc:a5d23f5c8b5920772a1a3fff4ecc22f04"><td class="mdescLeft">&#160;</td><td class="mdescRight">比例大小  <a href="class_matrix2d_a5d23f5c8b5920772a1a3fff4ecc22f04.htm#a5d23f5c8b5920772a1a3fff4ecc22f04">更多...</a><br /></td></tr>
<tr class="separator:a5d23f5c8b5920772a1a3fff4ecc22f04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24229ff128d94a9732488d6145d48db5"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a24229ff128d94a9732488d6145d48db5.htm#a24229ff128d94a9732488d6145d48db5">scaleX</a> () const</td></tr>
<tr class="memdesc:a24229ff128d94a9732488d6145d48db5"><td class="mdescLeft">&#160;</td><td class="mdescRight">X比例大小  <a href="class_matrix2d_a24229ff128d94a9732488d6145d48db5.htm#a24229ff128d94a9732488d6145d48db5">更多...</a><br /></td></tr>
<tr class="separator:a24229ff128d94a9732488d6145d48db5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace7f29f2b8c8f4deeb952765e6f905e8"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ace7f29f2b8c8f4deeb952765e6f905e8.htm#ace7f29f2b8c8f4deeb952765e6f905e8">scaleY</a> () const</td></tr>
<tr class="memdesc:ace7f29f2b8c8f4deeb952765e6f905e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Y比例大小  <a href="class_matrix2d_ace7f29f2b8c8f4deeb952765e6f905e8.htm#ace7f29f2b8c8f4deeb952765e6f905e8">更多...</a><br /></td></tr>
<tr class="separator:ace7f29f2b8c8f4deeb952765e6f905e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94d2a7b7a16c12dca423792ac2314ff4"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a94d2a7b7a16c12dca423792ac2314ff4.htm#a94d2a7b7a16c12dca423792ac2314ff4">angle</a> () const</td></tr>
<tr class="memdesc:a94d2a7b7a16c12dca423792ac2314ff4"><td class="mdescLeft">&#160;</td><td class="mdescRight">X旋转角度，弧度  <a href="class_matrix2d_a94d2a7b7a16c12dca423792ac2314ff4.htm#a94d2a7b7a16c12dca423792ac2314ff4">更多...</a><br /></td></tr>
<tr class="separator:a94d2a7b7a16c12dca423792ac2314ff4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2697552f1853bff82d802c28f69deb62"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a2697552f1853bff82d802c28f69deb62.htm#a2697552f1853bff82d802c28f69deb62">operator==</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;mat) const</td></tr>
<tr class="memdesc:a2697552f1853bff82d802c28f69deb62"><td class="mdescLeft">&#160;</td><td class="mdescRight">判断两个矩阵是否相等  <a href="class_matrix2d_a2697552f1853bff82d802c28f69deb62.htm#a2697552f1853bff82d802c28f69deb62">更多...</a><br /></td></tr>
<tr class="separator:a2697552f1853bff82d802c28f69deb62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3082892dce24be21c515b6ddc76c9cba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a3082892dce24be21c515b6ddc76c9cba.htm#a3082892dce24be21c515b6ddc76c9cba">operator!=</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;mat) const</td></tr>
<tr class="memdesc:a3082892dce24be21c515b6ddc76c9cba"><td class="mdescLeft">&#160;</td><td class="mdescRight">判断两个矩阵是否不相等  <a href="class_matrix2d_a3082892dce24be21c515b6ddc76c9cba.htm#a3082892dce24be21c515b6ddc76c9cba">更多...</a><br /></td></tr>
<tr class="separator:a3082892dce24be21c515b6ddc76c9cba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b62a21a7fed4818336d3d75365200ec"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a8b62a21a7fed4818336d3d75365200ec.htm#a8b62a21a7fed4818336d3d75365200ec">isEqualTo</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;mat, const <a class="el" href="class_tol.htm">Tol</a> &amp;tol=<a class="el" href="class_tol_a185668d06ee4c0f3801fb3fce5120fa9.htm#a185668d06ee4c0f3801fb3fce5120fa9">Tol::gTol</a>()) const</td></tr>
<tr class="memdesc:a8b62a21a7fed4818336d3d75365200ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">用欧拉规则判断两个矩阵是否相等，即判断矩阵的行矢量是否相等  <a href="class_matrix2d_a8b62a21a7fed4818336d3d75365200ec.htm#a8b62a21a7fed4818336d3d75365200ec">更多...</a><br /></td></tr>
<tr class="separator:a8b62a21a7fed4818336d3d75365200ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae78553513b930e305dccfd160020c923"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ae78553513b930e305dccfd160020c923.htm#ae78553513b930e305dccfd160020c923">isIdentity</a> () const</td></tr>
<tr class="memdesc:ae78553513b930e305dccfd160020c923"><td class="mdescLeft">&#160;</td><td class="mdescRight">判断是否为单位矩阵  <a href="class_matrix2d_ae78553513b930e305dccfd160020c923.htm#ae78553513b930e305dccfd160020c923">更多...</a><br /></td></tr>
<tr class="separator:ae78553513b930e305dccfd160020c923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a509b203f5e58c32bb0579c30eab889ed"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a509b203f5e58c32bb0579c30eab889ed.htm#a509b203f5e58c32bb0579c30eab889ed">isOrtho</a> () const</td></tr>
<tr class="memdesc:a509b203f5e58c32bb0579c30eab889ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">判断矩阵的坐标轴矢量是否分别水平和垂直  <a href="class_matrix2d_a509b203f5e58c32bb0579c30eab889ed.htm#a509b203f5e58c32bb0579c30eab889ed">更多...</a><br /></td></tr>
<tr class="separator:a509b203f5e58c32bb0579c30eab889ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f30d0b7b0d3d4db9483a8939f268a0e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a9f30d0b7b0d3d4db9483a8939f268a0e.htm#a9f30d0b7b0d3d4db9483a8939f268a0e">hasMirror</a> (<a class="el" href="class_vector2d.htm">Vector2d</a> &amp;reflex) const</td></tr>
<tr class="memdesc:a9f30d0b7b0d3d4db9483a8939f268a0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">判断矩阵中是否含有对称成分  <a href="class_matrix2d_a9f30d0b7b0d3d4db9483a8939f268a0e.htm#a9f30d0b7b0d3d4db9483a8939f268a0e">更多...</a><br /></td></tr>
<tr class="separator:a9f30d0b7b0d3d4db9483a8939f268a0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a49ebdc5c8b7edad20be7733887ab06"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a6a49ebdc5c8b7edad20be7733887ab06.htm#a6a49ebdc5c8b7edad20be7733887ab06">isConformal</a> (float &amp;<a class="el" href="class_matrix2d_a24229ff128d94a9732488d6145d48db5.htm#a24229ff128d94a9732488d6145d48db5">scaleX</a>, float &amp;<a class="el" href="class_matrix2d_ace7f29f2b8c8f4deeb952765e6f905e8.htm#ace7f29f2b8c8f4deeb952765e6f905e8">scaleY</a>, float &amp;<a class="el" href="class_matrix2d_a94d2a7b7a16c12dca423792ac2314ff4.htm#a94d2a7b7a16c12dca423792ac2314ff4">angle</a>, bool &amp;isMirror, <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;reflex) const</td></tr>
<tr class="memdesc:a6a49ebdc5c8b7edad20be7733887ab06"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到比例、旋转、镜像成分  <a href="class_matrix2d_a6a49ebdc5c8b7edad20be7733887ab06.htm#a6a49ebdc5c8b7edad20be7733887ab06">更多...</a><br /></td></tr>
<tr class="separator:a6a49ebdc5c8b7edad20be7733887ab06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab72cc825ac4339182d7bbf70dbcbf33"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_aab72cc825ac4339182d7bbf70dbcbf33.htm#aab72cc825ac4339182d7bbf70dbcbf33">setCoordSystem</a> (const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;e0, const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;e1, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;origin)</td></tr>
<tr class="memdesc:aab72cc825ac4339182d7bbf70dbcbf33"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为原点为origin，坐标轴矢量为e0和e1的坐标系  <a href="class_matrix2d_aab72cc825ac4339182d7bbf70dbcbf33.htm#aab72cc825ac4339182d7bbf70dbcbf33">更多...</a><br /></td></tr>
<tr class="separator:aab72cc825ac4339182d7bbf70dbcbf33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af154c6fda781650a4658aa8da84b63df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_af154c6fda781650a4658aa8da84b63df.htm#af154c6fda781650a4658aa8da84b63df">getCoordSystem</a> (<a class="el" href="class_vector2d.htm">Vector2d</a> &amp;e0, <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;e1, <a class="el" href="class_point2d.htm">Point2d</a> &amp;origin) const</td></tr>
<tr class="memdesc:af154c6fda781650a4658aa8da84b63df"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到坐标系的原点origin，坐标轴矢量e0和e1  <a href="class_matrix2d_af154c6fda781650a4658aa8da84b63df.htm#af154c6fda781650a4658aa8da84b63df">更多...</a><br /></td></tr>
<tr class="separator:af154c6fda781650a4658aa8da84b63df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd96483dc0cab15df9aad9dd7fec040d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_afd96483dc0cab15df9aad9dd7fec040d.htm#afd96483dc0cab15df9aad9dd7fec040d">setToIdentity</a> ()</td></tr>
<tr class="memdesc:afd96483dc0cab15df9aad9dd7fec040d"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为单位矩阵  <a href="class_matrix2d_afd96483dc0cab15df9aad9dd7fec040d.htm#afd96483dc0cab15df9aad9dd7fec040d">更多...</a><br /></td></tr>
<tr class="separator:afd96483dc0cab15df9aad9dd7fec040d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4cbfba5e647ddaaeec850837f765809"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_af4cbfba5e647ddaaeec850837f765809.htm#af4cbfba5e647ddaaeec850837f765809">set</a> (float _m11, float _m12, float _m21, float _m22, float _dx, float _dy)</td></tr>
<tr class="memdesc:af4cbfba5e647ddaaeec850837f765809"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置矩阵元素  <a href="class_matrix2d_af4cbfba5e647ddaaeec850837f765809.htm#af4cbfba5e647ddaaeec850837f765809">更多...</a><br /></td></tr>
<tr class="separator:af4cbfba5e647ddaaeec850837f765809"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35a4c14c9e7a0eafc021d0b90eff31e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a35a4c14c9e7a0eafc021d0b90eff31e9.htm#a35a4c14c9e7a0eafc021d0b90eff31e9">setToTranslation</a> (const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;vec)</td></tr>
<tr class="memdesc:a35a4c14c9e7a0eafc021d0b90eff31e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为平移变换矩阵  <a href="class_matrix2d_a35a4c14c9e7a0eafc021d0b90eff31e9.htm#a35a4c14c9e7a0eafc021d0b90eff31e9">更多...</a><br /></td></tr>
<tr class="separator:a35a4c14c9e7a0eafc021d0b90eff31e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28bfcb8a1104cd2e441cd6c9f2dbeffb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a28bfcb8a1104cd2e441cd6c9f2dbeffb.htm#a28bfcb8a1104cd2e441cd6c9f2dbeffb">setToRotation</a> (float <a class="el" href="class_matrix2d_a94d2a7b7a16c12dca423792ac2314ff4.htm#a94d2a7b7a16c12dca423792ac2314ff4">angle</a>, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:a28bfcb8a1104cd2e441cd6c9f2dbeffb"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为以一点为中心的旋转变换矩阵  <a href="class_matrix2d_a28bfcb8a1104cd2e441cd6c9f2dbeffb.htm#a28bfcb8a1104cd2e441cd6c9f2dbeffb">更多...</a><br /></td></tr>
<tr class="separator:a28bfcb8a1104cd2e441cd6c9f2dbeffb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6071e55dfc7664734fd6bcf5890be6ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a6071e55dfc7664734fd6bcf5890be6ce.htm#a6071e55dfc7664734fd6bcf5890be6ce">setToScaling</a> (float <a class="el" href="class_matrix2d_a5d23f5c8b5920772a1a3fff4ecc22f04.htm#a5d23f5c8b5920772a1a3fff4ecc22f04">scale</a>, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:a6071e55dfc7664734fd6bcf5890be6ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为以一点为中心的放缩变换矩阵  <a href="class_matrix2d_a6071e55dfc7664734fd6bcf5890be6ce.htm#a6071e55dfc7664734fd6bcf5890be6ce">更多...</a><br /></td></tr>
<tr class="separator:a6071e55dfc7664734fd6bcf5890be6ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab759efaa3feb00d74df32da3508bbb5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_aab759efaa3feb00d74df32da3508bbb5.htm#aab759efaa3feb00d74df32da3508bbb5">setToScaling</a> (float <a class="el" href="class_matrix2d_a24229ff128d94a9732488d6145d48db5.htm#a24229ff128d94a9732488d6145d48db5">scaleX</a>, float <a class="el" href="class_matrix2d_ace7f29f2b8c8f4deeb952765e6f905e8.htm#ace7f29f2b8c8f4deeb952765e6f905e8">scaleY</a>, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:aab759efaa3feb00d74df32da3508bbb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为以一点为中心的放缩变换矩阵  <a href="class_matrix2d_aab759efaa3feb00d74df32da3508bbb5.htm#aab759efaa3feb00d74df32da3508bbb5">更多...</a><br /></td></tr>
<tr class="separator:aab759efaa3feb00d74df32da3508bbb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75be7ef4c2369d57779ac018d83c8ae9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a75be7ef4c2369d57779ac018d83c8ae9.htm#a75be7ef4c2369d57779ac018d83c8ae9">setToMirroring</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:a75be7ef4c2369d57779ac018d83c8ae9"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为关于一点对称的变换矩阵  <a href="class_matrix2d_a75be7ef4c2369d57779ac018d83c8ae9.htm#a75be7ef4c2369d57779ac018d83c8ae9">更多...</a><br /></td></tr>
<tr class="separator:a75be7ef4c2369d57779ac018d83c8ae9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5741c598267a324a88d9804929f0ac3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ae5741c598267a324a88d9804929f0ac3.htm#ae5741c598267a324a88d9804929f0ac3">setToMirroring</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt, const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;dir)</td></tr>
<tr class="memdesc:ae5741c598267a324a88d9804929f0ac3"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为以直线(pnt,dir)为中心线的对称变换矩阵  <a href="class_matrix2d_ae5741c598267a324a88d9804929f0ac3.htm#ae5741c598267a324a88d9804929f0ac3">更多...</a><br /></td></tr>
<tr class="separator:ae5741c598267a324a88d9804929f0ac3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae62857d93657a363baf71510a2f2b172"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ae62857d93657a363baf71510a2f2b172.htm#ae62857d93657a363baf71510a2f2b172">setToShearing</a> (float sx, float sy, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:ae62857d93657a363baf71510a2f2b172"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置为错切变换矩阵  <a href="class_matrix2d_ae62857d93657a363baf71510a2f2b172.htm#ae62857d93657a363baf71510a2f2b172">更多...</a><br /></td></tr>
<tr class="separator:ae62857d93657a363baf71510a2f2b172"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
静态 Public 成员函数</h2></td></tr>
<tr class="memitem:aa245f91a211c28be65d6c64557ade01d"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_aa245f91a211c28be65d6c64557ade01d.htm#aa245f91a211c28be65d6c64557ade01d">kIdentity</a> ()</td></tr>
<tr class="memdesc:aa245f91a211c28be65d6c64557ade01d"><td class="mdescLeft">&#160;</td><td class="mdescRight">单位矩阵  <a href="class_matrix2d_aa245f91a211c28be65d6c64557ade01d.htm#aa245f91a211c28be65d6c64557ade01d">更多...</a><br /></td></tr>
<tr class="separator:aa245f91a211c28be65d6c64557ade01d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad771b8fd122caa69bb6fa84cc8ca9bc7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ad771b8fd122caa69bb6fa84cc8ca9bc7.htm#ad771b8fd122caa69bb6fa84cc8ca9bc7">coordSystem</a> (const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;e0, const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;e1, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;origin)</td></tr>
<tr class="memdesc:ad771b8fd122caa69bb6fa84cc8ca9bc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回原点为origin，坐标轴矢量为e0和e1的坐标系  <a href="class_matrix2d_ad771b8fd122caa69bb6fa84cc8ca9bc7.htm#ad771b8fd122caa69bb6fa84cc8ca9bc7">更多...</a><br /></td></tr>
<tr class="separator:ad771b8fd122caa69bb6fa84cc8ca9bc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a626f3cf830c3a40cc12a416264b7cbdc"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a626f3cf830c3a40cc12a416264b7cbdc.htm#a626f3cf830c3a40cc12a416264b7cbdc">coordSystem</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;origin, float <a class="el" href="class_matrix2d_a24229ff128d94a9732488d6145d48db5.htm#a24229ff128d94a9732488d6145d48db5">scaleX</a>, float <a class="el" href="class_matrix2d_ace7f29f2b8c8f4deeb952765e6f905e8.htm#ace7f29f2b8c8f4deeb952765e6f905e8">scaleY</a>=0, float <a class="el" href="class_matrix2d_a94d2a7b7a16c12dca423792ac2314ff4.htm#a94d2a7b7a16c12dca423792ac2314ff4">angle</a>=0)</td></tr>
<tr class="memdesc:a626f3cf830c3a40cc12a416264b7cbdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回给定原点、比例和旋转角度的坐标系  <a href="class_matrix2d_a626f3cf830c3a40cc12a416264b7cbdc.htm#a626f3cf830c3a40cc12a416264b7cbdc">更多...</a><br /></td></tr>
<tr class="separator:a626f3cf830c3a40cc12a416264b7cbdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9c9c6c4a88682957aee9d3087ba062f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ad9c9c6c4a88682957aee9d3087ba062f.htm#ad9c9c6c4a88682957aee9d3087ba062f">translation</a> (const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;vec)</td></tr>
<tr class="memdesc:ad9c9c6c4a88682957aee9d3087ba062f"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到平移变换矩阵  <a href="class_matrix2d_ad9c9c6c4a88682957aee9d3087ba062f.htm#ad9c9c6c4a88682957aee9d3087ba062f">更多...</a><br /></td></tr>
<tr class="separator:ad9c9c6c4a88682957aee9d3087ba062f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3592cdcc09c9537faf1aaf3474bc82c5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a3592cdcc09c9537faf1aaf3474bc82c5.htm#a3592cdcc09c9537faf1aaf3474bc82c5">rotation</a> (float <a class="el" href="class_matrix2d_a94d2a7b7a16c12dca423792ac2314ff4.htm#a94d2a7b7a16c12dca423792ac2314ff4">angle</a>, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:a3592cdcc09c9537faf1aaf3474bc82c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到以一点为中心的旋转变换矩阵  <a href="class_matrix2d_a3592cdcc09c9537faf1aaf3474bc82c5.htm#a3592cdcc09c9537faf1aaf3474bc82c5">更多...</a><br /></td></tr>
<tr class="separator:a3592cdcc09c9537faf1aaf3474bc82c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a763f802029bc457da35979ed69f1d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ae4a763f802029bc457da35979ed69f1d.htm#ae4a763f802029bc457da35979ed69f1d">scaling</a> (float <a class="el" href="class_matrix2d_a5d23f5c8b5920772a1a3fff4ecc22f04.htm#a5d23f5c8b5920772a1a3fff4ecc22f04">scale</a>, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:ae4a763f802029bc457da35979ed69f1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到以一点为中心的放缩变换矩阵  <a href="class_matrix2d_ae4a763f802029bc457da35979ed69f1d.htm#ae4a763f802029bc457da35979ed69f1d">更多...</a><br /></td></tr>
<tr class="separator:ae4a763f802029bc457da35979ed69f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff34c7ec2435cff769c545f7febd6f93"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_aff34c7ec2435cff769c545f7febd6f93.htm#aff34c7ec2435cff769c545f7febd6f93">scaling</a> (float <a class="el" href="class_matrix2d_a24229ff128d94a9732488d6145d48db5.htm#a24229ff128d94a9732488d6145d48db5">scaleX</a>, float <a class="el" href="class_matrix2d_ace7f29f2b8c8f4deeb952765e6f905e8.htm#ace7f29f2b8c8f4deeb952765e6f905e8">scaleY</a>, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:aff34c7ec2435cff769c545f7febd6f93"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到以一点为中心的放缩变换矩阵  <a href="class_matrix2d_aff34c7ec2435cff769c545f7febd6f93.htm#aff34c7ec2435cff769c545f7febd6f93">更多...</a><br /></td></tr>
<tr class="separator:aff34c7ec2435cff769c545f7febd6f93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafca786c127999ab5c22cc7084f16fc4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_aafca786c127999ab5c22cc7084f16fc4.htm#aafca786c127999ab5c22cc7084f16fc4">mirroring</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:aafca786c127999ab5c22cc7084f16fc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到关于一点对称的变换矩阵  <a href="class_matrix2d_aafca786c127999ab5c22cc7084f16fc4.htm#aafca786c127999ab5c22cc7084f16fc4">更多...</a><br /></td></tr>
<tr class="separator:aafca786c127999ab5c22cc7084f16fc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb7c698fad0fbbcc1af8bf79acc7f9f9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_abb7c698fad0fbbcc1af8bf79acc7f9f9.htm#abb7c698fad0fbbcc1af8bf79acc7f9f9">mirroring</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt, const <a class="el" href="class_vector2d.htm">Vector2d</a> &amp;dir)</td></tr>
<tr class="memdesc:abb7c698fad0fbbcc1af8bf79acc7f9f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到以直线(pnt,dir)为中心线的对称变换矩阵  <a href="class_matrix2d_abb7c698fad0fbbcc1af8bf79acc7f9f9.htm#abb7c698fad0fbbcc1af8bf79acc7f9f9">更多...</a><br /></td></tr>
<tr class="separator:abb7c698fad0fbbcc1af8bf79acc7f9f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaec6803e41e5f4ca29c49e45424288c4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_aaec6803e41e5f4ca29c49e45424288c4.htm#aaec6803e41e5f4ca29c49e45424288c4">shearing</a> (float sx, float sy, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt=<a class="el" href="class_point2d_ae32d05229c957fa91fec0f6fdb3bc1e3.htm#ae32d05229c957fa91fec0f6fdb3bc1e3">Point2d::kOrigin</a>())</td></tr>
<tr class="memdesc:aaec6803e41e5f4ca29c49e45424288c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到错切变换矩阵  <a href="class_matrix2d_aaec6803e41e5f4ca29c49e45424288c4.htm#aaec6803e41e5f4ca29c49e45424288c4">更多...</a><br /></td></tr>
<tr class="separator:aaec6803e41e5f4ca29c49e45424288c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52f5e482a2bfb50b3556d1d4ed895df7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a52f5e482a2bfb50b3556d1d4ed895df7.htm#a52f5e482a2bfb50b3556d1d4ed895df7">transformWith2P</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;from1, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;from2, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;to1, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;to2)</td></tr>
<tr class="memdesc:a52f5e482a2bfb50b3556d1d4ed895df7"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到两个点同时移动后形成的变化矩阵  <a href="class_matrix2d_a52f5e482a2bfb50b3556d1d4ed895df7.htm#a52f5e482a2bfb50b3556d1d4ed895df7">更多...</a><br /></td></tr>
<tr class="separator:a52f5e482a2bfb50b3556d1d4ed895df7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public 属性</h2></td></tr>
<tr class="memitem:a4dd0585901c3895e619f292a419d5421"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a4dd0585901c3895e619f292a419d5421.htm#a4dd0585901c3895e619f292a419d5421">m11</a></td></tr>
<tr class="memdesc:a4dd0585901c3895e619f292a419d5421"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵元素，代表X方向线性变换分量  <a href="class_matrix2d_a4dd0585901c3895e619f292a419d5421.htm#a4dd0585901c3895e619f292a419d5421">更多...</a><br /></td></tr>
<tr class="separator:a4dd0585901c3895e619f292a419d5421"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84b712d00ebfaa82706146657c2e5504"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a84b712d00ebfaa82706146657c2e5504.htm#a84b712d00ebfaa82706146657c2e5504">m12</a></td></tr>
<tr class="memdesc:a84b712d00ebfaa82706146657c2e5504"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵元素，代表X方向线性变换分量  <a href="class_matrix2d_a84b712d00ebfaa82706146657c2e5504.htm#a84b712d00ebfaa82706146657c2e5504">更多...</a><br /></td></tr>
<tr class="separator:a84b712d00ebfaa82706146657c2e5504"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad212501ce018ced73ebdd116dc536aff"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ad212501ce018ced73ebdd116dc536aff.htm#ad212501ce018ced73ebdd116dc536aff">m21</a></td></tr>
<tr class="memdesc:ad212501ce018ced73ebdd116dc536aff"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵元素，代表Y方向线性变换分量  <a href="class_matrix2d_ad212501ce018ced73ebdd116dc536aff.htm#ad212501ce018ced73ebdd116dc536aff">更多...</a><br /></td></tr>
<tr class="separator:ad212501ce018ced73ebdd116dc536aff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab582fe9fb66011af5ed7b3165af5e09b"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ab582fe9fb66011af5ed7b3165af5e09b.htm#ab582fe9fb66011af5ed7b3165af5e09b">m22</a></td></tr>
<tr class="memdesc:ab582fe9fb66011af5ed7b3165af5e09b"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵元素，代表Y方向线性变换分量  <a href="class_matrix2d_ab582fe9fb66011af5ed7b3165af5e09b.htm#ab582fe9fb66011af5ed7b3165af5e09b">更多...</a><br /></td></tr>
<tr class="separator:ab582fe9fb66011af5ed7b3165af5e09b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66388004cd417ce95511d85ceb023a96"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a66388004cd417ce95511d85ceb023a96.htm#a66388004cd417ce95511d85ceb023a96">dx</a></td></tr>
<tr class="memdesc:a66388004cd417ce95511d85ceb023a96"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵元素，代表X方向平移量  <a href="class_matrix2d_a66388004cd417ce95511d85ceb023a96.htm#a66388004cd417ce95511d85ceb023a96">更多...</a><br /></td></tr>
<tr class="separator:a66388004cd417ce95511d85ceb023a96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e5e7f371c66a4e51f1a7803c5e5175c"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_a2e5e7f371c66a4e51f1a7803c5e5175c.htm#a2e5e7f371c66a4e51f1a7803c5e5175c">dy</a></td></tr>
<tr class="memdesc:a2e5e7f371c66a4e51f1a7803c5e5175c"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵元素，代表Y方向平移量  <a href="class_matrix2d_a2e5e7f371c66a4e51f1a7803c5e5175c.htm#a2e5e7f371c66a4e51f1a7803c5e5175c">更多...</a><br /></td></tr>
<tr class="separator:a2e5e7f371c66a4e51f1a7803c5e5175c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
友元</h2></td></tr>
<tr class="memitem:ad610d037581758c24669d6435333aefb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix2d.htm">Matrix2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix2d_ad610d037581758c24669d6435333aefb.htm#ad610d037581758c24669d6435333aefb">operator*</a> (float s, const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;mat)</td></tr>
<tr class="memdesc:ad610d037581758c24669d6435333aefb"><td class="mdescLeft">&#160;</td><td class="mdescRight">矩阵的数乘, 数 * 矩阵  <a href="class_matrix2d_ad610d037581758c24669d6435333aefb.htm#ad610d037581758c24669d6435333aefb">更多...</a><br /></td></tr>
<tr class="separator:ad610d037581758c24669d6435333aefb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">详细描述</h2>
<div class="textblock"><p>二维齐次变换矩阵类 </p>
<p>变换矩阵类Matrix用于二维图形的仿射变换。矩阵 M 的形式为: <br />
　　e0x　e0y　0 <br />
　　e1x　e1y　0 <br />
　　dx　　dy　1 <br />
其中矩阵 A: <br />
　　e0x　e0y <br />
　　e1x　e1y <br />
称为 M 的线性部分，其作用是对图形进行伸缩、旋转、对称和错切等变换。<br />
行向量 T (dx, dy) 称为 M 的平移部分，其作用是对图形进行平移变换。<br />
 Point的点pnt的对应变换点为 P x M，行矢量 P = (pnt.x, pnt.y, 1) <br />
Vector的矢量vec的对应变换矢量为 V x M，M 的平移部分不参与计算。<br />
 每个矩阵 M 对应一个坐标系，其坐标原点为(dx, dy)，坐标轴为矢量(e0x, e0y)和 (e1x, e1y)。M 为将(0,0)(1,0)(0,1)映射到(dx, dy)(e0x, e0y)(e1x, e1y)的矩阵。 </p>
</div><hr/>该类的文档由以下文件生成:<ul>
<li><a class="el" href="mgmat_8h.htm">mgmat.h</a></li>
<li><a class="el" href="mgmat_8cpp.htm">mgmat.cpp</a></li>
</ul>
</div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>