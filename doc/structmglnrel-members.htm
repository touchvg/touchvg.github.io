<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: 成员列表</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">mglnrel 成员列表</div>  </div>
</div><!--header-->
<div class="contents">

<p>成员的完整列表，这些成员属于 <a class="el" href="structmglnrel.htm">mglnrel</a>,包括所有继承而来的类成员</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_a6639306544575a2ce988ea609185a510.htm#a6639306544575a2ce988ea609185a510">clipLine</a>(Point2d &amp;pt1, Point2d &amp;pt2, const Box2d &amp;box)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_ad991257056009bec74913cd990bb75d1.htm#ad991257056009bec74913cd990bb75d1">cross2Beeline</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;c, const Point2d &amp;d, Point2d &amp;ptCross, float *pu=(float *) 0, float *pv=(float *) 0, const Tol &amp;tolVec=Tol::gTol())</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_af3ae496037bcbd184fe4a7cea28c8600.htm#af3ae496037bcbd184fe4a7cea28c8600">cross2Line</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;c, const Point2d &amp;d, Point2d &amp;ptCross, const Tol &amp;tolVec=Tol::gTol())</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_ae86fa15c164511c28ebc7a5ca4229f99.htm#ae86fa15c164511c28ebc7a5ca4229f99">cross2LineV</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;c, const Point2d &amp;d, float *v1=(float *) 0, float *v2=(float *) 0)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_a29bf328dbb6dae8ecb745ed98f9f27b8.htm#a29bf328dbb6dae8ecb745ed98f9f27b8">crossLineAbc</a>(float a1, float b1, float c1, float a2, float b2, float c2, Point2d &amp;ptCross, const Tol &amp;tolVec=Tol::gTol())</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_ae0258133cd012b7e954db30f409a18b0.htm#ae0258133cd012b7e954db30f409a18b0">crossLineBeeline</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;c, const Point2d &amp;d, Point2d &amp;ptCross, float *pv=(float *) 0, const Tol &amp;tolVec=Tol::gTol())</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_a05680c498e342661b528158483ce1ba2.htm#a05680c498e342661b528158483ce1ba2">isBetweenLine</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a91dca73dd9310e5afb8bf0263141dcc8.htm#a91dca73dd9310e5afb8bf0263141dcc8">isBetweenLine2</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt, const Tol &amp;tol)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_aeeb54d3297c3cb96a2ad53d864eecede.htm#aeeb54d3297c3cb96a2ad53d864eecede">isBetweenLine3</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt, Point2d *nearpt=(Point2d *) 0)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_adeed135f486e9e3959310a1d7f913827.htm#adeed135f486e9e3959310a1d7f913827">isColinear</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_ab8a84806e694b48045845a4af92d29cc.htm#ab8a84806e694b48045845a4af92d29cc">isColinear2</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt, const Tol &amp;tol)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a102898d09707cba3f6cd964e27ac027e.htm#a102898d09707cba3f6cd964e27ac027e">isConvex</a>(int count, const Point2d *vertexs, bool *acw=(bool *) 0)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_affa1ba3371850736bbfd7c07770b660e.htm#affa1ba3371850736bbfd7c07770b660e">isIntersect</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;c, const Point2d &amp;d)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a5283802d870bbb4cf793e1240a200981.htm#a5283802d870bbb4cf793e1240a200981">isIntersectProp</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;c, const Point2d &amp;d)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_a1f62a5098fadc99bdc694dbc38786178.htm#a1f62a5098fadc99bdc694dbc38786178">isLeft</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a22aa60b87dbdee4359dbf42e3dda6822.htm#a22aa60b87dbdee4359dbf42e3dda6822">isLeft2</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt, const Tol &amp;tol)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_ac02c61d7a04c71d7aab44b18b4f60d8c.htm#ac02c61d7a04c71d7aab44b18b4f60d8c">isLeftOn</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a36279c31158bce7cf6984f930cdedf4a.htm#a36279c31158bce7cf6984f930cdedf4a">isLeftOn2</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt, const Tol &amp;tol)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_a51836e085ae9c6864a2360e5b1e304ea.htm#a51836e085ae9c6864a2360e5b1e304ea">isProjectBetweenLine</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a76c0e2b56753fcf348f3433691cd7554.htm#a76c0e2b56753fcf348f3433691cd7554">isProjectBetweenRayline</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_a264af26d83a3c7ed7c5ff70228dabdcc.htm#a264af26d83a3c7ed7c5ff70228dabdcca11c9078a2e1960457f20ce6d9fc13858">kPtAtVertex</a> 枚举值</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a264af26d83a3c7ed7c5ff70228dabdcc.htm#a264af26d83a3c7ed7c5ff70228dabdccad428bf7d54fec53dd4fcf26ec0e3108d">kPtInArea</a> 枚举值</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_a264af26d83a3c7ed7c5ff70228dabdcc.htm#a264af26d83a3c7ed7c5ff70228dabdcca317723bf5358bf26d3c938cbb8ce71a6">kPtOnEdge</a> 枚举值</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a264af26d83a3c7ed7c5ff70228dabdcc.htm#a264af26d83a3c7ed7c5ff70228dabdcca650fde9fcbde819ec5c3e03cfb2ec53a">kPtOutArea</a> 枚举值</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_ac2502c3d166c828d2c4da756edba76e7.htm#ac2502c3d166c828d2c4da756edba76e7">ptInArea</a>(const Point2d &amp;pt, int count, const Point2d *vertexs, int &amp;order, const Tol &amp;tol=Tol::gTol(), bool closed=true, int flags=-1, int ignoreVertex=-1)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_a264af26d83a3c7ed7c5ff70228dabdcc.htm#a264af26d83a3c7ed7c5ff70228dabdcc">PtInAreaRet</a> 枚举名称</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_ab38a4e679b8652ad006d81d17b338ee8.htm#ab38a4e679b8652ad006d81d17b338ee8">ptToBeeline</a>(const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;pt)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmglnrel_aa295b043b5736a8ad46bce6e2ea733b1.htm#aa295b043b5736a8ad46bce6e2ea733b1">ptToBeeline2</a>(const Point2d &amp;a, const Point2d &amp;b, Point2d pt, Point2d &amp;ptPerp)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmglnrel_a2b8294e07ff8348e89c3e56293c5f185.htm#a2b8294e07ff8348e89c3e56293c5f185">ptToLine</a>(const Point2d &amp;a, const Point2d &amp;b, Point2d pt, Point2d &amp;nearpt)</td><td class="entry"><a class="el" href="structmglnrel.htm">mglnrel</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
</table></div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>