<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: GiShapeAdapter类 参考</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public 成员函数</a> &#124;
<a href="#pri-methods">Private 成员函数</a> &#124;
<a href="#pri-attribs">Private 属性</a> &#124;
<a href="class_gi_shape_adapter-members.htm">所有成员列表</a>  </div>
  <div class="headertitle">
<div class="title">GiShapeAdapter类 参考<div class="ingroups"><a class="el" href="group___g_r_o_u_p___i_o_s.htm">平台适配器(iOS)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>输出 UIBezierPath 的画布适配器类  
 <a href="class_gi_shape_adapter.htm#details">更多...</a></p>

<p><code>#include &lt;GiShapeAdapter.h&gt;</code></p>
<div class="dynheader">
类 GiShapeAdapter 继承关系图:</div>
<div class="dyncontent">
<div class="center"><img src="class_gi_shape_adapter__inherit__graph.png" border="0" usemap="#_gi_shape_adapter_inherit__map" alt="Inheritance graph"/></div>
<map name="_gi_shape_adapter_inherit__map" id="_gi_shape_adapter_inherit__map">
<area shape="rect" id="node2" href="class_gi_canvas.htm" title="Canvas callback interface device&#45;dependent. " alt="" coords="21,5,130,217"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public 成员函数</h2></td></tr>
<tr class="memitem:a7c005eeb2223dbff4c218ce9d87210f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a7c005eeb2223dbff4c218ce9d87210f9.htm#a7c005eeb2223dbff4c218ce9d87210f9">GiShapeAdapter</a> (<a class="el" href="struct_gi_shape_adapter_callback.htm">GiShapeAdapterCallback</a> *shapeCallback)</td></tr>
<tr class="separator:a7c005eeb2223dbff4c218ce9d87210f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac49ce3205080e7d091b5b73581643ad4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ac49ce3205080e7d091b5b73581643ad4.htm#ac49ce3205080e7d091b5b73581643ad4">endOutput</a> ()</td></tr>
<tr class="separator:ac49ce3205080e7d091b5b73581643ad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ffc7dbf68a651a533f80a26fde12ec4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a3ffc7dbf68a651a533f80a26fde12ec4.htm#a3ffc7dbf68a651a533f80a26fde12ec4">setPen</a> (int argb, float width, int style, float phase, float orgw)</td></tr>
<tr class="memdesc:a3ffc7dbf68a651a533f80a26fde12ec4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set attributes of the current pen to stroke edges.  <a href="class_gi_shape_adapter_a3ffc7dbf68a651a533f80a26fde12ec4.htm#a3ffc7dbf68a651a533f80a26fde12ec4">更多...</a><br /></td></tr>
<tr class="separator:a3ffc7dbf68a651a533f80a26fde12ec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5466e0cf5de542f6728b915c8d1dd4be"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a5466e0cf5de542f6728b915c8d1dd4be.htm#a5466e0cf5de542f6728b915c8d1dd4be">setBrush</a> (int argb, int style)</td></tr>
<tr class="memdesc:a5466e0cf5de542f6728b915c8d1dd4be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set attributes of the current brush to fill shapes.  <a href="class_gi_shape_adapter_a5466e0cf5de542f6728b915c8d1dd4be.htm#a5466e0cf5de542f6728b915c8d1dd4be">更多...</a><br /></td></tr>
<tr class="separator:a5466e0cf5de542f6728b915c8d1dd4be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44af3bf967b4823725bf653c1a9b27c4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a44af3bf967b4823725bf653c1a9b27c4.htm#a44af3bf967b4823725bf653c1a9b27c4">clearRect</a> (float x, float y, float w, float h)</td></tr>
<tr class="memdesc:a44af3bf967b4823725bf653c1a9b27c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear `rect' (that is, set the region within the rect to transparent).  <a href="class_gi_shape_adapter_a44af3bf967b4823725bf653c1a9b27c4.htm#a44af3bf967b4823725bf653c1a9b27c4">更多...</a><br /></td></tr>
<tr class="separator:a44af3bf967b4823725bf653c1a9b27c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf9e43086cfbfdf008dd2393447b80d9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_abf9e43086cfbfdf008dd2393447b80d9.htm#abf9e43086cfbfdf008dd2393447b80d9">drawRect</a> (float x, float y, float w, float h, bool stroke, bool <a class="el" href="gigraph_8cpp_a8932679f27aab182b4419a5fd56a2a53.htm#a8932679f27aab182b4419a5fd56a2a53">fill</a>)</td></tr>
<tr class="memdesc:abf9e43086cfbfdf008dd2393447b80d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill or stroke `rect' (w&gt;0, h&gt;0) with the current color.  <a href="class_gi_shape_adapter_abf9e43086cfbfdf008dd2393447b80d9.htm#abf9e43086cfbfdf008dd2393447b80d9">更多...</a><br /></td></tr>
<tr class="separator:abf9e43086cfbfdf008dd2393447b80d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae564a1f78e56d57a74568df961366218"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ae564a1f78e56d57a74568df961366218.htm#ae564a1f78e56d57a74568df961366218">drawLine</a> (float x1, float y1, float x2, float y2)</td></tr>
<tr class="memdesc:ae564a1f78e56d57a74568df961366218"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stroke a line with the current color.  <a href="class_gi_shape_adapter_ae564a1f78e56d57a74568df961366218.htm#ae564a1f78e56d57a74568df961366218">更多...</a><br /></td></tr>
<tr class="separator:ae564a1f78e56d57a74568df961366218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae12deec36ba24ffaacb33407610dc1f2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ae12deec36ba24ffaacb33407610dc1f2.htm#ae12deec36ba24ffaacb33407610dc1f2">drawEllipse</a> (float x, float y, float w, float h, bool stroke, bool <a class="el" href="gigraph_8cpp_a8932679f27aab182b4419a5fd56a2a53.htm#a8932679f27aab182b4419a5fd56a2a53">fill</a>)</td></tr>
<tr class="memdesc:ae12deec36ba24ffaacb33407610dc1f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill or stroke a ellipse with a corner and size (w&gt;0, h&gt;0).  <a href="class_gi_shape_adapter_ae12deec36ba24ffaacb33407610dc1f2.htm#ae12deec36ba24ffaacb33407610dc1f2">更多...</a><br /></td></tr>
<tr class="separator:ae12deec36ba24ffaacb33407610dc1f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ca51b1fbea54dce29234cd5e91658e6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a9ca51b1fbea54dce29234cd5e91658e6.htm#a9ca51b1fbea54dce29234cd5e91658e6">beginPath</a> ()</td></tr>
<tr class="memdesc:a9ca51b1fbea54dce29234cd5e91658e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start a new path.  <a href="class_gi_shape_adapter_a9ca51b1fbea54dce29234cd5e91658e6.htm#a9ca51b1fbea54dce29234cd5e91658e6">更多...</a><br /></td></tr>
<tr class="separator:a9ca51b1fbea54dce29234cd5e91658e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb6d209510d58b950b7c4b132e93670d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_aeb6d209510d58b950b7c4b132e93670d.htm#aeb6d209510d58b950b7c4b132e93670d">moveTo</a> (float x, float y)</td></tr>
<tr class="memdesc:aeb6d209510d58b950b7c4b132e93670d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ready to add a subpath to the current path at the start point.  <a href="class_gi_shape_adapter_aeb6d209510d58b950b7c4b132e93670d.htm#aeb6d209510d58b950b7c4b132e93670d">更多...</a><br /></td></tr>
<tr class="separator:aeb6d209510d58b950b7c4b132e93670d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad888e47e1ebff218304b439494ee4fdf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ad888e47e1ebff218304b439494ee4fdf.htm#ad888e47e1ebff218304b439494ee4fdf">lineTo</a> (float x, float y)</td></tr>
<tr class="memdesc:ad888e47e1ebff218304b439494ee4fdf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a line segment to the current subpath.  <a href="class_gi_shape_adapter_ad888e47e1ebff218304b439494ee4fdf.htm#ad888e47e1ebff218304b439494ee4fdf">更多...</a><br /></td></tr>
<tr class="separator:ad888e47e1ebff218304b439494ee4fdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc600d114d900aeb5e75fb33c29df6a3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_afc600d114d900aeb5e75fb33c29df6a3.htm#afc600d114d900aeb5e75fb33c29df6a3">bezierTo</a> (float c1x, float c1y, float c2x, float c2y, float x, float y)</td></tr>
<tr class="memdesc:afc600d114d900aeb5e75fb33c29df6a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a cubic bezier segment to the current subpath.  <a href="class_gi_shape_adapter_afc600d114d900aeb5e75fb33c29df6a3.htm#afc600d114d900aeb5e75fb33c29df6a3">更多...</a><br /></td></tr>
<tr class="separator:afc600d114d900aeb5e75fb33c29df6a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbba2c7108a6ac58968c15eba826de55"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_abbba2c7108a6ac58968c15eba826de55.htm#abbba2c7108a6ac58968c15eba826de55">quadTo</a> (float cpx, float cpy, float x, float y)</td></tr>
<tr class="memdesc:abbba2c7108a6ac58968c15eba826de55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a quadratic bezier segment to the current subpath.  <a href="class_gi_shape_adapter_abbba2c7108a6ac58968c15eba826de55.htm#abbba2c7108a6ac58968c15eba826de55">更多...</a><br /></td></tr>
<tr class="separator:abbba2c7108a6ac58968c15eba826de55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad92f7664c811755789fb77dda81e4d43"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ad92f7664c811755789fb77dda81e4d43.htm#ad92f7664c811755789fb77dda81e4d43">closePath</a> ()</td></tr>
<tr class="memdesc:ad92f7664c811755789fb77dda81e4d43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close the current subpath of the path added by <a class="el" href="class_gi_shape_adapter_a9ca51b1fbea54dce29234cd5e91658e6.htm#a9ca51b1fbea54dce29234cd5e91658e6" title="Start a new path. ">beginPath()</a>.  <a href="class_gi_shape_adapter_ad92f7664c811755789fb77dda81e4d43.htm#ad92f7664c811755789fb77dda81e4d43">更多...</a><br /></td></tr>
<tr class="separator:ad92f7664c811755789fb77dda81e4d43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68be1056dd71fd19e36a810d16f4aba1"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a68be1056dd71fd19e36a810d16f4aba1.htm#a68be1056dd71fd19e36a810d16f4aba1">drawPath</a> (bool stroke, bool <a class="el" href="gigraph_8cpp_a8932679f27aab182b4419a5fd56a2a53.htm#a8932679f27aab182b4419a5fd56a2a53">fill</a>)</td></tr>
<tr class="memdesc:a68be1056dd71fd19e36a810d16f4aba1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw and clear the current path added by <a class="el" href="class_gi_shape_adapter_a9ca51b1fbea54dce29234cd5e91658e6.htm#a9ca51b1fbea54dce29234cd5e91658e6" title="Start a new path. ">beginPath()</a>.  <a href="class_gi_shape_adapter_a68be1056dd71fd19e36a810d16f4aba1.htm#a68be1056dd71fd19e36a810d16f4aba1">更多...</a><br /></td></tr>
<tr class="separator:a68be1056dd71fd19e36a810d16f4aba1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40d417afe73c146e85809a11c54132ee"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a40d417afe73c146e85809a11c54132ee.htm#a40d417afe73c146e85809a11c54132ee">saveClip</a> ()</td></tr>
<tr class="memdesc:a40d417afe73c146e85809a11c54132ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save the current clipping path.  <a href="class_gi_shape_adapter_a40d417afe73c146e85809a11c54132ee.htm#a40d417afe73c146e85809a11c54132ee">更多...</a><br /></td></tr>
<tr class="separator:a40d417afe73c146e85809a11c54132ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab458a8ae772003dcb3aa956f3963cce8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ab458a8ae772003dcb3aa956f3963cce8.htm#ab458a8ae772003dcb3aa956f3963cce8">restoreClip</a> ()</td></tr>
<tr class="memdesc:ab458a8ae772003dcb3aa956f3963cce8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restore the current clipping path.  <a href="class_gi_shape_adapter_ab458a8ae772003dcb3aa956f3963cce8.htm#ab458a8ae772003dcb3aa956f3963cce8">更多...</a><br /></td></tr>
<tr class="separator:ab458a8ae772003dcb3aa956f3963cce8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c2e24dab79715cf7c38064f170423d4"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a9c2e24dab79715cf7c38064f170423d4.htm#a9c2e24dab79715cf7c38064f170423d4">clipRect</a> (float x, float y, float w, float h)</td></tr>
<tr class="memdesc:a9c2e24dab79715cf7c38064f170423d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Intersect the current clipping path with `rect'.  <a href="class_gi_shape_adapter_a9c2e24dab79715cf7c38064f170423d4.htm#a9c2e24dab79715cf7c38064f170423d4">更多...</a><br /></td></tr>
<tr class="separator:a9c2e24dab79715cf7c38064f170423d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2411352c7238aa228a61956f31d37cc"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ac2411352c7238aa228a61956f31d37cc.htm#ac2411352c7238aa228a61956f31d37cc">clipPath</a> ()</td></tr>
<tr class="memdesc:ac2411352c7238aa228a61956f31d37cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Intersect the current clipping path with the path added by <a class="el" href="class_gi_shape_adapter_a9ca51b1fbea54dce29234cd5e91658e6.htm#a9ca51b1fbea54dce29234cd5e91658e6" title="Start a new path. ">beginPath()</a>.  <a href="class_gi_shape_adapter_ac2411352c7238aa228a61956f31d37cc.htm#ac2411352c7238aa228a61956f31d37cc">更多...</a><br /></td></tr>
<tr class="separator:ac2411352c7238aa228a61956f31d37cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1c7fc433bdd60b2fb1e6ac71ab49f05"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ab1c7fc433bdd60b2fb1e6ac71ab49f05.htm#ab1c7fc433bdd60b2fb1e6ac71ab49f05">drawHandle</a> (float x, float y, int type, float angle)</td></tr>
<tr class="memdesc:ab1c7fc433bdd60b2fb1e6ac71ab49f05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a symbol (GiHandleTypes) whose center will at (x, y).  <a href="class_gi_shape_adapter_ab1c7fc433bdd60b2fb1e6ac71ab49f05.htm#ab1c7fc433bdd60b2fb1e6ac71ab49f05">更多...</a><br /></td></tr>
<tr class="separator:ab1c7fc433bdd60b2fb1e6ac71ab49f05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72f769293dedd04fa79fca847d061822"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a72f769293dedd04fa79fca847d061822.htm#a72f769293dedd04fa79fca847d061822">drawBitmap</a> (const char *name, float xc, float yc, float w, float h, float angle)</td></tr>
<tr class="memdesc:a72f769293dedd04fa79fca847d061822"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a image whose center will at (xc, yc).  <a href="class_gi_shape_adapter_a72f769293dedd04fa79fca847d061822.htm#a72f769293dedd04fa79fca847d061822">更多...</a><br /></td></tr>
<tr class="separator:a72f769293dedd04fa79fca847d061822"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06b1a3ba1fb6ca01e9cc2a00a1fb325f"><td class="memItemLeft" align="right" valign="top">virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a06b1a3ba1fb6ca01e9cc2a00a1fb325f.htm#a06b1a3ba1fb6ca01e9cc2a00a1fb325f">drawTextAt</a> (const char *text, float x, float y, float h, int align, float angle)</td></tr>
<tr class="memdesc:a06b1a3ba1fb6ca01e9cc2a00a1fb325f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw text in one line.  <a href="class_gi_shape_adapter_a06b1a3ba1fb6ca01e9cc2a00a1fb325f.htm#a06b1a3ba1fb6ca01e9cc2a00a1fb325f">更多...</a><br /></td></tr>
<tr class="separator:a06b1a3ba1fb6ca01e9cc2a00a1fb325f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a286aa970007605d331565e4c15928a59"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a286aa970007605d331565e4c15928a59.htm#a286aa970007605d331565e4c15928a59">beginShape</a> (int type, int sid, int version, float x, float y, float w, float h)</td></tr>
<tr class="memdesc:a286aa970007605d331565e4c15928a59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ready to draw a shape.  <a href="class_gi_shape_adapter_a286aa970007605d331565e4c15928a59.htm#a286aa970007605d331565e4c15928a59">更多...</a><br /></td></tr>
<tr class="separator:a286aa970007605d331565e4c15928a59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64713cf24891dd5b00b0b07b81e6e96e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a64713cf24891dd5b00b0b07b81e6e96e.htm#a64713cf24891dd5b00b0b07b81e6e96e">endShape</a> (int type, int sid, float x, float y)</td></tr>
<tr class="memdesc:a64713cf24891dd5b00b0b07b81e6e96e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Complete to draw a shape.  <a href="class_gi_shape_adapter_a64713cf24891dd5b00b0b07b81e6e96e.htm#a64713cf24891dd5b00b0b07b81e6e96e">更多...</a><br /></td></tr>
<tr class="separator:a64713cf24891dd5b00b0b07b81e6e96e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_gi_canvas"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_gi_canvas')"><img src="closed.png" alt="-"/>&#160;Public 成员函数 继承自 <a class="el" href="class_gi_canvas.htm">GiCanvas</a></td></tr>
<tr class="memitem:a5520df1ca1db9253b5a11539f0c99dfd inherit pub_methods_class_gi_canvas"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_canvas_a5520df1ca1db9253b5a11539f0c99dfd.htm#a5520df1ca1db9253b5a11539f0c99dfd">~GiCanvas</a> ()</td></tr>
<tr class="separator:a5520df1ca1db9253b5a11539f0c99dfd inherit pub_methods_class_gi_canvas"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4ceb844c34823eb1f680177305981de inherit pub_methods_class_gi_canvas"><td class="memItemLeft" align="right" valign="top">virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_canvas_ad4ceb844c34823eb1f680177305981de.htm#ad4ceb844c34823eb1f680177305981de">drawTextAt</a> (<a class="el" href="struct_gi_text_width_callback.htm">GiTextWidthCallback</a> *c, const char *text, float x, float y, float h, int align, float angle)</td></tr>
<tr class="separator:ad4ceb844c34823eb1f680177305981de inherit pub_methods_class_gi_canvas"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d6b68cb8b220e92805072eb90a46d71 inherit pub_methods_class_gi_canvas"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_canvas_a9d6b68cb8b220e92805072eb90a46d71.htm#a9d6b68cb8b220e92805072eb90a46d71">clearCachedBitmap</a> (bool clearAll=false)</td></tr>
<tr class="memdesc:a9d6b68cb8b220e92805072eb90a46d71 inherit pub_methods_class_gi_canvas"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the cached bitmap for re-drawing on desktop PC.  <a href="class_gi_canvas_a9d6b68cb8b220e92805072eb90a46d71.htm#a9d6b68cb8b220e92805072eb90a46d71">更多...</a><br /></td></tr>
<tr class="separator:a9d6b68cb8b220e92805072eb90a46d71 inherit pub_methods_class_gi_canvas"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private 成员函数</h2></td></tr>
<tr class="memitem:aece1d6dc7a7174ece27698f6adb2ac85"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_aece1d6dc7a7174ece27698f6adb2ac85.htm#aece1d6dc7a7174ece27698f6adb2ac85">hasLineColor</a> () const</td></tr>
<tr class="separator:aece1d6dc7a7174ece27698f6adb2ac85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19c4ec584950344b73dc8929e2e41bdf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a19c4ec584950344b73dc8929e2e41bdf.htm#a19c4ec584950344b73dc8929e2e41bdf">hasFillColor</a> () const</td></tr>
<tr class="separator:a19c4ec584950344b73dc8929e2e41bdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35cb09134671d75cdb35cfeb915e2ec3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a35cb09134671d75cdb35cfeb915e2ec3.htm#a35cb09134671d75cdb35cfeb915e2ec3">fireLastPath</a> ()</td></tr>
<tr class="separator:a35cb09134671d75cdb35cfeb915e2ec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a617ff48c25d02c34ec851679765001e3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a617ff48c25d02c34ec851679765001e3.htm#a617ff48c25d02c34ec851679765001e3">checkNeedFire</a> (bool stroke, bool <a class="el" href="gigraph_8cpp_a8932679f27aab182b4419a5fd56a2a53.htm#a8932679f27aab182b4419a5fd56a2a53">fill</a>)</td></tr>
<tr class="separator:a617ff48c25d02c34ec851679765001e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private 属性</h2></td></tr>
<tr class="memitem:ad9bcbd9ef2e34cb82733d311bc82630f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_gi_shape_adapter_callback.htm">GiShapeAdapterCallback</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ad9bcbd9ef2e34cb82733d311bc82630f.htm#ad9bcbd9ef2e34cb82733d311bc82630f">_callback</a></td></tr>
<tr class="separator:ad9bcbd9ef2e34cb82733d311bc82630f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c5cfb9529c714b942f0910a2cd530fd"><td class="memItemLeft" align="right" valign="top">UIBezierPath *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_a3c5cfb9529c714b942f0910a2cd530fd.htm#a3c5cfb9529c714b942f0910a2cd530fd">_container</a></td></tr>
<tr class="separator:a3c5cfb9529c714b942f0910a2cd530fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1d050d9d1e32340c5d0fd3e7e874a07"><td class="memItemLeft" align="right" valign="top">UIBezierPath *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ac1d050d9d1e32340c5d0fd3e7e874a07.htm#ac1d050d9d1e32340c5d0fd3e7e874a07">_path</a></td></tr>
<tr class="separator:ac1d050d9d1e32340c5d0fd3e7e874a07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7e141679dd6b1f0e3903fbef4bc8246"><td class="memItemLeft" align="right" valign="top">UIColor *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ae7e141679dd6b1f0e3903fbef4bc8246.htm#ae7e141679dd6b1f0e3903fbef4bc8246">_lineColor</a></td></tr>
<tr class="separator:ae7e141679dd6b1f0e3903fbef4bc8246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5a37a938c56b323754f691ddee741f1"><td class="memItemLeft" align="right" valign="top">UIColor *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_shape_adapter_ae5a37a938c56b323754f691ddee741f1.htm#ae5a37a938c56b323754f691ddee741f1">_fillColor</a></td></tr>
<tr class="separator:ae5a37a938c56b323754f691ddee741f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
额外继承的成员函数</h2></td></tr>
<tr class="inherit_header pub_types_class_gi_canvas"><td colspan="2" onclick="javascript:toggleInherit('pub_types_class_gi_canvas')"><img src="closed.png" alt="-"/>&#160;Public 类型 继承自 <a class="el" href="class_gi_canvas.htm">GiCanvas</a></td></tr>
<tr class="memitem:af2a17ff2c7fd39681fe351ec4e09c2a4 inherit pub_types_class_gi_canvas"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br />
&#160;&#160;<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a383284d3763cc1531ac2d80d516d8d3a">kLineDashMask</a> = 0xFFF, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4ad24fdbfbab1028b0beec1b31086a38c4">kLineCapDefault</a> = 0, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a651e10250d6df74a3e00dbc58b404a08">kLineCapMask</a> = 0x70000, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a270a2ab6c9f8d6a1f5b5f1b500a3ba21">kLineCapButt</a> = 0x10000, 
<br />
&#160;&#160;<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a4a8494a9d6e0a32eca3f9279512404bf">kLineCapRound</a> = 0x20000, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a3806c1ae5c36aebf4d98995570efa66b">kLineCapSquare</a> = 0x40000, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a9221bd86828795e03388c040b6b1bab3">kAlignLeft</a> = 0, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a0e16a03e67e1bc143d7c323562fa4874">kAlignCenter</a> = 1, 
<br />
&#160;&#160;<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4ab0cd194b256753cc34b1008153648137">kAlignRight</a> = 2, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4ab376f3d283d97b8e7e46a0f20ec16f2b">kAlignHorz</a> = 0xF, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a1d6e335e530271576ddcfbb271dbde81">kAlignTop</a> = 0, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4aa127f24b612ef401b17f27010e214ad7">kAlignBottom</a> = 0x10, 
<br />
&#160;&#160;<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a47be2a49cfa0df60ebbc3bdb1bbbed95">kAlignVCenter</a> = 0x20, 
<a class="el" href="class_gi_canvas_af2a17ff2c7fd39681fe351ec4e09c2a4.htm#af2a17ff2c7fd39681fe351ec4e09c2a4a94890d224f5b41492748d9b3144e9df1">kAlignVert</a> = 0xF0
<br />
 }</td></tr>
<tr class="separator:af2a17ff2c7fd39681fe351ec4e09c2a4 inherit pub_types_class_gi_canvas"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">详细描述</h2>
<div class="textblock"><p>输出 UIBezierPath 的画布适配器类 </p>
</div><hr/>该类的文档由以下文件生成:<ul>
<li><a class="el" href="_gi_shape_adapter_8h.htm">GiShapeAdapter.h</a></li>
<li><a class="el" href="_gi_shape_adapter_8mm.htm">GiShapeAdapter.mm</a></li>
</ul>
</div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>