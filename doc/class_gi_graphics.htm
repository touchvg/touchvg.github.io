<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: GiGraphics类 参考</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public 类型</a> &#124;
<a href="#pub-methods">Public 成员函数</a> &#124;
<a href="#pub-static-methods">静态 Public 成员函数</a> &#124;
<a href="#pri-methods">Private 成员函数</a> &#124;
<a href="#pri-attribs">Private 属性</a> &#124;
<a href="class_gi_graphics-members.htm">所有成员列表</a>  </div>
  <div class="headertitle">
<div class="title">GiGraphics类 参考<div class="ingroups"><a class="el" href="group___g_r_a_p_h___i_n_t_e_r_f_a_c_e.htm">图形接口类</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>图形系统类  
 <a href="class_gi_graphics.htm#details">更多...</a></p>

<p><code>#include &lt;gigraph.h&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public 类型</h2></td></tr>
<tr class="memitem:ac0c6c3d1cdc64056516fbae6b00353ba"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br />
&#160;&#160;<a class="el" href="class_gi_graphics_ac0c6c3d1cdc64056516fbae6b00353ba.htm#ac0c6c3d1cdc64056516fbae6b00353baac2b09501dac8aa8a8f3546cb29ec9623">kAlignLeft</a> = 0, 
<a class="el" href="class_gi_graphics_ac0c6c3d1cdc64056516fbae6b00353ba.htm#ac0c6c3d1cdc64056516fbae6b00353baa9027aa118fe8441355a95acf131e24ee">kAlignCenter</a> = 1, 
<a class="el" href="class_gi_graphics_ac0c6c3d1cdc64056516fbae6b00353ba.htm#ac0c6c3d1cdc64056516fbae6b00353baa624acde1571eaa54a3175a7960836b40">kAlignRight</a> = 2, 
<a class="el" href="class_gi_graphics_ac0c6c3d1cdc64056516fbae6b00353ba.htm#ac0c6c3d1cdc64056516fbae6b00353baaacaf08165f989a3e9b73239badc791a3">kAlignTop</a> = 0, 
<br />
&#160;&#160;<a class="el" href="class_gi_graphics_ac0c6c3d1cdc64056516fbae6b00353ba.htm#ac0c6c3d1cdc64056516fbae6b00353baa96cae75530507b8fa0ab898b547f355c">kAlignBottom</a> = 0x10, 
<a class="el" href="class_gi_graphics_ac0c6c3d1cdc64056516fbae6b00353ba.htm#ac0c6c3d1cdc64056516fbae6b00353baaadadf9d28b358a32b6b0f72c448b06f6">kAlignVCenter</a> = 0x20, 
<a class="el" href="class_gi_graphics_ac0c6c3d1cdc64056516fbae6b00353ba.htm#ac0c6c3d1cdc64056516fbae6b00353baa2974dd422427a68ae6d13fbd6abae356">kAlignHVCenter</a> = kAlignCenter|kAlignVCenter
<br />
 }</td></tr>
<tr class="separator:ac0c6c3d1cdc64056516fbae6b00353ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public 成员函数</h2></td></tr>
<tr class="memitem:a511b137045166deb54571117af54cede"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a511b137045166deb54571117af54cede.htm#a511b137045166deb54571117af54cede">GiGraphics</a> ()</td></tr>
<tr class="memdesc:a511b137045166deb54571117af54cede"><td class="mdescLeft">&#160;</td><td class="mdescRight">构造函数，自动创建坐标系管理对象  <a href="class_gi_graphics_a511b137045166deb54571117af54cede.htm#a511b137045166deb54571117af54cede">更多...</a><br /></td></tr>
<tr class="separator:a511b137045166deb54571117af54cede"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a615fd25364efd6d2c70621dd00423638"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a615fd25364efd6d2c70621dd00423638.htm#a615fd25364efd6d2c70621dd00423638">GiGraphics</a> (<a class="el" href="class_gi_transform.htm">GiTransform</a> *xform, bool needFreeXf=false)</td></tr>
<tr class="memdesc:a615fd25364efd6d2c70621dd00423638"><td class="mdescLeft">&#160;</td><td class="mdescRight">构造函数，坐标系管理对象必须有效  <a href="class_gi_graphics_a615fd25364efd6d2c70621dd00423638.htm#a615fd25364efd6d2c70621dd00423638">更多...</a><br /></td></tr>
<tr class="separator:a615fd25364efd6d2c70621dd00423638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c7c1761c82b1586f616c3f398d9b147"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a4c7c1761c82b1586f616c3f398d9b147.htm#a4c7c1761c82b1586f616c3f398d9b147">GiGraphics</a> (const <a class="el" href="class_gi_graphics.htm">GiGraphics</a> &amp;src)</td></tr>
<tr class="memdesc:a4c7c1761c82b1586f616c3f398d9b147"><td class="mdescLeft">&#160;</td><td class="mdescRight">拷贝构造函数  <a href="class_gi_graphics_a4c7c1761c82b1586f616c3f398d9b147.htm#a4c7c1761c82b1586f616c3f398d9b147">更多...</a><br /></td></tr>
<tr class="separator:a4c7c1761c82b1586f616c3f398d9b147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b4471c7bf8aaad55e17885a577f2b1e"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a0b4471c7bf8aaad55e17885a577f2b1e.htm#a0b4471c7bf8aaad55e17885a577f2b1e">~GiGraphics</a> ()</td></tr>
<tr class="memdesc:a0b4471c7bf8aaad55e17885a577f2b1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">析构函数  <a href="class_gi_graphics_a0b4471c7bf8aaad55e17885a577f2b1e.htm#a0b4471c7bf8aaad55e17885a577f2b1e">更多...</a><br /></td></tr>
<tr class="separator:a0b4471c7bf8aaad55e17885a577f2b1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5293f51f3014198effe06fdb66eee79"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ae5293f51f3014198effe06fdb66eee79.htm#ae5293f51f3014198effe06fdb66eee79">toHandle</a> () const</td></tr>
<tr class="memdesc:ae5293f51f3014198effe06fdb66eee79"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到句柄  <a href="class_gi_graphics_ae5293f51f3014198effe06fdb66eee79.htm#ae5293f51f3014198effe06fdb66eee79">更多...</a><br /></td></tr>
<tr class="separator:ae5293f51f3014198effe06fdb66eee79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14600fa4a50ce7984409f9eb00a66e52"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a14600fa4a50ce7984409f9eb00a66e52.htm#a14600fa4a50ce7984409f9eb00a66e52">copy</a> (const <a class="el" href="class_gi_graphics.htm">GiGraphics</a> &amp;src)</td></tr>
<tr class="memdesc:a14600fa4a50ce7984409f9eb00a66e52"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制指定对象到本对象  <a href="class_gi_graphics_a14600fa4a50ce7984409f9eb00a66e52.htm#a14600fa4a50ce7984409f9eb00a66e52">更多...</a><br /></td></tr>
<tr class="separator:a14600fa4a50ce7984409f9eb00a66e52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ded3e4bcb65c87a41973f61a5805516"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_gi_transform.htm">GiTransform</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a6ded3e4bcb65c87a41973f61a5805516.htm#a6ded3e4bcb65c87a41973f61a5805516">xf</a> () const</td></tr>
<tr class="memdesc:a6ded3e4bcb65c87a41973f61a5805516"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回坐标系管理对象  <a href="class_gi_graphics_a6ded3e4bcb65c87a41973f61a5805516.htm#a6ded3e4bcb65c87a41973f61a5805516">更多...</a><br /></td></tr>
<tr class="separator:a6ded3e4bcb65c87a41973f61a5805516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af662bde49dc91f95d4f39cdf76c23517"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_af662bde49dc91f95d4f39cdf76c23517.htm#af662bde49dc91f95d4f39cdf76c23517">isDrawing</a> () const</td></tr>
<tr class="memdesc:af662bde49dc91f95d4f39cdf76c23517"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否正在绘制，即调用了 <a class="el" href="class_gi_graphics_a9cd7b377aa19f19e21a9e232367c4a6d.htm#a9cd7b377aa19f19e21a9e232367c4a6d" title="在显示适配类的 beginPaint() 中调用 ">beginPaint()</a> 还未调用 <a class="el" href="class_gi_graphics_a50c43dd755019fecf919066a147d773b.htm#a50c43dd755019fecf919066a147d773b" title="在显示适配类的 endPaint() 中调用 ">endPaint()</a>  <a href="class_gi_graphics_af662bde49dc91f95d4f39cdf76c23517.htm#af662bde49dc91f95d4f39cdf76c23517">更多...</a><br /></td></tr>
<tr class="separator:af662bde49dc91f95d4f39cdf76c23517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1b3c41da2ae4517c84e0048625e9cbd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ad1b3c41da2ae4517c84e0048625e9cbd.htm#ad1b3c41da2ae4517c84e0048625e9cbd">isPrint</a> () const</td></tr>
<tr class="memdesc:ad1b3c41da2ae4517c84e0048625e9cbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否打印或打印预览  <a href="class_gi_graphics_ad1b3c41da2ae4517c84e0048625e9cbd.htm#ad1b3c41da2ae4517c84e0048625e9cbd">更多...</a><br /></td></tr>
<tr class="separator:ad1b3c41da2ae4517c84e0048625e9cbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa9f53ec938ffe3d1875accabb8b8a6c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aaa9f53ec938ffe3d1875accabb8b8a6c.htm#aaa9f53ec938ffe3d1875accabb8b8a6c">isStopping</a> () const</td></tr>
<tr class="memdesc:aaa9f53ec938ffe3d1875accabb8b8a6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否需要停止绘图  <a href="class_gi_graphics_aaa9f53ec938ffe3d1875accabb8b8a6c.htm#aaa9f53ec938ffe3d1875accabb8b8a6c">更多...</a><br /></td></tr>
<tr class="separator:aaa9f53ec938ffe3d1875accabb8b8a6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9de2bd8cbdb5635629bd9fb07a16c6e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a9de2bd8cbdb5635629bd9fb07a16c6e0.htm#a9de2bd8cbdb5635629bd9fb07a16c6e0">stopDrawing</a> (bool stopped=true)</td></tr>
<tr class="memdesc:a9de2bd8cbdb5635629bd9fb07a16c6e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">标记需要停止绘图  <a href="class_gi_graphics_a9de2bd8cbdb5635629bd9fb07a16c6e0.htm#a9de2bd8cbdb5635629bd9fb07a16c6e0">更多...</a><br /></td></tr>
<tr class="separator:a9de2bd8cbdb5635629bd9fb07a16c6e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b691978f729fae835962e2c09f965ad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_box2d.htm">Box2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a7b691978f729fae835962e2c09f965ad.htm#a7b691978f729fae835962e2c09f965ad">getClipModel</a> () const</td></tr>
<tr class="memdesc:a7b691978f729fae835962e2c09f965ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回剪裁框，模型坐标  <a href="class_gi_graphics_a7b691978f729fae835962e2c09f965ad.htm#a7b691978f729fae835962e2c09f965ad">更多...</a><br /></td></tr>
<tr class="separator:a7b691978f729fae835962e2c09f965ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3091ef68329f513a4640035cf95da42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_box2d.htm">Box2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ac3091ef68329f513a4640035cf95da42.htm#ac3091ef68329f513a4640035cf95da42">getClipWorld</a> () const</td></tr>
<tr class="memdesc:ac3091ef68329f513a4640035cf95da42"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回剪裁框，世界坐标  <a href="class_gi_graphics_ac3091ef68329f513a4640035cf95da42.htm#ac3091ef68329f513a4640035cf95da42">更多...</a><br /></td></tr>
<tr class="separator:ac3091ef68329f513a4640035cf95da42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65f283a25ec3acbd1d4d69e9656fbe35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="mgbox_8h_a358d185d00982a138351e495f5298cf7.htm#a358d185d00982a138351e495f5298cf7">RECT_2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a65f283a25ec3acbd1d4d69e9656fbe35.htm#a65f283a25ec3acbd1d4d69e9656fbe35">getClipBox</a> (<a class="el" href="mgbox_8h_a358d185d00982a138351e495f5298cf7.htm#a358d185d00982a138351e495f5298cf7">RECT_2D</a> &amp;rc) const</td></tr>
<tr class="memdesc:a65f283a25ec3acbd1d4d69e9656fbe35"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到剪裁框，逻辑坐标  <a href="class_gi_graphics_a65f283a25ec3acbd1d4d69e9656fbe35.htm#a65f283a25ec3acbd1d4d69e9656fbe35">更多...</a><br /></td></tr>
<tr class="separator:a65f283a25ec3acbd1d4d69e9656fbe35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a04fc09295f6314110c44d31ff084fd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a1a04fc09295f6314110c44d31ff084fd.htm#a1a04fc09295f6314110c44d31ff084fd">setClipBox</a> (const <a class="el" href="mgbox_8h_a358d185d00982a138351e495f5298cf7.htm#a358d185d00982a138351e495f5298cf7">RECT_2D</a> &amp;rc)</td></tr>
<tr class="memdesc:a1a04fc09295f6314110c44d31ff084fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置剪裁框，逻辑坐标  <a href="class_gi_graphics_a1a04fc09295f6314110c44d31ff084fd.htm#a1a04fc09295f6314110c44d31ff084fd">更多...</a><br /></td></tr>
<tr class="separator:a1a04fc09295f6314110c44d31ff084fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc07796d30073259a82d463c9897c3fe"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_adc07796d30073259a82d463c9897c3fe.htm#adc07796d30073259a82d463c9897c3fe">setClipWorld</a> (const <a class="el" href="class_box2d.htm">Box2d</a> &amp;rectWorld)</td></tr>
<tr class="memdesc:adc07796d30073259a82d463c9897c3fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置剪裁框，世界坐标  <a href="class_gi_graphics_adc07796d30073259a82d463c9897c3fe.htm#adc07796d30073259a82d463c9897c3fe">更多...</a><br /></td></tr>
<tr class="separator:adc07796d30073259a82d463c9897c3fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2221c7973edcc719acabcb5a4fde1f0c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a2221c7973edcc719acabcb5a4fde1f0c.htm#a2221c7973edcc719acabcb5a4fde1f0c">isGrayMode</a> () const</td></tr>
<tr class="memdesc:a2221c7973edcc719acabcb5a4fde1f0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回颜色模式  <a href="class_gi_graphics_a2221c7973edcc719acabcb5a4fde1f0c.htm#a2221c7973edcc719acabcb5a4fde1f0c">更多...</a><br /></td></tr>
<tr class="separator:a2221c7973edcc719acabcb5a4fde1f0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeabf38724f5c77882239cf6a2a4441bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aeabf38724f5c77882239cf6a2a4441bf.htm#aeabf38724f5c77882239cf6a2a4441bf">setGrayMode</a> (bool gray)</td></tr>
<tr class="memdesc:aeabf38724f5c77882239cf6a2a4441bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置颜色模式  <a href="class_gi_graphics_aeabf38724f5c77882239cf6a2a4441bf.htm#aeabf38724f5c77882239cf6a2a4441bf">更多...</a><br /></td></tr>
<tr class="separator:aeabf38724f5c77882239cf6a2a4441bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a333dd4e336d14f589105697fbb94dd35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_gi_color.htm">GiColor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a333dd4e336d14f589105697fbb94dd35.htm#a333dd4e336d14f589105697fbb94dd35">getBkColor</a> () const</td></tr>
<tr class="memdesc:a333dd4e336d14f589105697fbb94dd35"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回背景色(打印或打印预览时为白色)  <a href="class_gi_graphics_a333dd4e336d14f589105697fbb94dd35.htm#a333dd4e336d14f589105697fbb94dd35">更多...</a><br /></td></tr>
<tr class="separator:a333dd4e336d14f589105697fbb94dd35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a421938bcd379eacfe88c1e7a16f4a27f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_gi_color.htm">GiColor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a421938bcd379eacfe88c1e7a16f4a27f.htm#a421938bcd379eacfe88c1e7a16f4a27f">setBkColor</a> (const <a class="el" href="struct_gi_color.htm">GiColor</a> &amp;color)</td></tr>
<tr class="memdesc:a421938bcd379eacfe88c1e7a16f4a27f"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置新的背景色，返回原来的背景色  <a href="class_gi_graphics_a421938bcd379eacfe88c1e7a16f4a27f.htm#a421938bcd379eacfe88c1e7a16f4a27f">更多...</a><br /></td></tr>
<tr class="separator:a421938bcd379eacfe88c1e7a16f4a27f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afceb7d62c131cf50eca24839bd1126f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_gi_color.htm">GiColor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_afceb7d62c131cf50eca24839bd1126f8.htm#afceb7d62c131cf50eca24839bd1126f8">calcPenColor</a> (const <a class="el" href="struct_gi_color.htm">GiColor</a> &amp;color) const</td></tr>
<tr class="memdesc:afceb7d62c131cf50eca24839bd1126f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算画笔颜色  <a href="class_gi_graphics_afceb7d62c131cf50eca24839bd1126f8.htm#afceb7d62c131cf50eca24839bd1126f8">更多...</a><br /></td></tr>
<tr class="separator:afceb7d62c131cf50eca24839bd1126f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac51b1eb54e78fcff30095e440ec97b1"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aac51b1eb54e78fcff30095e440ec97b1.htm#aac51b1eb54e78fcff30095e440ec97b1">calcPenWidth</a> (float lineWidth, bool useViewScale) const</td></tr>
<tr class="memdesc:aac51b1eb54e78fcff30095e440ec97b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">计算画笔宽度  <a href="class_gi_graphics_aac51b1eb54e78fcff30095e440ec97b1.htm#aac51b1eb54e78fcff30095e440ec97b1">更多...</a><br /></td></tr>
<tr class="separator:aac51b1eb54e78fcff30095e440ec97b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84e7d0c45a4ef1c7705c43c2b4e5ea8e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a84e7d0c45a4ef1c7705c43c2b4e5ea8e.htm#a84e7d0c45a4ef1c7705c43c2b4e5ea8e">setMaxPenWidth</a> (float pixels, float minw=1)</td></tr>
<tr class="memdesc:a84e7d0c45a4ef1c7705c43c2b4e5ea8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置最大画笔宽度，像素  <a href="class_gi_graphics_a84e7d0c45a4ef1c7705c43c2b4e5ea8e.htm#a84e7d0c45a4ef1c7705c43c2b4e5ea8e">更多...</a><br /></td></tr>
<tr class="separator:a84e7d0c45a4ef1c7705c43c2b4e5ea8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b7e46d929e4b9fa046cbef96a6bfbc9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a2b7e46d929e4b9fa046cbef96a6bfbc9.htm#a2b7e46d929e4b9fa046cbef96a6bfbc9">setPhaseEnabled</a> (bool enabled)</td></tr>
<tr class="memdesc:a2b7e46d929e4b9fa046cbef96a6bfbc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">是否允许虚线偏移量  <a href="class_gi_graphics_a2b7e46d929e4b9fa046cbef96a6bfbc9.htm#a2b7e46d929e4b9fa046cbef96a6bfbc9">更多...</a><br /></td></tr>
<tr class="separator:a2b7e46d929e4b9fa046cbef96a6bfbc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace8ff339dc62c9206beb0fe7b359fdae"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ace8ff339dc62c9206beb0fe7b359fdae.htm#ace8ff339dc62c9206beb0fe7b359fdae">drawLine</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;startPt, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;endPt, bool modelUnit=true)</td></tr>
<tr class="memdesc:ace8ff339dc62c9206beb0fe7b359fdae"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制直线段，模型坐标或世界坐标  <a href="class_gi_graphics_ace8ff339dc62c9206beb0fe7b359fdae.htm#ace8ff339dc62c9206beb0fe7b359fdae">更多...</a><br /></td></tr>
<tr class="separator:ace8ff339dc62c9206beb0fe7b359fdae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abadc95dd029d440ba05e989494b56067"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_abadc95dd029d440ba05e989494b56067.htm#abadc95dd029d440ba05e989494b56067">drawRayline</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;startPt, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;endPt, bool modelUnit=true)</td></tr>
<tr class="memdesc:abadc95dd029d440ba05e989494b56067"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制射线，模型坐标或世界坐标  <a href="class_gi_graphics_abadc95dd029d440ba05e989494b56067.htm#abadc95dd029d440ba05e989494b56067">更多...</a><br /></td></tr>
<tr class="separator:abadc95dd029d440ba05e989494b56067"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16cbf9598488c9ad24db5a9b3bc00602"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a16cbf9598488c9ad24db5a9b3bc00602.htm#a16cbf9598488c9ad24db5a9b3bc00602">drawBeeline</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;startPt, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;endPt, bool modelUnit=true)</td></tr>
<tr class="memdesc:a16cbf9598488c9ad24db5a9b3bc00602"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制无穷直线，模型坐标或世界坐标  <a href="class_gi_graphics_a16cbf9598488c9ad24db5a9b3bc00602.htm#a16cbf9598488c9ad24db5a9b3bc00602">更多...</a><br /></td></tr>
<tr class="separator:a16cbf9598488c9ad24db5a9b3bc00602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed005b1644a7f21f1a0c4908ae4c57ad"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aed005b1644a7f21f1a0c4908ae4c57ad.htm#aed005b1644a7f21f1a0c4908ae4c57ad">drawLines</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool modelUnit=true)</td></tr>
<tr class="memdesc:aed005b1644a7f21f1a0c4908ae4c57ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制折线，模型坐标或世界坐标  <a href="class_gi_graphics_aed005b1644a7f21f1a0c4908ae4c57ad.htm#aed005b1644a7f21f1a0c4908ae4c57ad">更多...</a><br /></td></tr>
<tr class="separator:aed005b1644a7f21f1a0c4908ae4c57ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a952d2d0cdba4467667cef7dbce01f457"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a952d2d0cdba4467667cef7dbce01f457.htm#a952d2d0cdba4467667cef7dbce01f457">drawBeziers</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool closed=false, bool modelUnit=true)</td></tr>
<tr class="memdesc:a952d2d0cdba4467667cef7dbce01f457"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制多条三次贝塞尔曲线，模型坐标或世界坐标  <a href="class_gi_graphics_a952d2d0cdba4467667cef7dbce01f457.htm#a952d2d0cdba4467667cef7dbce01f457">更多...</a><br /></td></tr>
<tr class="separator:a952d2d0cdba4467667cef7dbce01f457"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcff8d9afdcc5045d883cd40917db084"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_adcff8d9afdcc5045d883cd40917db084.htm#adcff8d9afdcc5045d883cd40917db084">drawBeziers</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *knot, const <a class="el" href="class_vector2d.htm">Vector2d</a> *knotvs, bool closed=false, bool modelUnit=true)</td></tr>
<tr class="memdesc:adcff8d9afdcc5045d883cd40917db084"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制多条贝塞尔曲线，模型坐标或世界坐标  <a href="class_gi_graphics_adcff8d9afdcc5045d883cd40917db084.htm#adcff8d9afdcc5045d883cd40917db084">更多...</a><br /></td></tr>
<tr class="separator:adcff8d9afdcc5045d883cd40917db084"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a696df9cffc33341f3cd6bc9f12d64cde"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a696df9cffc33341f3cd6bc9f12d64cde.htm#a696df9cffc33341f3cd6bc9f12d64cde">drawArc</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center, float rx, float ry, float startAngle, float sweepAngle, bool modelUnit=true)</td></tr>
<tr class="memdesc:a696df9cffc33341f3cd6bc9f12d64cde"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制椭圆弧，模型坐标或世界坐标  <a href="class_gi_graphics_a696df9cffc33341f3cd6bc9f12d64cde.htm#a696df9cffc33341f3cd6bc9f12d64cde">更多...</a><br /></td></tr>
<tr class="separator:a696df9cffc33341f3cd6bc9f12d64cde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19713b67b08af2d90b1bcdbf0e1ec8d0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a19713b67b08af2d90b1bcdbf0e1ec8d0.htm#a19713b67b08af2d90b1bcdbf0e1ec8d0">drawArc3P</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;startpt, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;midpt, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;endpt, bool modelUnit=true)</td></tr>
<tr class="memdesc:a19713b67b08af2d90b1bcdbf0e1ec8d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">给定线上三点绘制椭圆弧，模型坐标或世界坐标  <a href="class_gi_graphics_a19713b67b08af2d90b1bcdbf0e1ec8d0.htm#a19713b67b08af2d90b1bcdbf0e1ec8d0">更多...</a><br /></td></tr>
<tr class="separator:a19713b67b08af2d90b1bcdbf0e1ec8d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af77d7b8534bb4de354b850c61004a3d2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_af77d7b8534bb4de354b850c61004a3d2.htm#af77d7b8534bb4de354b850c61004a3d2">drawPolygon</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool modelUnit=true)</td></tr>
<tr class="memdesc:af77d7b8534bb4de354b850c61004a3d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制并填充多边形，模型坐标或世界坐标  <a href="class_gi_graphics_af77d7b8534bb4de354b850c61004a3d2.htm#af77d7b8534bb4de354b850c61004a3d2">更多...</a><br /></td></tr>
<tr class="separator:af77d7b8534bb4de354b850c61004a3d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac75b768061d7bc7520ed5261ced48721"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ac75b768061d7bc7520ed5261ced48721.htm#ac75b768061d7bc7520ed5261ced48721">drawCircle</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center, float r, bool modelUnit=true)</td></tr>
<tr class="memdesc:ac75b768061d7bc7520ed5261ced48721"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制并填充圆，模型坐标或世界坐标  <a href="class_gi_graphics_ac75b768061d7bc7520ed5261ced48721.htm#ac75b768061d7bc7520ed5261ced48721">更多...</a><br /></td></tr>
<tr class="separator:ac75b768061d7bc7520ed5261ced48721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f4e7f4aa6ccf26668a37398498571ce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a9f4e7f4aa6ccf26668a37398498571ce.htm#a9f4e7f4aa6ccf26668a37398498571ce">drawEllipse</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center, float rx, float ry, bool modelUnit=true)</td></tr>
<tr class="memdesc:a9f4e7f4aa6ccf26668a37398498571ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制并填充椭圆，模型坐标或世界坐标  <a href="class_gi_graphics_a9f4e7f4aa6ccf26668a37398498571ce.htm#a9f4e7f4aa6ccf26668a37398498571ce">更多...</a><br /></td></tr>
<tr class="separator:a9f4e7f4aa6ccf26668a37398498571ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a339ce420b000c468e31bace4f3918162"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a339ce420b000c468e31bace4f3918162.htm#a339ce420b000c468e31bace4f3918162">drawEllipse</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_box2d.htm">Box2d</a> &amp;rect, bool modelUnit=true)</td></tr>
<tr class="memdesc:a339ce420b000c468e31bace4f3918162"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制并填充椭圆，模型坐标或世界坐标  <a href="class_gi_graphics_a339ce420b000c468e31bace4f3918162.htm#a339ce420b000c468e31bace4f3918162">更多...</a><br /></td></tr>
<tr class="separator:a339ce420b000c468e31bace4f3918162"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bfa0e84b503ef295eb801a0da91a8e8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a1bfa0e84b503ef295eb801a0da91a8e8.htm#a1bfa0e84b503ef295eb801a0da91a8e8">drawPie</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;center, float rx, float ry, float startAngle, float sweepAngle, bool modelUnit=true)</td></tr>
<tr class="memdesc:a1bfa0e84b503ef295eb801a0da91a8e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制并填充椭圆弧饼图，模型坐标或世界坐标  <a href="class_gi_graphics_a1bfa0e84b503ef295eb801a0da91a8e8.htm#a1bfa0e84b503ef295eb801a0da91a8e8">更多...</a><br /></td></tr>
<tr class="separator:a1bfa0e84b503ef295eb801a0da91a8e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8f382371839abc47043ff5f813290c0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ac8f382371839abc47043ff5f813290c0.htm#ac8f382371839abc47043ff5f813290c0">drawRect</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_box2d.htm">Box2d</a> &amp;rect, bool modelUnit=true)</td></tr>
<tr class="memdesc:ac8f382371839abc47043ff5f813290c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制并填充直角矩形，模型坐标或世界坐标  <a href="class_gi_graphics_ac8f382371839abc47043ff5f813290c0.htm#ac8f382371839abc47043ff5f813290c0">更多...</a><br /></td></tr>
<tr class="separator:ac8f382371839abc47043ff5f813290c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41f57a5fb96feafaefc54ecc9d67daae"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a41f57a5fb96feafaefc54ecc9d67daae.htm#a41f57a5fb96feafaefc54ecc9d67daae">drawRoundRect</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_box2d.htm">Box2d</a> &amp;rect, float rx, float ry=0, bool modelUnit=true)</td></tr>
<tr class="memdesc:a41f57a5fb96feafaefc54ecc9d67daae"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制并填充圆角矩形，模型坐标或世界坐标  <a href="class_gi_graphics_a41f57a5fb96feafaefc54ecc9d67daae.htm#a41f57a5fb96feafaefc54ecc9d67daae">更多...</a><br /></td></tr>
<tr class="separator:a41f57a5fb96feafaefc54ecc9d67daae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d6db92dd164324e35902e5a4b968f1d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a7d6db92dd164324e35902e5a4b968f1d.htm#a7d6db92dd164324e35902e5a4b968f1d">drawHermiteSplines</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *knots, const <a class="el" href="class_vector2d.htm">Vector2d</a> *knotvs, bool closed=false, bool modelUnit=true)</td></tr>
<tr class="memdesc:a7d6db92dd164324e35902e5a4b968f1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制三次参数样条曲线(Hermite曲线)，模型坐标或世界坐标  <a href="class_gi_graphics_a7d6db92dd164324e35902e5a4b968f1d.htm#a7d6db92dd164324e35902e5a4b968f1d">更多...</a><br /></td></tr>
<tr class="separator:a7d6db92dd164324e35902e5a4b968f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae03224ad680e347765b922ed8dc0b90f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ae03224ad680e347765b922ed8dc0b90f.htm#ae03224ad680e347765b922ed8dc0b90f">drawBSplines</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *ctlpts, bool closed=false, bool modelUnit=true)</td></tr>
<tr class="memdesc:ae03224ad680e347765b922ed8dc0b90f"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制三次B样条曲线，模型坐标或世界坐标  <a href="class_gi_graphics_ae03224ad680e347765b922ed8dc0b90f.htm#ae03224ad680e347765b922ed8dc0b90f">更多...</a><br /></td></tr>
<tr class="separator:ae03224ad680e347765b922ed8dc0b90f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef157970b8d4261c6895898d52535f5c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aef157970b8d4261c6895898d52535f5c.htm#aef157970b8d4261c6895898d52535f5c">drawQuadSplines</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *ctlpts, bool closed=false, bool modelUnit=true)</td></tr>
<tr class="memdesc:aef157970b8d4261c6895898d52535f5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">绘制二次B样条曲线，模型坐标或世界坐标  <a href="class_gi_graphics_aef157970b8d4261c6895898d52535f5c.htm#aef157970b8d4261c6895898d52535f5c">更多...</a><br /></td></tr>
<tr class="separator:aef157970b8d4261c6895898d52535f5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7afcbaf37a4fe8dc1ef7dd13eef64b8f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a7afcbaf37a4fe8dc1ef7dd13eef64b8f.htm#a7afcbaf37a4fe8dc1ef7dd13eef64b8f">drawPath</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_mg_path.htm">MgPath</a> &amp;path, bool <a class="el" href="gigraph_8cpp_a8932679f27aab182b4419a5fd56a2a53.htm#a8932679f27aab182b4419a5fd56a2a53">fill</a>, bool modelUnit=true)</td></tr>
<tr class="memdesc:a7afcbaf37a4fe8dc1ef7dd13eef64b8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">显示路径对象  <a href="class_gi_graphics_a7afcbaf37a4fe8dc1ef7dd13eef64b8f.htm#a7afcbaf37a4fe8dc1ef7dd13eef64b8f">更多...</a><br /></td></tr>
<tr class="separator:a7afcbaf37a4fe8dc1ef7dd13eef64b8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80e0ef9bc6b6b04f371e1ae85f88abd9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a80e0ef9bc6b6b04f371e1ae85f88abd9.htm#a80e0ef9bc6b6b04f371e1ae85f88abd9">drawHandle</a> (const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt, int type, float angle=0, bool modelUnit=true)</td></tr>
<tr class="memdesc:a80e0ef9bc6b6b04f371e1ae85f88abd9"><td class="mdescLeft">&#160;</td><td class="mdescRight">在给定中心位置显示特殊符号  <a href="class_gi_graphics_a80e0ef9bc6b6b04f371e1ae85f88abd9.htm#a80e0ef9bc6b6b04f371e1ae85f88abd9">更多...</a><br /></td></tr>
<tr class="separator:a80e0ef9bc6b6b04f371e1ae85f88abd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59102c0c7e06acd71941551aac7f741d"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a59102c0c7e06acd71941551aac7f741d.htm#a59102c0c7e06acd71941551aac7f741d">drawTextAt</a> (int argb, const char *text, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt, float h, int align=1, float angle=0)</td></tr>
<tr class="memdesc:a59102c0c7e06acd71941551aac7f741d"><td class="mdescLeft">&#160;</td><td class="mdescRight">在给定模型坐标位置显示指定像素高的单行文本  <a href="class_gi_graphics_a59102c0c7e06acd71941551aac7f741d.htm#a59102c0c7e06acd71941551aac7f741d">更多...</a><br /></td></tr>
<tr class="separator:a59102c0c7e06acd71941551aac7f741d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cd7b377aa19f19e21a9e232367c4a6d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a9cd7b377aa19f19e21a9e232367c4a6d.htm#a9cd7b377aa19f19e21a9e232367c4a6d">beginPaint</a> (<a class="el" href="class_gi_canvas.htm">GiCanvas</a> *canvas, const <a class="el" href="mgbox_8h_a358d185d00982a138351e495f5298cf7.htm#a358d185d00982a138351e495f5298cf7">RECT_2D</a> &amp;clipBox=<a class="el" href="mgbox_8h_a358d185d00982a138351e495f5298cf7.htm#a358d185d00982a138351e495f5298cf7">RECT_2D</a>())</td></tr>
<tr class="memdesc:a9cd7b377aa19f19e21a9e232367c4a6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">在显示适配类的 <a class="el" href="class_gi_graphics_a9cd7b377aa19f19e21a9e232367c4a6d.htm#a9cd7b377aa19f19e21a9e232367c4a6d" title="在显示适配类的 beginPaint() 中调用 ">beginPaint()</a> 中调用  <a href="class_gi_graphics_a9cd7b377aa19f19e21a9e232367c4a6d.htm#a9cd7b377aa19f19e21a9e232367c4a6d">更多...</a><br /></td></tr>
<tr class="separator:a9cd7b377aa19f19e21a9e232367c4a6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50c43dd755019fecf919066a147d773b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a50c43dd755019fecf919066a147d773b.htm#a50c43dd755019fecf919066a147d773b">endPaint</a> ()</td></tr>
<tr class="memdesc:a50c43dd755019fecf919066a147d773b"><td class="mdescLeft">&#160;</td><td class="mdescRight">在显示适配类的 <a class="el" href="class_gi_graphics_a50c43dd755019fecf919066a147d773b.htm#a50c43dd755019fecf919066a147d773b" title="在显示适配类的 endPaint() 中调用 ">endPaint()</a> 中调用  <a href="class_gi_graphics_a50c43dd755019fecf919066a147d773b.htm#a50c43dd755019fecf919066a147d773b">更多...</a><br /></td></tr>
<tr class="separator:a50c43dd755019fecf919066a147d773b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b58aa5c43d1289d4bd0e9d1bcdd803f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_gi_canvas.htm">GiCanvas</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a8b58aa5c43d1289d4bd0e9d1bcdd803f.htm#a8b58aa5c43d1289d4bd0e9d1bcdd803f">getCanvas</a> ()</td></tr>
<tr class="memdesc:a8b58aa5c43d1289d4bd0e9d1bcdd803f"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回当前绘图画布对象  <a href="class_gi_graphics_a8b58aa5c43d1289d4bd0e9d1bcdd803f.htm#a8b58aa5c43d1289d4bd0e9d1bcdd803f">更多...</a><br /></td></tr>
<tr class="separator:a8b58aa5c43d1289d4bd0e9d1bcdd803f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5827e2dc3bf714cb70fc33814d2c30c0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_gi_transform.htm">GiTransform</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a5827e2dc3bf714cb70fc33814d2c30c0.htm#a5827e2dc3bf714cb70fc33814d2c30c0">_xf</a> ()</td></tr>
<tr class="memdesc:a5827e2dc3bf714cb70fc33814d2c30c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回坐标系管理对象  <a href="class_gi_graphics_a5827e2dc3bf714cb70fc33814d2c30c0.htm#a5827e2dc3bf714cb70fc33814d2c30c0">更多...</a><br /></td></tr>
<tr class="separator:a5827e2dc3bf714cb70fc33814d2c30c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04561798845bfc00678b4f8545c54347"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a04561798845bfc00678b4f8545c54347.htm#a04561798845bfc00678b4f8545c54347">rawLine</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, float x1, float y1, float x2, float y2)</td></tr>
<tr class="separator:a04561798845bfc00678b4f8545c54347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a908af19bbdde07c6f87b3b1917178eba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a908af19bbdde07c6f87b3b1917178eba.htm#a908af19bbdde07c6f87b3b1917178eba">rawLines</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> *pxs, int count)</td></tr>
<tr class="separator:a908af19bbdde07c6f87b3b1917178eba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2768a009e7bf8d751760675524fe1b92"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a2768a009e7bf8d751760675524fe1b92.htm#a2768a009e7bf8d751760675524fe1b92">rawBeziers</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> *pxs, int count, bool closed=false)</td></tr>
<tr class="separator:a2768a009e7bf8d751760675524fe1b92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab637d7f535408dbb5d6941925cd2f1e9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ab637d7f535408dbb5d6941925cd2f1e9.htm#ab637d7f535408dbb5d6941925cd2f1e9">rawPolygon</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_point2d.htm">Point2d</a> *pxs, int count)</td></tr>
<tr class="separator:ab637d7f535408dbb5d6941925cd2f1e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4a9b9e19ca838f5a7170803714247dd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ae4a9b9e19ca838f5a7170803714247dd.htm#ae4a9b9e19ca838f5a7170803714247dd">rawRect</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, float x, float y, float w, float h)</td></tr>
<tr class="separator:ae4a9b9e19ca838f5a7170803714247dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a625ab1731bc62b55848eedeb71fcd5a5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a625ab1731bc62b55848eedeb71fcd5a5.htm#a625ab1731bc62b55848eedeb71fcd5a5">rawEllipse</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, float x, float y, float w, float h)</td></tr>
<tr class="separator:a625ab1731bc62b55848eedeb71fcd5a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabdd62bf8f7f0c38daa25c1d4cc7be04"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aabdd62bf8f7f0c38daa25c1d4cc7be04.htm#aabdd62bf8f7f0c38daa25c1d4cc7be04">rawBeginPath</a> ()</td></tr>
<tr class="separator:aabdd62bf8f7f0c38daa25c1d4cc7be04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a481c881a5c4d789bb9f5c55809d2520d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a481c881a5c4d789bb9f5c55809d2520d.htm#a481c881a5c4d789bb9f5c55809d2520d">rawEndPath</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, bool <a class="el" href="gigraph_8cpp_a8932679f27aab182b4419a5fd56a2a53.htm#a8932679f27aab182b4419a5fd56a2a53">fill</a>)</td></tr>
<tr class="separator:a481c881a5c4d789bb9f5c55809d2520d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b9f1bd3f4637d67406d836e394c31a3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a2b9f1bd3f4637d67406d836e394c31a3.htm#a2b9f1bd3f4637d67406d836e394c31a3">rawMoveTo</a> (float x, float y)</td></tr>
<tr class="separator:a2b9f1bd3f4637d67406d836e394c31a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf7570fd310a8d72c72bd9c7abb6d444"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_abf7570fd310a8d72c72bd9c7abb6d444.htm#abf7570fd310a8d72c72bd9c7abb6d444">rawLineTo</a> (float x, float y)</td></tr>
<tr class="separator:abf7570fd310a8d72c72bd9c7abb6d444"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10843d36eb87c0c68d15bd31f7311915"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a10843d36eb87c0c68d15bd31f7311915.htm#a10843d36eb87c0c68d15bd31f7311915">rawBezierTo</a> (float c1x, float c1y, float c2x, float c2y, float x, float y)</td></tr>
<tr class="separator:a10843d36eb87c0c68d15bd31f7311915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ae9eeefc6c0ec06fbcc7d878969ffc5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a5ae9eeefc6c0ec06fbcc7d878969ffc5.htm#a5ae9eeefc6c0ec06fbcc7d878969ffc5">rawQuadTo</a> (float cpx, float cpy, float x, float y)</td></tr>
<tr class="separator:a5ae9eeefc6c0ec06fbcc7d878969ffc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4d7c8ae28135b586e4a4b2b687e0ce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_adf4d7c8ae28135b586e4a4b2b687e0ce.htm#adf4d7c8ae28135b586e4a4b2b687e0ce">rawClosePath</a> ()</td></tr>
<tr class="separator:adf4d7c8ae28135b586e4a4b2b687e0ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98b57b0e1f8c8468544912e11208e6f4"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a98b57b0e1f8c8468544912e11208e6f4.htm#a98b57b0e1f8c8468544912e11208e6f4">rawText</a> (const char *text, float x, float y, float h, int align=1)</td></tr>
<tr class="separator:a98b57b0e1f8c8468544912e11208e6f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef3cf0b8e1161af3578bd748e31bc281"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aef3cf0b8e1161af3578bd748e31bc281.htm#aef3cf0b8e1161af3578bd748e31bc281">rawImage</a> (const char *name, float xc, float yc, float w, float h, float angle)</td></tr>
<tr class="separator:aef3cf0b8e1161af3578bd748e31bc281"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa81d22742f62d6cad9805dbcee5fc26b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aa81d22742f62d6cad9805dbcee5fc26b.htm#aa81d22742f62d6cad9805dbcee5fc26b">beginShape</a> (int type, int sid, int version, float x, float y, float w, float h)</td></tr>
<tr class="separator:aa81d22742f62d6cad9805dbcee5fc26b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef183122d1aa7247bc0979dfd50d56b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_aef183122d1aa7247bc0979dfd50d56b7.htm#aef183122d1aa7247bc0979dfd50d56b7">endShape</a> (int type, int sid, float x, float y)</td></tr>
<tr class="separator:aef183122d1aa7247bc0979dfd50d56b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63657c6769ea38080e5563a59b217baf"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a63657c6769ea38080e5563a59b217baf.htm#a63657c6769ea38080e5563a59b217baf">drawTextAt</a> (<a class="el" href="struct_gi_text_width_callback.htm">GiTextWidthCallback</a> *c, int argb, const char *text, const <a class="el" href="class_point2d.htm">Point2d</a> &amp;pnt, float h, int align=1, float angle=0)</td></tr>
<tr class="separator:a63657c6769ea38080e5563a59b217baf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
静态 Public 成员函数</h2></td></tr>
<tr class="memitem:affc3e40d230a745223a996b40f2fc7e3"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_gi_graphics.htm">GiGraphics</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_affc3e40d230a745223a996b40f2fc7e3.htm#affc3e40d230a745223a996b40f2fc7e3">fromHandle</a> (long h)</td></tr>
<tr class="memdesc:affc3e40d230a745223a996b40f2fc7e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">转为对象  <a href="class_gi_graphics_affc3e40d230a745223a996b40f2fc7e3.htm#affc3e40d230a745223a996b40f2fc7e3">更多...</a><br /></td></tr>
<tr class="separator:affc3e40d230a745223a996b40f2fc7e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e352b24c530704340f18195511324de"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a1e352b24c530704340f18195511324de.htm#a1e352b24c530704340f18195511324de">setPenWidthFactor</a> (float factor)</td></tr>
<tr class="memdesc:a1e352b24c530704340f18195511324de"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置像素线宽的放大系数  <a href="class_gi_graphics_a1e352b24c530704340f18195511324de.htm#a1e352b24c530704340f18195511324de">更多...</a><br /></td></tr>
<tr class="separator:a1e352b24c530704340f18195511324de"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private 成员函数</h2></td></tr>
<tr class="memitem:a4c1846a4cbdfae87a7e8e433e60d5702"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a4c1846a4cbdfae87a7e8e433e60d5702.htm#a4c1846a4cbdfae87a7e8e433e60d5702">setPen</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx)</td></tr>
<tr class="separator:a4c1846a4cbdfae87a7e8e433e60d5702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4e36a2a9f9129a1f6a5aa59411a9242"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_ae4e36a2a9f9129a1f6a5aa59411a9242.htm#ae4e36a2a9f9129a1f6a5aa59411a9242">setBrush</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx)</td></tr>
<tr class="separator:ae4e36a2a9f9129a1f6a5aa59411a9242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79bba92c411d5ed7a01559b6c5eaaf93"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a79bba92c411d5ed7a01559b6c5eaaf93.htm#a79bba92c411d5ed7a01559b6c5eaaf93">_drawPolygon</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int count, const <a class="el" href="class_point2d.htm">Point2d</a> *points, bool m2d, bool <a class="el" href="gigraph_8cpp_a8932679f27aab182b4419a5fd56a2a53.htm#a8932679f27aab182b4419a5fd56a2a53">fill</a>, bool edge, bool modelUnit)</td></tr>
<tr class="separator:a79bba92c411d5ed7a01559b6c5eaaf93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a316d7acb0e11753fdb373ec02e74a9dc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a316d7acb0e11753fdb373ec02e74a9dc.htm#a316d7acb0e11753fdb373ec02e74a9dc">drawPathWithArrayHead</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> &amp;ctx, <a class="el" href="class_mg_path.htm">MgPath</a> &amp;path, int startArray, int endArray)</td></tr>
<tr class="separator:a316d7acb0e11753fdb373ec02e74a9dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20171f704ca9c1d0ebfdce929f8aa6f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a20171f704ca9c1d0ebfdce929f8aa6f5.htm#a20171f704ca9c1d0ebfdce929f8aa6f5">drawArrayHead</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> &amp;ctx, <a class="el" href="class_mg_path.htm">MgPath</a> &amp;path, int type, float px, float scale)</td></tr>
<tr class="separator:a20171f704ca9c1d0ebfdce929f8aa6f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdbdf28bd207c62dc799f46a0b9ded80"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_afdbdf28bd207c62dc799f46a0b9ded80.htm#afdbdf28bd207c62dc799f46a0b9ded80">drawPath_</a> (const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, const <a class="el" href="class_mg_path.htm">MgPath</a> &amp;path, bool <a class="el" href="gigraph_8cpp_a8932679f27aab182b4419a5fd56a2a53.htm#a8932679f27aab182b4419a5fd56a2a53">fill</a>, const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;matD)</td></tr>
<tr class="separator:afdbdf28bd207c62dc799f46a0b9ded80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ea8ba7057a5e64cc069acb9b3d42a1b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_gi_graphics.htm">GiGraphics</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a8ea8ba7057a5e64cc069acb9b3d42a1b.htm#a8ea8ba7057a5e64cc069acb9b3d42a1b">operator=</a> (const <a class="el" href="class_gi_graphics.htm">GiGraphics</a> &amp;)</td></tr>
<tr class="separator:a8ea8ba7057a5e64cc069acb9b3d42a1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private 属性</h2></td></tr>
<tr class="memitem:a5670bd0a32c06d21a2838ae30434f44b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_gi_graphics_impl.htm">GiGraphicsImpl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_gi_graphics_a5670bd0a32c06d21a2838ae30434f44b.htm#a5670bd0a32c06d21a2838ae30434f44b">m_impl</a></td></tr>
<tr class="memdesc:a5670bd0a32c06d21a2838ae30434f44b"><td class="mdescLeft">&#160;</td><td class="mdescRight">内部实现  <a href="class_gi_graphics_a5670bd0a32c06d21a2838ae30434f44b.htm#a5670bd0a32c06d21a2838ae30434f44b">更多...</a><br /></td></tr>
<tr class="separator:a5670bd0a32c06d21a2838ae30434f44b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">详细描述</h2>
<div class="textblock"><p>图形系统类 </p>
<p>本类用于显示各种图形，图元显示原语由外部的 <a class="el" href="class_gi_canvas.htm" title="Canvas callback interface device-dependent. ">GiCanvas</a> 实现类来实现。 显示图形所用的坐标计算和坐标系转换是在 <a class="el" href="class_gi_transform.htm" title="坐标系管理类 ">GiTransform</a> 中定义的。 </p>
</div><hr/>该类的文档由以下文件生成:<ul>
<li><a class="el" href="gigraph_8h.htm">gigraph.h</a></li>
<li><a class="el" href="gigraph_8cpp.htm">gigraph.cpp</a></li>
</ul>
</div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>