<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: 成员列表</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">mgcurv 成员列表</div>  </div>
</div><!--header-->
<div class="contents">

<p>成员的完整列表，这些成员属于 <a class="el" href="structmgcurv.htm">mgcurv</a>,包括所有继承而来的类成员</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_ab17fc14988cc87ec3547e568ff3abb25.htm#ab17fc14988cc87ec3547e568ff3abb25">arc3P</a>(const Point2d &amp;start, const Point2d &amp;point, const Point2d &amp;end, Point2d &amp;center, float &amp;radius, float *startAngle=(float *) 0, float *sweepAngle=(float *) 0)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a7a2db45daa676f99095377f68549c813.htm#a7a2db45daa676f99095377f68549c813">arcBulge</a>(const Point2d &amp;start, const Point2d &amp;end, float bulge, Point2d &amp;center, float &amp;radius, float *startAngle=(float *) 0, float *sweepAngle=(float *) 0)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a85fb4af2207f791118e61e6cc94a69ab.htm#a85fb4af2207f791118e61e6cc94a69ab">arcTan</a>(const Point2d &amp;start, const Point2d &amp;end, const Vector2d &amp;startTan, Point2d &amp;center, float &amp;radius, float *startAngle=(float *) 0, float *sweepAngle=(float *) 0)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a708f2587d39724f1fbe99908e50e9556.htm#a708f2587d39724f1fbe99908e50e9556">arcToBezier</a>(Point2d points[16], const Point2d &amp;center, float rx, float ry, float startAngle, float sweepAngle)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_adea02b77231b753aefa6a573f42a0a49.htm#adea02b77231b753aefa6a573f42a0a49">bezier4P</a>(const Point2d &amp;pt1, const Point2d &amp;pt2, const Point2d &amp;pt3, const Point2d &amp;pt4, Point2d &amp;ctrpt1, Point2d &amp;ctrpt2)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a94c201efaf4713165f525d1a3e558bfd.htm#a94c201efaf4713165f525d1a3e558bfd">bezierIntersectionWithLine</a>(const Point2d *pts, const Point2d &amp;a, const Point2d &amp;b, float &amp;tIntersect)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a5f02025a4f463db26a517df68dce63e5.htm#a5f02025a4f463db26a517df68dce63e5">bezierIsStraight</a>(const Point2d *pts)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a72077d77da577ed5c516916a2dc4ceea.htm#a72077d77da577ed5c516916a2dc4ceea">bezierPointDistantFromPoint</a>(const Point2d *pts, float dist, const Point2d &amp;pt, Point2d &amp;result, float &amp;tRes)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_ad4bf5c596e530b6675e9016add53860a.htm#ad4bf5c596e530b6675e9016add53860a">bezierPointLengthFromStart</a>(const Point2d *pts, float len)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a51712aa4257a7146d889fa035d35be93.htm#a51712aa4257a7146d889fa035d35be93">bezierTanget</a>(const Point2d *pts, float t, Point2d &amp;outpt)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a9ea1a0bb85c14b153520cf0956907551.htm#a9ea1a0bb85c14b153520cf0956907551">bsplinesToBeziers</a>(Point2d points[], int n, const Point2d *ctlpts, bool closed)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a82937b79bc2436f031da9ec28216a22e.htm#a82937b79bc2436f031da9ec28216a22e">crossLineCircle</a>(Point2d &amp;pt1, Point2d &amp;pt2, const Point2d &amp;a, const Point2d &amp;b, const Point2d &amp;c, float r, bool ray=false)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_aa9de349d0cb3809aaa830b4632867668.htm#aa9de349d0cb3809aaa830b4632867668">crossTwoCircles</a>(Point2d &amp;pt1, Point2d &amp;pt2, const Point2d &amp;c1, float r1, const Point2d &amp;c2, float r2)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a88290162cdb0fe1e34d9a2f29344e501.htm#a88290162cdb0fe1e34d9a2f29344e501a1a076cc80f96f9881427b4de7153db31">cubicArm1</a> 枚举值</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a88290162cdb0fe1e34d9a2f29344e501.htm#a88290162cdb0fe1e34d9a2f29344e501ad05271ec9837e299e22dcd75adcc6e6e">cubicArm2</a> 枚举值</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a88290162cdb0fe1e34d9a2f29344e501.htm#a88290162cdb0fe1e34d9a2f29344e501a9be6ff93f889f1b0b307231022219937">cubicLoop</a> 枚举值</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a74572d2f92d45d1fc8e24fa2b0e3dd24.htm#a74572d2f92d45d1fc8e24fa2b0e3dd24">cubicSplines</a>(int n, const Point2d *knots, Vector2d *knotvs, int flag=0, float tension=1)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a008b68d3b4fb01fd54ff4355f3f0005e.htm#a008b68d3b4fb01fd54ff4355f3f0005e">cubicSplineToBezier</a>(int n, const Point2d *knots, const Vector2d *knotvs, int i, Point2d points[4], bool hermite=true)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a88290162cdb0fe1e34d9a2f29344e501.htm#a88290162cdb0fe1e34d9a2f29344e501a4b2fe7ac0312ecd94f38599ee9d2bf2b">cubicTan1</a> 枚举值</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a88290162cdb0fe1e34d9a2f29344e501.htm#a88290162cdb0fe1e34d9a2f29344e501a7f48d6c52812ab8e38dfd90cec963caf">cubicTan2</a> 枚举值</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a75e7487445ad3f0496954b7f82598af6.htm#a75e7487445ad3f0496954b7f82598af6">ellipse90ToBezier</a>(const Point2d &amp;frompt, const Point2d &amp;topt, Point2d &amp;ctrpt1, Point2d &amp;ctrpt2)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a294da1f7ba08cff390eeda3dca63a9e0.htm#a294da1f7ba08cff390eeda3dca63a9e0">ellipseToBezier</a>(Point2d points[13], const Point2d &amp;center, float rx, float ry)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_ad06dd5cd71032c816dff10a50abc1ff6.htm#ad06dd5cd71032c816dff10a50abc1ff6">fitBezier</a>(const Point2d *pts, float t, Point2d &amp;fitpt)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a3e2edb49121a3b49dbfe78549bbae0a3.htm#a3e2edb49121a3b49dbfe78549bbae0a3">FitCubicCallback</a> typedef</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a151a1cc750c2c4efb64ab296241445aa.htm#a151a1cc750c2c4efb64ab296241445aa">fitCubicSpline</a>(int n, const Point2d *knots, const Vector2d *knotvs, int i, float t, Point2d &amp;fitpt)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a11c008d990e8d678fcf924f8bd8660b4.htm#a11c008d990e8d678fcf924f8bd8660b4">fitCurve</a>(int knotCount, Point2d *knots, Vector2d *knotvs, int count, const Point2d *pts, float tol)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a5026e878c1a5e5efb13653e588d4ffa6.htm#a5026e878c1a5e5efb13653e588d4ffa6">fitCurve2</a>(int knotCount, Point2d *knots, int count, PtCallback pts, void *data, float tol)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a65a5a0448f4a7b5093f7dafc1e07e458.htm#a65a5a0448f4a7b5093f7dafc1e07e458">fitCurve3</a>(FitCubicCallback fc, void *data, const Point2d *pts, int n, float tol)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_ab62130251c0a2a6b7d399167b5cdf5af.htm#ab62130251c0a2a6b7d399167b5cdf5af">fitCurve4</a>(FitCubicCallback fc, void *data, PtCallback pts, void *data2, int n, float tol)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a7f3615a83c88c1b013da636508b2b5b1.htm#a7f3615a83c88c1b013da636508b2b5b1">gaussJordan</a>(int n, float *mat, Vector2d *vs)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a98394c91a61cac15a2fb8a236b3cf0f1.htm#a98394c91a61cac15a2fb8a236b3cf0f1">lengthOfBezier</a>(const Point2d *pts)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a893245a8dd743e9a182425ae3b30764f.htm#a893245a8dd743e9a182425ae3b30764f">PtCallback</a> typedef</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a21dfd032cd49dca4c8b5081ba0c82a92.htm#a21dfd032cd49dca4c8b5081ba0c82a92">quadBezierToCubic</a>(const Point2d quad[3], Point2d cubic[4])</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a6c36aae4851316b65beb66ae83e5d8ac.htm#a6c36aae4851316b65beb66ae83e5d8ac">roundRectToBeziers</a>(Point2d points[16], const Box2d &amp;rect, float rx, float ry)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_a88290162cdb0fe1e34d9a2f29344e501.htm#a88290162cdb0fe1e34d9a2f29344e501">SplineFlags</a> 枚举名称</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="structmgcurv_a34249f6525561a3750b9369b1555a73b.htm#a34249f6525561a3750b9369b1555a73b">splitBezier</a>(const Point2d *pts, float t, Point2d *pts1, Point2d *pts2)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="structmgcurv_afcf3c55165435c40217009f1c3b5f894.htm#afcf3c55165435c40217009f1c3b5f894">triEquations</a>(int n, float *a, float *b, float *c, Vector2d *vs)</td><td class="entry"><a class="el" href="structmgcurv.htm">mgcurv</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
</table></div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>