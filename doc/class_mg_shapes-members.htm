<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: 成员列表</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">MgShapes 成员列表</div>  </div>
</div><!--header-->
<div class="contents">

<p>成员的完整列表，这些成员属于 <a class="el" href="class_mg_shapes.htm">MgShapes</a>,包括所有继承而来的类成员</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a059dbe7ff09d35bf3c3c60a53484be50.htm#a059dbe7ff09d35bf3c3c60a53484be50">addRef</a>()</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a1e0fc90c6b8de59d02c0e8f171854346.htm#a1e0fc90c6b8de59d02c0e8f171854346">addShape</a>(const MgShape &amp;src)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a363d1799bc57458c4bbea8c2fdf79643.htm#a363d1799bc57458c4bbea8c2fdf79643">addShapeDirect</a>(MgShape *shape, bool force=true)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_ad9a144722eaddeb78f0bc718bf640119.htm#ad9a144722eaddeb78f0bc718bf640119">bringToBack</a>(int sid)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a72e1fb5b6d162a81c2b61e4fc5fdab17.htm#a72e1fb5b6d162a81c2b61e4fc5fdab17">bringToFront</a>(int sid)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_acc88ab9f382d8a39b28c3af5dd5706bc.htm#acc88ab9f382d8a39b28c3af5dd5706bc">bringToIndex</a>(int sid, int index)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a75ec606edffdde8f1ce5ecc722d1ad04.htm#a75ec606edffdde8f1ce5ecc722d1ad04">clear</a>()</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_ae1e43003b9030c2f41757d1a659b2639.htm#ae1e43003b9030c2f41757d1a659b2639">clearCachedData</a>()</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a38892b459fa2a2b672e6c324addfadb5.htm#a38892b459fa2a2b672e6c324addfadb5">clone</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a33dabc24057176a4a4a579671de839c9.htm#a33dabc24057176a4a4a579671de839c9">cloneShape</a>(int sid) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a5ecb00265735ee216cc44f21768e9242.htm#a5ecb00265735ee216cc44f21768e9242">cloneShapes</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a4b222ea1231c87d37412441156590d60.htm#a4b222ea1231c87d37412441156590d60">copy</a>(const MgObject &amp;src)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a8e95a307cc05c18d356a4e7950cf95b8.htm#a8e95a307cc05c18d356a4e7950cf95b8">copyShapes</a>(const MgShapes *src, bool deeply=true, bool needClear=true)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_addcf0061cc175690237a3627f8cefd26.htm#addcf0061cc175690237a3627f8cefd26">copyShapesTo</a>(MgShapes *dest) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_ad12a5c93925cbe794718b1594de3958c.htm#ad12a5c93925cbe794718b1594de3958c">create</a>(MgObject *owner=(MgObject *) 0, int index=-1)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_aa1b2987790e66ddd3684ae2753429b0a.htm#aa1b2987790e66ddd3684ae2753429b0a">draw</a>(GiGraphics &amp;gs, const GiContext *ctx=(const GiContext *) 0) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_ab26334d45bfb537c3f0dc492781c9924.htm#ab26334d45bfb537c3f0dc492781c9924">dyndraw</a>(int mode, GiGraphics &amp;gs, const GiContext *ctx, int segment, const int *ignoreIds=(const int *) 0) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_ae9e38cdc77580841fd9ff798db064b3c.htm#ae9e38cdc77580841fd9ff798db064b3c">equals</a>(const MgObject &amp;src) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_afc54f09ff1f1400c656a49684390ca41.htm#afc54f09ff1f1400c656a49684390ca41">Filter</a> typedef</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_aefe424ca568002bd076936fcba3c9744.htm#aefe424ca568002bd076936fcba3c9744">findShape</a>(int sid) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a70697aa7414f1a82825c85e7fc0c13d9.htm#a70697aa7414f1a82825c85e7fc0c13d9">findShapeByTag</a>(int tag) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_afb6258f0250d2d506feef00511a7f22d.htm#afb6258f0250d2d506feef00511a7f22d">findShapeByType</a>(int type) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_adeda365ad7c5025e794c7a57ae1a8ef9.htm#adeda365ad7c5025e794c7a57ae1a8ef9">findShapeByTypeAndTag</a>(int type, int tag) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a9955a9a9f42dbccfb81a171ff3bb9f69.htm#a9955a9a9f42dbccfb81a171ff3bb9f69">freeIterator</a>(void *&amp;it) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_af1fab288ddc761c46e96851da5ac0feb.htm#af1fab288ddc761c46e96851da5ac0feb">fromHandle</a>(long h)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_ad12a2ed4e6cbe62e2784525d44674f20.htm#ad12a2ed4e6cbe62e2784525d44674f20">getExtent</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_ac318be8a1abd33700fdd2ea76641a78f.htm#ac318be8a1abd33700fdd2ea76641a78f">getFirstShape</a>(void *&amp;it) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a4e5005aa77c3f2f1a3cc9a397e2b127f.htm#a4e5005aa77c3f2f1a3cc9a397e2b127f">getHeadShape</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a7e84251683392edfc5639fb7c4704c6a.htm#a7e84251683392edfc5639fb7c4704c6a">getIndex</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a488fbdbd1bc9c58cdc38d4d815fbc170.htm#a488fbdbd1bc9c58cdc38d4d815fbc170">getLastShape</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a422bee3e64baf3316bc60d5dc6cc55cd.htm#a422bee3e64baf3316bc60d5dc6cc55cd">getNextShape</a>(void *&amp;it) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a57c72d17530b7c617df2cbf8c744cd9c.htm#a57c72d17530b7c617df2cbf8c744cd9c">getOwner</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a064c1cc8f7a8e89b6f1bd04f8c411db4.htm#a064c1cc8f7a8e89b6f1bd04f8c411db4">getParentShape</a>(const MgShape *shape)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a4a10fcd210e8890bbf94b98ef0bd9e46.htm#a4a10fcd210e8890bbf94b98ef0bd9e46">getShapeAtIndex</a>(int index) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_abb1c27e41795f62e88b611afd838d7ac.htm#abb1c27e41795f62e88b611afd838d7ac">getShapeCount</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a968eb8d3e1c9c4cfd3a10d4e0c87fa56.htm#a968eb8d3e1c9c4cfd3a10d4e0c87fa56">getShapeCountByTypeOrTag</a>(int type, int tag) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a3d52d490bd58320524c10802f20b8abe.htm#a3d52d490bd58320524c10802f20b8abe">getShapeIndex</a>(int sid) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a71b594e5a5bf637d901c797e64ff7681.htm#a71b594e5a5bf637d901c797e64ff7681">getType</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a878f2add37dd26b411f01fcc2ef7a742.htm#a878f2add37dd26b411f01fcc2ef7a742">hitTest</a>(const Box2d &amp;limits, MgHitResult &amp;res, Filter filter=(Filter) 0, void *data=(void *) 0) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a577f51610c3714572109edaa0978d769.htm#a577f51610c3714572109edaa0978d769">im</a></td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a44b2d6f3c199e81085191136f78b9b23.htm#a44b2d6f3c199e81085191136f78b9b23">isKindOf</a>(int type) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a95250a79258f4ba2798de32cedb1b094.htm#a95250a79258f4ba2798de32cedb1b094">load</a>(MgShapeFactory *factory, MgStorage *s, bool addOnly=false)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a3f66bcab51fcdf351e1e8a67b2446f70.htm#a3f66bcab51fcdf351e1e8a67b2446f70">loadExtra</a>(MgStorage *s)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a2b3052cd9c95cd31e3f3831d0d401a30.htm#a2b3052cd9c95cd31e3f3831d0d401a30">MgShapes</a>(MgObject *owner, int index)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_aa8beb26287e83fb7c99987d23254c525.htm#aa8beb26287e83fb7c99987d23254c525">moveShapeTo</a>(int sid, MgShapes *dest)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_object_a7275ce22b52bab62a7331471e2ab0a0d.htm#a7275ce22b52bab62a7331471e2ab0a0d">operator!=</a>(const MgObject &amp;src) const</td><td class="entry"><a class="el" href="class_mg_object.htm">MgObject</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_object_a488ef143ee9edfd5daef6a7fe2d72179.htm#a488ef143ee9edfd5daef6a7fe2d72179">operator=</a>(const MgObject &amp;src)</td><td class="entry"><a class="el" href="class_mg_object.htm">MgObject</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_object_a39beb9ae60c954540c67580e17816618.htm#a39beb9ae60c954540c67580e17816618">operator==</a>(const MgObject &amp;src) const</td><td class="entry"><a class="el" href="class_mg_object.htm">MgObject</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a7e978c0c2d6c70089c59f0447b3021cd.htm#a7e978c0c2d6c70089c59f0447b3021cd">release</a>()</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_object_acdb0a8b9516dda55cfb5e458bf8bb04c.htm#acdb0a8b9516dda55cfb5e458bf8bb04c">release_pointer</a>(T *&amp;p)</td><td class="entry"><a class="el" href="class_mg_object.htm">MgObject</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a1e37befdcdf955d40a82615c7cfcae21.htm#a1e37befdcdf955d40a82615c7cfcae21">removeShape</a>(int sid)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_ab8d54841720d4105ab5dfa11c1b5d683.htm#ab8d54841720d4105ab5dfa11c1b5d683">reorderShapes</a>(int n, const int *ids)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a09c6ffbd65a5b97f504137967c94a036.htm#a09c6ffbd65a5b97f504137967c94a036">save</a>(MgStorage *s, int startIndex=0) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_af3dac5b62872ab4b22e0e99de3453b20.htm#af3dac5b62872ab4b22e0e99de3453b20">saveExtra</a>(MgStorage *s) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a73d6aeb545f8341b5cbe1f07fedcf6ff.htm#a73d6aeb545f8341b5cbe1f07fedcf6ff">saveShape</a>(MgStorage *s, const MgShape *shape, int index) const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a41b29c48d2ea8c331925b1d6153abb55.htm#a41b29c48d2ea8c331925b1d6153abb55">setNewShapeID</a>(int sid)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a13d76dccaa0c6f742a93b072f7fb9f20.htm#a13d76dccaa0c6f742a93b072f7fb9f20">shallowCopy</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a042a674f8d186a8dcb6881115206e184.htm#a042a674f8d186a8dcb6881115206e184">toHandle</a>() const</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_af0ecbf81c3b366810b327d19a998001f.htm#af0ecbf81c3b366810b327d19a998001f">transform</a>(const Matrix2d &amp;mat)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_af7bbfba26954507bbdbd43f0ce5c8bb6.htm#af7bbfba26954507bbdbd43f0ce5c8bb6">traverseByType</a>(int type, void(*c)(const MgShape *, void *), void *d)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a7ce6b979cb91cfe6a1a3052a13bcd50b.htm#a7ce6b979cb91cfe6a1a3052a13bcd50b">Type</a>()</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_shapes_a86143c6e43602fa885e6bb2f7b32b309.htm#a86143c6e43602fa885e6bb2f7b32b309">updateShape</a>(MgShape *shape, bool force=true)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a86c733fa37f5dfc2e55fd1c15c93d413.htm#a86c733fa37f5dfc2e55fd1c15c93d413">updateShape</a>(const MgShape *&amp;oldsp, MgShape *newsp)</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="class_mg_object_a9318d93043fc20f4233cc4eb9f7fe38b.htm#a9318d93043fc20f4233cc4eb9f7fe38b">~MgObject</a>()</td><td class="entry"><a class="el" href="class_mg_object.htm">MgObject</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="class_mg_shapes_a1f9768c14e67429271846762fe480400.htm#a1f9768c14e67429271846762fe480400">~MgShapes</a>()</td><td class="entry"><a class="el" href="class_mg_shapes.htm">MgShapes</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>