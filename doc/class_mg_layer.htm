<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TouchVG framework: MgLayer类 参考</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TouchVG framework
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- 制作者 Doxygen 1.8.13 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',false,false,'search.php','搜索');
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public 成员函数</a> &#124;
<a href="#pub-static-methods">静态 Public 成员函数</a> &#124;
<a href="#pro-methods">Protected 成员函数</a> &#124;
<a href="#pri-attribs">Private 属性</a> &#124;
<a href="class_mg_layer-members.htm">所有成员列表</a>  </div>
  <div class="headertitle">
<div class="title">MgLayer类 参考<div class="ingroups"><a class="el" href="group___c_o_r_e___s_h_a_p_e.htm">图形实体类</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>图层类  
 <a href="class_mg_layer.htm#details">更多...</a></p>

<p><code>#include &lt;mglayer.h&gt;</code></p>
<div class="dynheader">
类 MgLayer 继承关系图:</div>
<div class="dyncontent">
<div class="center"><img src="class_mg_layer__inherit__graph.png" border="0" usemap="#_mg_layer_inherit__map" alt="Inheritance graph"/></div>
<map name="_mg_layer_inherit__map" id="_mg_layer_inherit__map">
<area shape="rect" id="node2" href="class_mg_shapes.htm" title="图形列表类 " alt="" coords="5,273,220,592"/>
<area shape="rect" id="node3" href="class_mg_object.htm" title="图形对象基类 " alt="" coords="46,5,180,225"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public 成员函数</h2></td></tr>
<tr class="memitem:aa558d5420662c11c81bcde773b76042c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_layer.htm">MgLayer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_aa558d5420662c11c81bcde773b76042c.htm#aa558d5420662c11c81bcde773b76042c">cloneLayer</a> () const</td></tr>
<tr class="memdesc:aa558d5420662c11c81bcde773b76042c"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制出一个新图层对象  <a href="class_mg_layer_aa558d5420662c11c81bcde773b76042c.htm#aa558d5420662c11c81bcde773b76042c">更多...</a><br /></td></tr>
<tr class="separator:aa558d5420662c11c81bcde773b76042c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5741bc4fff56c86718e4205fa3373568"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_shape_doc.htm">MgShapeDoc</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a5741bc4fff56c86718e4205fa3373568.htm#a5741bc4fff56c86718e4205fa3373568">doc</a> () const</td></tr>
<tr class="memdesc:a5741bc4fff56c86718e4205fa3373568"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回所属文档对象  <a href="class_mg_layer_a5741bc4fff56c86718e4205fa3373568.htm#a5741bc4fff56c86718e4205fa3373568">更多...</a><br /></td></tr>
<tr class="separator:a5741bc4fff56c86718e4205fa3373568"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8386d6296783d9150169743c2910b7f1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a8386d6296783d9150169743c2910b7f1.htm#a8386d6296783d9150169743c2910b7f1">isHided</a> () const</td></tr>
<tr class="memdesc:a8386d6296783d9150169743c2910b7f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回图层是否隐藏  <a href="class_mg_layer_a8386d6296783d9150169743c2910b7f1.htm#a8386d6296783d9150169743c2910b7f1">更多...</a><br /></td></tr>
<tr class="separator:a8386d6296783d9150169743c2910b7f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cb4b9eb78d21deeb5874ac3dce81649"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a0cb4b9eb78d21deeb5874ac3dce81649.htm#a0cb4b9eb78d21deeb5874ac3dce81649">setHided</a> (bool <a class="el" href="class_mg_layer_ac8b28c395c932a77096b95b7d3829f74.htm#ac8b28c395c932a77096b95b7d3829f74">hided</a>)</td></tr>
<tr class="memdesc:a0cb4b9eb78d21deeb5874ac3dce81649"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置图层是否隐藏  <a href="class_mg_layer_a0cb4b9eb78d21deeb5874ac3dce81649.htm#a0cb4b9eb78d21deeb5874ac3dce81649">更多...</a><br /></td></tr>
<tr class="separator:a0cb4b9eb78d21deeb5874ac3dce81649"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c5c2494a28ff754a1283d11dae2b64d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a0c5c2494a28ff754a1283d11dae2b64d.htm#a0c5c2494a28ff754a1283d11dae2b64d">isLocked</a> () const</td></tr>
<tr class="memdesc:a0c5c2494a28ff754a1283d11dae2b64d"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回图层是否锁定  <a href="class_mg_layer_a0c5c2494a28ff754a1283d11dae2b64d.htm#a0c5c2494a28ff754a1283d11dae2b64d">更多...</a><br /></td></tr>
<tr class="separator:a0c5c2494a28ff754a1283d11dae2b64d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba17e13a98bd517901ba17dffbe9695c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_aba17e13a98bd517901ba17dffbe9695c.htm#aba17e13a98bd517901ba17dffbe9695c">setLocked</a> (bool <a class="el" href="class_mg_layer_a65ffaffcfae916dfff59a654f75b947a.htm#a65ffaffcfae916dfff59a654f75b947a">locked</a>)</td></tr>
<tr class="memdesc:aba17e13a98bd517901ba17dffbe9695c"><td class="mdescLeft">&#160;</td><td class="mdescRight">设置图层是否锁定  <a href="class_mg_layer_aba17e13a98bd517901ba17dffbe9695c.htm#aba17e13a98bd517901ba17dffbe9695c">更多...</a><br /></td></tr>
<tr class="separator:aba17e13a98bd517901ba17dffbe9695c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b0237d7861777d798bd8df629f61cb3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_mg_object.htm">MgObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a5b0237d7861777d798bd8df629f61cb3.htm#a5b0237d7861777d798bd8df629f61cb3">clone</a> () const</td></tr>
<tr class="memdesc:a5b0237d7861777d798bd8df629f61cb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制出一个新对象  <a href="class_mg_layer_a5b0237d7861777d798bd8df629f61cb3.htm#a5b0237d7861777d798bd8df629f61cb3">更多...</a><br /></td></tr>
<tr class="separator:a5b0237d7861777d798bd8df629f61cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa385e4fc73c89af68710d0f18e0cb4a4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_aa385e4fc73c89af68710d0f18e0cb4a4.htm#aa385e4fc73c89af68710d0f18e0cb4a4">copy</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src)</td></tr>
<tr class="memdesc:aa385e4fc73c89af68710d0f18e0cb4a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制对象数据  <a href="class_mg_layer_aa385e4fc73c89af68710d0f18e0cb4a4.htm#aa385e4fc73c89af68710d0f18e0cb4a4">更多...</a><br /></td></tr>
<tr class="separator:aa385e4fc73c89af68710d0f18e0cb4a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadc5bd874121ecae02a3998a8ebbcbcf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_aadc5bd874121ecae02a3998a8ebbcbcf.htm#aadc5bd874121ecae02a3998a8ebbcbcf">release</a> ()</td></tr>
<tr class="memdesc:aadc5bd874121ecae02a3998a8ebbcbcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">释放引用计数，为0时销毁对象  <a href="class_mg_layer_aadc5bd874121ecae02a3998a8ebbcbcf.htm#aadc5bd874121ecae02a3998a8ebbcbcf">更多...</a><br /></td></tr>
<tr class="separator:aadc5bd874121ecae02a3998a8ebbcbcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af958df9b7f4e7031444965cb7c5af267"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_af958df9b7f4e7031444965cb7c5af267.htm#af958df9b7f4e7031444965cb7c5af267">equals</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src) const</td></tr>
<tr class="memdesc:af958df9b7f4e7031444965cb7c5af267"><td class="mdescLeft">&#160;</td><td class="mdescRight">比较与另一同类对象是否相同  <a href="class_mg_layer_af958df9b7f4e7031444965cb7c5af267.htm#af958df9b7f4e7031444965cb7c5af267">更多...</a><br /></td></tr>
<tr class="separator:af958df9b7f4e7031444965cb7c5af267"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dda93bdab5da219b8ba8a47a0646516"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a5dda93bdab5da219b8ba8a47a0646516.htm#a5dda93bdab5da219b8ba8a47a0646516">getType</a> () const</td></tr>
<tr class="memdesc:a5dda93bdab5da219b8ba8a47a0646516"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回对象类型  <a href="class_mg_layer_a5dda93bdab5da219b8ba8a47a0646516.htm#a5dda93bdab5da219b8ba8a47a0646516">更多...</a><br /></td></tr>
<tr class="separator:a5dda93bdab5da219b8ba8a47a0646516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52eb5f42ced541ec472bb87f8244850a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a52eb5f42ced541ec472bb87f8244850a.htm#a52eb5f42ced541ec472bb87f8244850a">isKindOf</a> (int type) const</td></tr>
<tr class="memdesc:a52eb5f42ced541ec472bb87f8244850a"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回是否能转化为指定类型的对象，即本类为指定类或其派生类  <a href="class_mg_layer_a52eb5f42ced541ec472bb87f8244850a.htm#a52eb5f42ced541ec472bb87f8244850a">更多...</a><br /></td></tr>
<tr class="separator:a52eb5f42ced541ec472bb87f8244850a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_mg_shapes"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_mg_shapes')"><img src="closed.png" alt="-"/>&#160;Public 成员函数 继承自 <a class="el" href="class_mg_shapes.htm">MgShapes</a></td></tr>
<tr class="memitem:a5ecb00265735ee216cc44f21768e9242 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_shapes.htm">MgShapes</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a5ecb00265735ee216cc44f21768e9242.htm#a5ecb00265735ee216cc44f21768e9242">cloneShapes</a> () const</td></tr>
<tr class="memdesc:a5ecb00265735ee216cc44f21768e9242 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制出一个新图形列表对象  <a href="class_mg_shapes_a5ecb00265735ee216cc44f21768e9242.htm#a5ecb00265735ee216cc44f21768e9242">更多...</a><br /></td></tr>
<tr class="separator:a5ecb00265735ee216cc44f21768e9242 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13d76dccaa0c6f742a93b072f7fb9f20 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_shapes.htm">MgShapes</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a13d76dccaa0c6f742a93b072f7fb9f20.htm#a13d76dccaa0c6f742a93b072f7fb9f20">shallowCopy</a> () const</td></tr>
<tr class="memdesc:a13d76dccaa0c6f742a93b072f7fb9f20 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制出一个新图形列表对象，并添加所有图形的引用  <a href="class_mg_shapes_a13d76dccaa0c6f742a93b072f7fb9f20.htm#a13d76dccaa0c6f742a93b072f7fb9f20">更多...</a><br /></td></tr>
<tr class="separator:a13d76dccaa0c6f742a93b072f7fb9f20 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac318be8a1abd33700fdd2ea76641a78f inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_ac318be8a1abd33700fdd2ea76641a78f.htm#ac318be8a1abd33700fdd2ea76641a78f">getFirstShape</a> (void *&amp;it) const</td></tr>
<tr class="separator:ac318be8a1abd33700fdd2ea76641a78f inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a422bee3e64baf3316bc60d5dc6cc55cd inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a422bee3e64baf3316bc60d5dc6cc55cd.htm#a422bee3e64baf3316bc60d5dc6cc55cd">getNextShape</a> (void *&amp;it) const</td></tr>
<tr class="separator:a422bee3e64baf3316bc60d5dc6cc55cd inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9955a9a9f42dbccfb81a171ff3bb9f69 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a9955a9a9f42dbccfb81a171ff3bb9f69.htm#a9955a9a9f42dbccfb81a171ff3bb9f69">freeIterator</a> (void *&amp;it) const</td></tr>
<tr class="separator:a9955a9a9f42dbccfb81a171ff3bb9f69 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7bbfba26954507bbdbd43f0ce5c8bb6 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_af7bbfba26954507bbdbd43f0ce5c8bb6.htm#af7bbfba26954507bbdbd43f0ce5c8bb6">traverseByType</a> (int type, void(*c)(const <a class="el" href="class_mg_shape.htm">MgShape</a> *, void *), void *d)</td></tr>
<tr class="separator:af7bbfba26954507bbdbd43f0ce5c8bb6 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb1c27e41795f62e88b611afd838d7ac inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_abb1c27e41795f62e88b611afd838d7ac.htm#abb1c27e41795f62e88b611afd838d7ac">getShapeCount</a> () const</td></tr>
<tr class="separator:abb1c27e41795f62e88b611afd838d7ac inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a968eb8d3e1c9c4cfd3a10d4e0c87fa56 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a968eb8d3e1c9c4cfd3a10d4e0c87fa56.htm#a968eb8d3e1c9c4cfd3a10d4e0c87fa56">getShapeCountByTypeOrTag</a> (int type, int tag) const</td></tr>
<tr class="separator:a968eb8d3e1c9c4cfd3a10d4e0c87fa56 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d52d490bd58320524c10802f20b8abe inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a3d52d490bd58320524c10802f20b8abe.htm#a3d52d490bd58320524c10802f20b8abe">getShapeIndex</a> (int sid) const</td></tr>
<tr class="separator:a3d52d490bd58320524c10802f20b8abe inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a10fcd210e8890bbf94b98ef0bd9e46 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a4a10fcd210e8890bbf94b98ef0bd9e46.htm#a4a10fcd210e8890bbf94b98ef0bd9e46">getShapeAtIndex</a> (int index) const</td></tr>
<tr class="separator:a4a10fcd210e8890bbf94b98ef0bd9e46 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e5005aa77c3f2f1a3cc9a397e2b127f inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a4e5005aa77c3f2f1a3cc9a397e2b127f.htm#a4e5005aa77c3f2f1a3cc9a397e2b127f">getHeadShape</a> () const</td></tr>
<tr class="separator:a4e5005aa77c3f2f1a3cc9a397e2b127f inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a488fbdbd1bc9c58cdc38d4d815fbc170 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a488fbdbd1bc9c58cdc38d4d815fbc170.htm#a488fbdbd1bc9c58cdc38d4d815fbc170">getLastShape</a> () const</td></tr>
<tr class="separator:a488fbdbd1bc9c58cdc38d4d815fbc170 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefe424ca568002bd076936fcba3c9744 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_aefe424ca568002bd076936fcba3c9744.htm#aefe424ca568002bd076936fcba3c9744">findShape</a> (int sid) const</td></tr>
<tr class="separator:aefe424ca568002bd076936fcba3c9744 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70697aa7414f1a82825c85e7fc0c13d9 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a70697aa7414f1a82825c85e7fc0c13d9.htm#a70697aa7414f1a82825c85e7fc0c13d9">findShapeByTag</a> (int tag) const</td></tr>
<tr class="separator:a70697aa7414f1a82825c85e7fc0c13d9 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb6258f0250d2d506feef00511a7f22d inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_afb6258f0250d2d506feef00511a7f22d.htm#afb6258f0250d2d506feef00511a7f22d">findShapeByType</a> (int type) const</td></tr>
<tr class="separator:afb6258f0250d2d506feef00511a7f22d inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adeda365ad7c5025e794c7a57ae1a8ef9 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_adeda365ad7c5025e794c7a57ae1a8ef9.htm#adeda365ad7c5025e794c7a57ae1a8ef9">findShapeByTypeAndTag</a> (int type, int tag) const</td></tr>
<tr class="separator:adeda365ad7c5025e794c7a57ae1a8ef9 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad12a2ed4e6cbe62e2784525d44674f20 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_box2d.htm">Box2d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_ad12a2ed4e6cbe62e2784525d44674f20.htm#ad12a2ed4e6cbe62e2784525d44674f20">getExtent</a> () const</td></tr>
<tr class="separator:ad12a2ed4e6cbe62e2784525d44674f20 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a878f2add37dd26b411f01fcc2ef7a742 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a878f2add37dd26b411f01fcc2ef7a742.htm#a878f2add37dd26b411f01fcc2ef7a742">hitTest</a> (const <a class="el" href="class_box2d.htm">Box2d</a> &amp;limits, <a class="el" href="struct_mg_hit_result.htm">MgHitResult</a> &amp;res, <a class="el" href="class_mg_shapes_afc54f09ff1f1400c656a49684390ca41.htm#afc54f09ff1f1400c656a49684390ca41">Filter</a> filter=(<a class="el" href="class_mg_shapes_afc54f09ff1f1400c656a49684390ca41.htm#afc54f09ff1f1400c656a49684390ca41">Filter</a>) 0, void *data=(void *) 0) const</td></tr>
<tr class="separator:a878f2add37dd26b411f01fcc2ef7a742 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1b2987790e66ddd3684ae2753429b0a inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_aa1b2987790e66ddd3684ae2753429b0a.htm#aa1b2987790e66ddd3684ae2753429b0a">draw</a> (<a class="el" href="class_gi_graphics.htm">GiGraphics</a> &amp;gs, const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx=(const <a class="el" href="class_gi_context.htm">GiContext</a> *) 0) const</td></tr>
<tr class="separator:aa1b2987790e66ddd3684ae2753429b0a inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab26334d45bfb537c3f0dc492781c9924 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_ab26334d45bfb537c3f0dc492781c9924.htm#ab26334d45bfb537c3f0dc492781c9924">dyndraw</a> (int mode, <a class="el" href="class_gi_graphics.htm">GiGraphics</a> &amp;gs, const <a class="el" href="class_gi_context.htm">GiContext</a> *ctx, int segment, const int *ignoreIds=(const int *) 0) const</td></tr>
<tr class="separator:ab26334d45bfb537c3f0dc492781c9924 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09c6ffbd65a5b97f504137967c94a036 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a09c6ffbd65a5b97f504137967c94a036.htm#a09c6ffbd65a5b97f504137967c94a036">save</a> (MgStorage *s, int startIndex=0) const</td></tr>
<tr class="separator:a09c6ffbd65a5b97f504137967c94a036 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73d6aeb545f8341b5cbe1f07fedcf6ff inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a73d6aeb545f8341b5cbe1f07fedcf6ff.htm#a73d6aeb545f8341b5cbe1f07fedcf6ff">saveShape</a> (MgStorage *s, const <a class="el" href="class_mg_shape.htm">MgShape</a> *shape, int index) const</td></tr>
<tr class="separator:a73d6aeb545f8341b5cbe1f07fedcf6ff inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95250a79258f4ba2798de32cedb1b094 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a95250a79258f4ba2798de32cedb1b094.htm#a95250a79258f4ba2798de32cedb1b094">load</a> (MgShapeFactory *factory, MgStorage *s, bool addOnly=false)</td></tr>
<tr class="separator:a95250a79258f4ba2798de32cedb1b094 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41b29c48d2ea8c331925b1d6153abb55 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a41b29c48d2ea8c331925b1d6153abb55.htm#a41b29c48d2ea8c331925b1d6153abb55">setNewShapeID</a> (int sid)</td></tr>
<tr class="separator:a41b29c48d2ea8c331925b1d6153abb55 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ec606edffdde8f1ce5ecc722d1ad04 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a75ec606edffdde8f1ce5ecc722d1ad04.htm#a75ec606edffdde8f1ce5ecc722d1ad04">clear</a> ()</td></tr>
<tr class="memdesc:a75ec606edffdde8f1ce5ecc722d1ad04 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">删除所有图形  <a href="class_mg_shapes_a75ec606edffdde8f1ce5ecc722d1ad04.htm#a75ec606edffdde8f1ce5ecc722d1ad04">更多...</a><br /></td></tr>
<tr class="separator:a75ec606edffdde8f1ce5ecc722d1ad04 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e43003b9030c2f41757d1a659b2639 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_ae1e43003b9030c2f41757d1a659b2639.htm#ae1e43003b9030c2f41757d1a659b2639">clearCachedData</a> ()</td></tr>
<tr class="memdesc:ae1e43003b9030c2f41757d1a659b2639 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">释放临时数据内存  <a href="class_mg_shapes_ae1e43003b9030c2f41757d1a659b2639.htm#ae1e43003b9030c2f41757d1a659b2639">更多...</a><br /></td></tr>
<tr class="separator:ae1e43003b9030c2f41757d1a659b2639 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e95a307cc05c18d356a4e7950cf95b8 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a8e95a307cc05c18d356a4e7950cf95b8.htm#a8e95a307cc05c18d356a4e7950cf95b8">copyShapes</a> (const <a class="el" href="class_mg_shapes.htm">MgShapes</a> *src, bool deeply=true, bool needClear=true)</td></tr>
<tr class="memdesc:a8e95a307cc05c18d356a4e7950cf95b8 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制(默认为深拷贝)每一个图形，浅拷贝则添加图形的引用计数且不改变图形的拥有者  <a href="class_mg_shapes_a8e95a307cc05c18d356a4e7950cf95b8.htm#a8e95a307cc05c18d356a4e7950cf95b8">更多...</a><br /></td></tr>
<tr class="separator:a8e95a307cc05c18d356a4e7950cf95b8 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e0fc90c6b8de59d02c0e8f171854346 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a1e0fc90c6b8de59d02c0e8f171854346.htm#a1e0fc90c6b8de59d02c0e8f171854346">addShape</a> (const <a class="el" href="class_mg_shape.htm">MgShape</a> &amp;src)</td></tr>
<tr class="memdesc:a1e0fc90c6b8de59d02c0e8f171854346 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制出新图形并添加到图形列表中  <a href="class_mg_shapes_a1e0fc90c6b8de59d02c0e8f171854346.htm#a1e0fc90c6b8de59d02c0e8f171854346">更多...</a><br /></td></tr>
<tr class="separator:a1e0fc90c6b8de59d02c0e8f171854346 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363d1799bc57458c4bbea8c2fdf79643 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a363d1799bc57458c4bbea8c2fdf79643.htm#a363d1799bc57458c4bbea8c2fdf79643">addShapeDirect</a> (<a class="el" href="class_mg_shape.htm">MgShape</a> *shape, bool force=true)</td></tr>
<tr class="memdesc:a363d1799bc57458c4bbea8c2fdf79643 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加新图形到图形列表中，自动更新图形的包络框  <a href="class_mg_shapes_a363d1799bc57458c4bbea8c2fdf79643.htm#a363d1799bc57458c4bbea8c2fdf79643">更多...</a><br /></td></tr>
<tr class="separator:a363d1799bc57458c4bbea8c2fdf79643 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86143c6e43602fa885e6bb2f7b32b309 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a86143c6e43602fa885e6bb2f7b32b309.htm#a86143c6e43602fa885e6bb2f7b32b309">updateShape</a> (<a class="el" href="class_mg_shape.htm">MgShape</a> *shape, bool force=true)</td></tr>
<tr class="memdesc:a86143c6e43602fa885e6bb2f7b32b309 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">更新为新的图形，该图形从原来图形克隆得到. 原图形对象会被删除!  <a href="class_mg_shapes_a86143c6e43602fa885e6bb2f7b32b309.htm#a86143c6e43602fa885e6bb2f7b32b309">更多...</a><br /></td></tr>
<tr class="separator:a86143c6e43602fa885e6bb2f7b32b309 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c733fa37f5dfc2e55fd1c15c93d413 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a86c733fa37f5dfc2e55fd1c15c93d413.htm#a86c733fa37f5dfc2e55fd1c15c93d413">updateShape</a> (const <a class="el" href="class_mg_shape.htm">MgShape</a> *&amp;oldsp, <a class="el" href="class_mg_shape.htm">MgShape</a> *newsp)</td></tr>
<tr class="memdesc:a86c733fa37f5dfc2e55fd1c15c93d413 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">更新为新的图形，该图形从原来图形克隆得到. 原图形对象(oldsp)会被释放并指向新的图形对象  <a href="class_mg_shapes_a86c733fa37f5dfc2e55fd1c15c93d413.htm#a86c733fa37f5dfc2e55fd1c15c93d413">更多...</a><br /></td></tr>
<tr class="separator:a86c733fa37f5dfc2e55fd1c15c93d413 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8d54841720d4105ab5dfa11c1b5d683 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_ab8d54841720d4105ab5dfa11c1b5d683.htm#ab8d54841720d4105ab5dfa11c1b5d683">reorderShapes</a> (int n, const int *ids)</td></tr>
<tr class="memdesc:ab8d54841720d4105ab5dfa11c1b5d683 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">指定新的顺序  <a href="class_mg_shapes_ab8d54841720d4105ab5dfa11c1b5d683.htm#ab8d54841720d4105ab5dfa11c1b5d683">更多...</a><br /></td></tr>
<tr class="separator:ab8d54841720d4105ab5dfa11c1b5d683 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33dabc24057176a4a4a579671de839c9 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a33dabc24057176a4a4a579671de839c9.htm#a33dabc24057176a4a4a579671de839c9">cloneShape</a> (int sid) const</td></tr>
<tr class="memdesc:a33dabc24057176a4a4a579671de839c9 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">复制出一个新图形对象  <a href="class_mg_shapes_a33dabc24057176a4a4a579671de839c9.htm#a33dabc24057176a4a4a579671de839c9">更多...</a><br /></td></tr>
<tr class="separator:a33dabc24057176a4a4a579671de839c9 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0ecbf81c3b366810b327d19a998001f inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_af0ecbf81c3b366810b327d19a998001f.htm#af0ecbf81c3b366810b327d19a998001f">transform</a> (const <a class="el" href="class_matrix2d.htm">Matrix2d</a> &amp;mat)</td></tr>
<tr class="memdesc:af0ecbf81c3b366810b327d19a998001f inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">对每个图形进行变形  <a href="class_mg_shapes_af0ecbf81c3b366810b327d19a998001f.htm#af0ecbf81c3b366810b327d19a998001f">更多...</a><br /></td></tr>
<tr class="separator:af0ecbf81c3b366810b327d19a998001f inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e37befdcdf955d40a82615c7cfcae21 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a1e37befdcdf955d40a82615c7cfcae21.htm#a1e37befdcdf955d40a82615c7cfcae21">removeShape</a> (int sid)</td></tr>
<tr class="memdesc:a1e37befdcdf955d40a82615c7cfcae21 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">移除一个图形  <a href="class_mg_shapes_a1e37befdcdf955d40a82615c7cfcae21.htm#a1e37befdcdf955d40a82615c7cfcae21">更多...</a><br /></td></tr>
<tr class="separator:a1e37befdcdf955d40a82615c7cfcae21 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8beb26287e83fb7c99987d23254c525 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_aa8beb26287e83fb7c99987d23254c525.htm#aa8beb26287e83fb7c99987d23254c525">moveShapeTo</a> (int sid, <a class="el" href="class_mg_shapes.htm">MgShapes</a> *dest)</td></tr>
<tr class="memdesc:aa8beb26287e83fb7c99987d23254c525 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">将一个图形移到另一个图形列表  <a href="class_mg_shapes_aa8beb26287e83fb7c99987d23254c525.htm#aa8beb26287e83fb7c99987d23254c525">更多...</a><br /></td></tr>
<tr class="separator:aa8beb26287e83fb7c99987d23254c525 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addcf0061cc175690237a3627f8cefd26 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_addcf0061cc175690237a3627f8cefd26.htm#addcf0061cc175690237a3627f8cefd26">copyShapesTo</a> (<a class="el" href="class_mg_shapes.htm">MgShapes</a> *dest) const</td></tr>
<tr class="memdesc:addcf0061cc175690237a3627f8cefd26 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">将所有图形复制到另一个图形列表  <a href="class_mg_shapes_addcf0061cc175690237a3627f8cefd26.htm#addcf0061cc175690237a3627f8cefd26">更多...</a><br /></td></tr>
<tr class="separator:addcf0061cc175690237a3627f8cefd26 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72e1fb5b6d162a81c2b61e4fc5fdab17 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a72e1fb5b6d162a81c2b61e4fc5fdab17.htm#a72e1fb5b6d162a81c2b61e4fc5fdab17">bringToFront</a> (int sid)</td></tr>
<tr class="memdesc:a72e1fb5b6d162a81c2b61e4fc5fdab17 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">移动图形到最后，以便显示在最顶部  <a href="class_mg_shapes_a72e1fb5b6d162a81c2b61e4fc5fdab17.htm#a72e1fb5b6d162a81c2b61e4fc5fdab17">更多...</a><br /></td></tr>
<tr class="separator:a72e1fb5b6d162a81c2b61e4fc5fdab17 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9a144722eaddeb78f0bc718bf640119 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_ad9a144722eaddeb78f0bc718bf640119.htm#ad9a144722eaddeb78f0bc718bf640119">bringToBack</a> (int sid)</td></tr>
<tr class="memdesc:ad9a144722eaddeb78f0bc718bf640119 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">移动图形到开始处，以便显示在最下面  <a href="class_mg_shapes_ad9a144722eaddeb78f0bc718bf640119.htm#ad9a144722eaddeb78f0bc718bf640119">更多...</a><br /></td></tr>
<tr class="separator:ad9a144722eaddeb78f0bc718bf640119 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc88ab9f382d8a39b28c3af5dd5706bc inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_acc88ab9f382d8a39b28c3af5dd5706bc.htm#acc88ab9f382d8a39b28c3af5dd5706bc">bringToIndex</a> (int sid, int index)</td></tr>
<tr class="memdesc:acc88ab9f382d8a39b28c3af5dd5706bc inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">移动图形到指定序号位置  <a href="class_mg_shapes_acc88ab9f382d8a39b28c3af5dd5706bc.htm#acc88ab9f382d8a39b28c3af5dd5706bc">更多...</a><br /></td></tr>
<tr class="separator:acc88ab9f382d8a39b28c3af5dd5706bc inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57c72d17530b7c617df2cbf8c744cd9c inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_object.htm">MgObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a57c72d17530b7c617df2cbf8c744cd9c.htm#a57c72d17530b7c617df2cbf8c744cd9c">getOwner</a> () const</td></tr>
<tr class="memdesc:a57c72d17530b7c617df2cbf8c744cd9c inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回拥有者对象  <a href="class_mg_shapes_a57c72d17530b7c617df2cbf8c744cd9c.htm#a57c72d17530b7c617df2cbf8c744cd9c">更多...</a><br /></td></tr>
<tr class="separator:a57c72d17530b7c617df2cbf8c744cd9c inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e84251683392edfc5639fb7c4704c6a inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a7e84251683392edfc5639fb7c4704c6a.htm#a7e84251683392edfc5639fb7c4704c6a">getIndex</a> () const</td></tr>
<tr class="memdesc:a7e84251683392edfc5639fb7c4704c6a inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回图层序号  <a href="class_mg_shapes_a7e84251683392edfc5639fb7c4704c6a.htm#a7e84251683392edfc5639fb7c4704c6a">更多...</a><br /></td></tr>
<tr class="separator:a7e84251683392edfc5639fb7c4704c6a inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a042a674f8d186a8dcb6881115206e184 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a042a674f8d186a8dcb6881115206e184.htm#a042a674f8d186a8dcb6881115206e184">toHandle</a> () const</td></tr>
<tr class="memdesc:a042a674f8d186a8dcb6881115206e184 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到句柄，用于跨库转换  <a href="class_mg_shapes_a042a674f8d186a8dcb6881115206e184.htm#a042a674f8d186a8dcb6881115206e184">更多...</a><br /></td></tr>
<tr class="separator:a042a674f8d186a8dcb6881115206e184 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a059dbe7ff09d35bf3c3c60a53484be50 inherit pub_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a059dbe7ff09d35bf3c3c60a53484be50.htm#a059dbe7ff09d35bf3c3c60a53484be50">addRef</a> ()</td></tr>
<tr class="memdesc:a059dbe7ff09d35bf3c3c60a53484be50 inherit pub_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">添加引用计数  <a href="class_mg_shapes_a059dbe7ff09d35bf3c3c60a53484be50.htm#a059dbe7ff09d35bf3c3c60a53484be50">更多...</a><br /></td></tr>
<tr class="separator:a059dbe7ff09d35bf3c3c60a53484be50 inherit pub_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_class_mg_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_class_mg_object')"><img src="closed.png" alt="-"/>&#160;Public 成员函数 继承自 <a class="el" href="class_mg_object.htm">MgObject</a></td></tr>
<tr class="memitem:a488ef143ee9edfd5daef6a7fe2d72179 inherit pub_methods_class_mg_object"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_mg_object.htm">MgObject</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_object_a488ef143ee9edfd5daef6a7fe2d72179.htm#a488ef143ee9edfd5daef6a7fe2d72179">operator=</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src)</td></tr>
<tr class="separator:a488ef143ee9edfd5daef6a7fe2d72179 inherit pub_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39beb9ae60c954540c67580e17816618 inherit pub_methods_class_mg_object"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_object_a39beb9ae60c954540c67580e17816618.htm#a39beb9ae60c954540c67580e17816618">operator==</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src) const</td></tr>
<tr class="separator:a39beb9ae60c954540c67580e17816618 inherit pub_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7275ce22b52bab62a7331471e2ab0a0d inherit pub_methods_class_mg_object"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_object_a7275ce22b52bab62a7331471e2ab0a0d.htm#a7275ce22b52bab62a7331471e2ab0a0d">operator!=</a> (const <a class="el" href="class_mg_object.htm">MgObject</a> &amp;src) const</td></tr>
<tr class="separator:a7275ce22b52bab62a7331471e2ab0a0d inherit pub_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
静态 Public 成员函数</h2></td></tr>
<tr class="memitem:a6325bed30ece265aea14957072bb7247"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a6325bed30ece265aea14957072bb7247.htm#a6325bed30ece265aea14957072bb7247">Type</a> ()</td></tr>
<tr class="memdesc:a6325bed30ece265aea14957072bb7247"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回本对象的类型  <a href="class_mg_layer_a6325bed30ece265aea14957072bb7247.htm#a6325bed30ece265aea14957072bb7247">更多...</a><br /></td></tr>
<tr class="separator:a6325bed30ece265aea14957072bb7247"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8a7328580e1923940d8819643a2a091"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_mg_layer.htm">MgLayer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_aa8a7328580e1923940d8819643a2a091.htm#aa8a7328580e1923940d8819643a2a091">create</a> (<a class="el" href="class_mg_shape_doc.htm">MgShapeDoc</a> *<a class="el" href="class_mg_layer_a5741bc4fff56c86718e4205fa3373568.htm#a5741bc4fff56c86718e4205fa3373568">doc</a>, int index)</td></tr>
<tr class="memdesc:aa8a7328580e1923940d8819643a2a091"><td class="mdescLeft">&#160;</td><td class="mdescRight">创建图层对象  <a href="class_mg_layer_aa8a7328580e1923940d8819643a2a091.htm#aa8a7328580e1923940d8819643a2a091">更多...</a><br /></td></tr>
<tr class="separator:aa8a7328580e1923940d8819643a2a091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_mg_shapes"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_class_mg_shapes')"><img src="closed.png" alt="-"/>&#160;静态 Public 成员函数 继承自 <a class="el" href="class_mg_shapes.htm">MgShapes</a></td></tr>
<tr class="memitem:a7ce6b979cb91cfe6a1a3052a13bcd50b inherit pub_static_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a7ce6b979cb91cfe6a1a3052a13bcd50b.htm#a7ce6b979cb91cfe6a1a3052a13bcd50b">Type</a> ()</td></tr>
<tr class="memdesc:a7ce6b979cb91cfe6a1a3052a13bcd50b inherit pub_static_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">返回本对象的类型  <a href="class_mg_shapes_a7ce6b979cb91cfe6a1a3052a13bcd50b.htm#a7ce6b979cb91cfe6a1a3052a13bcd50b">更多...</a><br /></td></tr>
<tr class="separator:a7ce6b979cb91cfe6a1a3052a13bcd50b inherit pub_static_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad12a5c93925cbe794718b1594de3958c inherit pub_static_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_mg_shapes.htm">MgShapes</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_ad12a5c93925cbe794718b1594de3958c.htm#ad12a5c93925cbe794718b1594de3958c">create</a> (<a class="el" href="class_mg_object.htm">MgObject</a> *owner=(<a class="el" href="class_mg_object.htm">MgObject</a> *) 0, int index=-1)</td></tr>
<tr class="memdesc:ad12a5c93925cbe794718b1594de3958c inherit pub_static_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">创建图形列表  <a href="class_mg_shapes_ad12a5c93925cbe794718b1594de3958c.htm#ad12a5c93925cbe794718b1594de3958c">更多...</a><br /></td></tr>
<tr class="separator:ad12a5c93925cbe794718b1594de3958c inherit pub_static_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a064c1cc8f7a8e89b6f1bd04f8c411db4 inherit pub_static_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="class_mg_shape.htm">MgShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a064c1cc8f7a8e89b6f1bd04f8c411db4.htm#a064c1cc8f7a8e89b6f1bd04f8c411db4">getParentShape</a> (const <a class="el" href="class_mg_shape.htm">MgShape</a> *shape)</td></tr>
<tr class="memdesc:a064c1cc8f7a8e89b6f1bd04f8c411db4 inherit pub_static_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">得到上一级图形对象，或NULL  <a href="class_mg_shapes_a064c1cc8f7a8e89b6f1bd04f8c411db4.htm#a064c1cc8f7a8e89b6f1bd04f8c411db4">更多...</a><br /></td></tr>
<tr class="separator:a064c1cc8f7a8e89b6f1bd04f8c411db4 inherit pub_static_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1fab288ddc761c46e96851da5ac0feb inherit pub_static_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_mg_shapes.htm">MgShapes</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_af1fab288ddc761c46e96851da5ac0feb.htm#af1fab288ddc761c46e96851da5ac0feb">fromHandle</a> (long h)</td></tr>
<tr class="memdesc:af1fab288ddc761c46e96851da5ac0feb inherit pub_static_methods_class_mg_shapes"><td class="mdescLeft">&#160;</td><td class="mdescRight">转为对象  <a href="class_mg_shapes_af1fab288ddc761c46e96851da5ac0feb.htm#af1fab288ddc761c46e96851da5ac0feb">更多...</a><br /></td></tr>
<tr class="separator:af1fab288ddc761c46e96851da5ac0feb inherit pub_static_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_class_mg_object"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_class_mg_object')"><img src="closed.png" alt="-"/>&#160;静态 Public 成员函数 继承自 <a class="el" href="class_mg_object.htm">MgObject</a></td></tr>
<tr class="memitem:acdb0a8b9516dda55cfb5e458bf8bb04c inherit pub_static_methods_class_mg_object"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:acdb0a8b9516dda55cfb5e458bf8bb04c inherit pub_static_methods_class_mg_object"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_mg_object_acdb0a8b9516dda55cfb5e458bf8bb04c.htm#acdb0a8b9516dda55cfb5e458bf8bb04c">release_pointer</a> (T *&amp;p)</td></tr>
<tr class="separator:acdb0a8b9516dda55cfb5e458bf8bb04c inherit pub_static_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected 成员函数</h2></td></tr>
<tr class="memitem:a42692b9b8038c64ce20dd2ce557af542"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a42692b9b8038c64ce20dd2ce557af542.htm#a42692b9b8038c64ce20dd2ce557af542">MgLayer</a> (<a class="el" href="class_mg_shape_doc.htm">MgShapeDoc</a> *<a class="el" href="class_mg_layer_a5741bc4fff56c86718e4205fa3373568.htm#a5741bc4fff56c86718e4205fa3373568">doc</a>, int index)</td></tr>
<tr class="separator:a42692b9b8038c64ce20dd2ce557af542"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64d94e2d11f343f1aaa9b8a7433ebcf5"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a64d94e2d11f343f1aaa9b8a7433ebcf5.htm#a64d94e2d11f343f1aaa9b8a7433ebcf5">~MgLayer</a> ()</td></tr>
<tr class="separator:a64d94e2d11f343f1aaa9b8a7433ebcf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dbb0960d48c1193ba115edc9c1bfc12"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_a7dbb0960d48c1193ba115edc9c1bfc12.htm#a7dbb0960d48c1193ba115edc9c1bfc12">saveExtra</a> (MgStorage *s) const</td></tr>
<tr class="separator:a7dbb0960d48c1193ba115edc9c1bfc12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad889020359313d98b2fdc13febe46692"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_layer_ad889020359313d98b2fdc13febe46692.htm#ad889020359313d98b2fdc13febe46692">loadExtra</a> (MgStorage *s)</td></tr>
<tr class="separator:ad889020359313d98b2fdc13febe46692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_class_mg_shapes"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_mg_shapes')"><img src="closed.png" alt="-"/>&#160;Protected 成员函数 继承自 <a class="el" href="class_mg_shapes.htm">MgShapes</a></td></tr>
<tr class="memitem:a2b3052cd9c95cd31e3f3831d0d401a30 inherit pro_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a2b3052cd9c95cd31e3f3831d0d401a30.htm#a2b3052cd9c95cd31e3f3831d0d401a30">MgShapes</a> (<a class="el" href="class_mg_object.htm">MgObject</a> *owner, int index)</td></tr>
<tr class="separator:a2b3052cd9c95cd31e3f3831d0d401a30 inherit pro_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f9768c14e67429271846762fe480400 inherit pro_methods_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a1f9768c14e67429271846762fe480400.htm#a1f9768c14e67429271846762fe480400">~MgShapes</a> ()</td></tr>
<tr class="separator:a1f9768c14e67429271846762fe480400 inherit pro_methods_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_class_mg_object"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_class_mg_object')"><img src="closed.png" alt="-"/>&#160;Protected 成员函数 继承自 <a class="el" href="class_mg_object.htm">MgObject</a></td></tr>
<tr class="memitem:a9318d93043fc20f4233cc4eb9f7fe38b inherit pro_methods_class_mg_object"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_object_a9318d93043fc20f4233cc4eb9f7fe38b.htm#a9318d93043fc20f4233cc4eb9f7fe38b">~MgObject</a> ()</td></tr>
<tr class="separator:a9318d93043fc20f4233cc4eb9f7fe38b inherit pro_methods_class_mg_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private 属性</h2></td></tr>
<tr class="memitem:afbe6738daef339daed28b283c0962a32"><td class="memItemLeft" >union {</td></tr>
<tr class="memitem:a5594532cd7f0921fbebcb7d21b4962c4"><td class="memItemLeft" >&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="class_mg_layer_ac346f730ae6bca02864ca454079c986b.htm#ac346f730ae6bca02864ca454079c986b">_flags</a></td></tr>
<tr class="separator:a5594532cd7f0921fbebcb7d21b4962c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a205dd98921e42e5c2d8e0e3c71bf81c8"><td class="memItemLeft" >&#160;&#160;&#160;struct {</td></tr>
<tr class="memitem:a83e62b14054744535d5ca810cd618bdf"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="class_mg_layer_ac8b28c395c932a77096b95b7d3829f74.htm#ac8b28c395c932a77096b95b7d3829f74">hided</a>:1</td></tr>
<tr class="separator:a83e62b14054744535d5ca810cd618bdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bd9526f758687f2f18d295f05e7275a"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="class_mg_layer_a65ffaffcfae916dfff59a654f75b947a.htm#a65ffaffcfae916dfff59a654f75b947a">locked</a>:1</td></tr>
<tr class="separator:a0bd9526f758687f2f18d295f05e7275a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a205dd98921e42e5c2d8e0e3c71bf81c8"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;&#160;&#160;<a class="el" href="class_mg_layer_aac808b94aa6494e36352835b167b8355.htm#aac808b94aa6494e36352835b167b8355">_bits</a></td></tr>
<tr class="separator:a205dd98921e42e5c2d8e0e3c71bf81c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbe6738daef339daed28b283c0962a32"><td class="memItemLeft" valign="top">};&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:afbe6738daef339daed28b283c0962a32"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
额外继承的成员函数</h2></td></tr>
<tr class="inherit_header pub_types_class_mg_shapes"><td colspan="2" onclick="javascript:toggleInherit('pub_types_class_mg_shapes')"><img src="closed.png" alt="-"/>&#160;Public 类型 继承自 <a class="el" href="class_mg_shapes.htm">MgShapes</a></td></tr>
<tr class="memitem:afc54f09ff1f1400c656a49684390ca41 inherit pub_types_class_mg_shapes"><td class="memItemLeft" align="right" valign="top">typedef bool(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_afc54f09ff1f1400c656a49684390ca41.htm#afc54f09ff1f1400c656a49684390ca41">Filter</a>) (const <a class="el" href="class_mg_shape.htm">MgShape</a> *sp, void *data)</td></tr>
<tr class="separator:afc54f09ff1f1400c656a49684390ca41 inherit pub_types_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_class_mg_shapes"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_class_mg_shapes')"><img src="closed.png" alt="-"/>&#160;Protected 属性 继承自 <a class="el" href="class_mg_shapes.htm">MgShapes</a></td></tr>
<tr class="memitem:a577f51610c3714572109edaa0978d769 inherit pro_attribs_class_mg_shapes"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_mg_shapes_1_1_i.htm">I</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mg_shapes_a577f51610c3714572109edaa0978d769.htm#a577f51610c3714572109edaa0978d769">im</a></td></tr>
<tr class="separator:a577f51610c3714572109edaa0978d769 inherit pro_attribs_class_mg_shapes"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">详细描述</h2>
<div class="textblock"><p>图层类 </p>
</div><hr/>该类的文档由以下文件生成:<ul>
<li><a class="el" href="mglayer_8h.htm">mglayer.h</a></li>
<li><a class="el" href="mglayer_8cpp.htm">mglayer.cpp</a></li>
</ul>
</div><!-- contents -->
<hr size="1"><address style="margin: 0 10px"><small>
<a href="https://github.com/rhcad/touchvg" target="_blank">通用矢量图形框架</a>，
版权所有 (C) <a href="https://github.com/rhcad" target="_blank">张云贵</a> 2004-2017，BSD 开源许可证
</small></address>
</body>
</html>